rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) == 1
  name: BIRESUS_n String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) == 1
  name: BIRESUS_n String(1)
- description: Primary Care Trust of Provider  is String(3)
  expr: is.character(PCTTREAT) & nchar(PCTTREAT) == 3
  name: PCTTREAT String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", PCTTREAT)
  name: PCTTREAT 3an

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) == 1
  name: BIRESUS_n String(1)
- description: Primary Care Trust of Provider  is String(3)
  expr: is.character(PCTTREAT) & nchar(PCTTREAT) == 3
  name: PCTTREAT String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", PCTTREAT)
  name: PCTTREAT 3an
- description: Number of Babies is String(1)
  expr: is.character(NUMBABY) & nchar(NUMBABY) == 1
  name: NUMBABY String(1)

rules:
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) ==
    2
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) == 1020222320202223
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & nchar(FINDING) == 46000
  name: FINDING String(4-6000)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) == 1
  name: BIRESUS_n String(1)
- description: Primary Care Trust of Provider  is String(3)
  expr: is.character(PCTTREAT) & nchar(PCTTREAT) == 3
  name: PCTTREAT String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", PCTTREAT)
  name: PCTTREAT 3an
- description: Number of Babies is String(1)
  expr: is.character(NUMBABY) & nchar(NUMBABY) == 1
  name: NUMBABY String(1)
- description: Alcohol Attributable Fraction - Broad Definition is String(17)
  expr: is.character(ALCBRDFRAC) & nchar(ALCBRDFRAC) == 17
  name: ALCBRDFRAC String(17)
- expr: grepl("^\d*\.?\d*$", ALCBRDFRAC)
  name: ALCBRDFRAC n.nnnnnnnnnnnnnnn

