rules:
- description: Number of Valid Augmented Care Period Groups is Number
  expr: is.integer(A_NUMACP)
  name: A_NUMACP Number
- expr: grepl("^\d$", A_NUMACP)
  name: A_NUMACP n
- description: Augmented Care Period Destination is String(2)
  expr: is.character(ACPDISP_n) & nchar(ACPDISP_n) == 2
  name: ACPDISP_n String(2)
- description: Augmented Care Period Data Quality Indicator  is String(1)
  expr: is.character(ACPDQIND_n) & nchar(ACPDQIND_n) == 1
  name: ACPDQIND_n String(1)
- description: Augmented Care Period End Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", ACPEND_n)
  name: ACPEND_n Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPEND_n)
  name: ACPEND_n YYYY-MM-DD
- description: Augmented Care Period Local Identifier is Number
  expr: is.integer(ACPLCID_n)
  name: ACPLCID_n Number
- expr: grepl("^\d$", ACPLCID_n)
  name: ACPLCID_n n
- description: Augmented Care Location is String(2)
  expr: is.character(ACPLOC_n) & nchar(ACPLOC_n) == 2
  name: ACPLOC_n String(2)
- description: Augmented Care Period Number is Number
  expr: is.integer(ACPN_n)
  name: ACPN_n Number
- expr: grepl("^\d$", ACPN_n)
  name: ACPN_n 2n
- description: Augmented Care Period Outcome Indicator is String(2)
  expr: is.character(ACPOUT_n) & nchar(ACPOUT_n) == 2
  name: ACPOUT_n String(2)
- description: Augmented Care Period Planned Indicator is String(1)
  expr: is.character(ACPPLAN_n) & nchar(ACPPLAN_n) == 1
  name: ACPPLAN_n String(1)
- description: Augmented Care Period Source is String(2)
  expr: is.character(ACPSOUR_n) & nchar(ACPSOUR_n) == 2
  name: ACPSOUR_n String(2)
- description: Augmented Care Period Specialty Function Code is String(3)
  expr: is.character(ACPSPEF_n) & nchar(ACPSPEF_n) == 3
  name: ACPSPEF_n String(3)
- description: Augmented Care Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", ACPSTAR_n)
  name: ACPSTAR_n Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPSTAR_n)
  name: ACPSTAR_n YYYY-MM-DD
- description: Ambulatory Care Sensitive Condition Flag is Number
  expr: is.integer(ACSCFLAG)
  name: ACSCFLAG Number
- description: Age at Activity Date is Number
  expr: is.integer(ACTIVAGE)
  name: ACTIVAGE Number
- expr: grepl("^\d$", ACTIVAGE)
  name: ACTIVAGE max 3n
- description: Age on Admission is Number
  expr: is.integer(ADMIAGE)
  name: ADMIAGE Number
- description: Admission Date (Hospital Provider Spell) is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", ADMIDATE)
  name: ADMIDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ADMIDATE)
  name: ADMIDATE YYYY-MM-DD
- description: Method of Admission is String(2)
  expr: is.character(ADMIMETH) & nchar(ADMIMETH) == 2
  name: ADMIMETH String(2)
- description: Administrative Category Code on Admission is String(2)
  expr: is.character(ADMINCAT) & nchar(ADMINCAT) == 2
  name: ADMINCAT String(2)
- description: Administrative Category Code at Start of Episode is String(2)
  expr: is.character(ADMINCATST) & nchar(ADMINCATST) == 2
  name: ADMINCATST String(2)
- description: Source of Admission is String(2)
  expr: is.character(ADMISORC) & nchar(ADMISORC) == 2
  name: ADMISORC String(2)
- description: Psychiatric History on Admission is String(1)
  expr: is.character(ADMISTAT) & nchar(ADMISTAT) == 1
  name: ADMISTAT String(1)
- description: 'A&E Record Identifier is String(12) (2013-14 to 2020-21)

    String(19) (2021-22 onwards)

    '
  expr: is.character(AEKEY) & (nchar(AEKEY) == 12 | nchar(AEKEY) == 19)
  name: 'AEKEY String(12) (2013-14 to 2020-21)

    String(19) (2021-22 onwards)

    '
- description: Alcohol Related Diagnosis Code - Broad Definition is String(4)
  expr: is.character(ALCBRDDIAG) & nchar(ALCBRDDIAG) == 4
  name: ALCBRDDIAG String(4)
- description: Alcohol Attributable Fraction - Broad Definition is String(17)
  expr: is.character(ALCBRDFRAC) & nchar(ALCBRDFRAC) == 17
  name: ALCBRDFRAC String(17)
- expr: grepl("^\d*\.?\d*$", ALCBRDFRAC)
  name: ALCBRDFRAC n.nnnnnnnnnnnnnnn
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) == 10
  name: ALCDIAG String(10)
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) == 4
  name: ALCDIAG_4 String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: Principal Alcohol Related Fraction is String(17)
  expr: is.character(ALCFRAC) & nchar(ALCFRAC) == 17
  name: ALCFRAC String(17)
- expr: grepl("^\d*\.?\d*$", ALCFRAC)
  name: ALCFRAC n.nn
- description: Alcohol Related Diagnosis Code - Narrow Definition is String(4)
  expr: is.character(ALCNRWDIAG) & nchar(ALCNRWDIAG) == 4
  name: ALCNRWDIAG String(4)
- description: Alcohol Attributable Fraction - Narrow Definition is String(17)
  expr: is.character(ALCNRWFRAC) & nchar(ALCNRWFRAC) == 17
  name: ALCNRWFRAC String(17)
- expr: grepl("^\d*\.?\d*$", ALCNRWFRAC)
  name: ALCNRWFRAC n.nnnnnnnnnnnnnnn
- description: Gestation Period in Weeks at First Antenatal Assessment is Number
  expr: is.integer(ANAGEST)
  name: ANAGEST Number
- expr: grepl("^\d$", ANAGEST)
  name: ANAGEST 2n
- description: First Antenatal Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", ANASDATE)
  name: ANASDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ANASDATE)
  name: ANASDATE YYYY-MM-DD
- description: Antenatal Days of Stay is Number
  expr: is.integer(ANTEDUR)
  name: ANTEDUR Number
- expr: grepl("^\d$", ANTEDUR)
  name: ANTEDUR 3n
- description: Area Team of GP Practice  is String(3)
  expr: is.character(AT_GP_PRACTICE) & nchar(AT_GP_PRACTICE) == 3
  name: AT_GP_PRACTICE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", AT_GP_PRACTICE)
  name: AT_GP_PRACTICE ann
- description: Area Team of Residence  is String(3)
  expr: is.character(AT_RESIDENCE) & nchar(AT_RESIDENCE) == 3
  name: AT_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", AT_RESIDENCE)
  name: AT_RESIDENCE ann
- description: Area Team of Treatment  is String(3)
  expr: is.character(AT_TREATMENT) & nchar(AT_TREATMENT) == 3
  name: AT_TREATMENT String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", AT_TREATMENT)
  name: AT_TREATMENT ann
- description: Bed Days Within the Year is Number
  expr: is.integer(BEDYEAR)
  name: BEDYEAR Number
- expr: grepl("^\d$", BEDYEAR)
  name: BEDYEAR nnn
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) == 1
  name: BIRESUS_n String(1)
- description: Birth Order  is String(1)
  expr: is.character(BIRORDR_n) & nchar(BIRORDR_n) == 1
  name: BIRORDR_n String(1)
- description: Birth Status is String(1)
  expr: is.character(BIRSTAT_n) & nchar(BIRSTAT_n) == 1
  name: BIRSTAT_n String(1)
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- expr: grepl("^\d$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: Unique Booking Reference Number is Number
  expr: is.integer(BOOKREFNO)
  name: BOOKREFNO Number
- expr: grepl("^\d$", BOOKREFNO)
  name: BOOKREFNO 12n
- description: Cancer Network Area of Residence is String(3)
  expr: is.character(CANNET) & nchar(CANNET) == 3
  name: CANNET String(3)
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) == 5
  name: CANREG String(5)
- description: Carer Support Indicator is String(2)
  expr: is.character(CARERSI) & nchar(CARERSI) == 2
  name: CARERSI String(2)
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) == 2
  name: CATEGORY String(2)
- description: Cause Code is String(10)
  expr: is.character(CAUSE) & nchar(CAUSE) == 10
  name: CAUSE String(10)
- expr: grepl("^[a-zA-Z0-9]{6}$", CAUSE)
  name: CAUSE 6an
- description: Cause Code - 3 Characters is String(3)
  expr: is.character(CAUSE_3) & nchar(CAUSE_3) == 3
  name: CAUSE_3 String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CAUSE_3)
  name: CAUSE_3 ann
- description: Cause Code - 4 Characters  is String(4)
  expr: is.character(CAUSE_4) & nchar(CAUSE_4) == 4
  name: CAUSE_4 String(4)
- expr: grepl("^[a-zA-Z]{1}\d{3}$", CAUSE_4)
  name: CAUSE_4 annn
- description: "Sub Integrated Care Board of GP Practice (July 2022 onwards)\nClinical\
    \ Commissioning Group of GP Practice (until June 2022)\n is String(5)"
  expr: is.character(CCG_GP_PRACTICE) & nchar(CCG_GP_PRACTICE) == 5
  name: CCG_GP_PRACTICE String(5)
- description: "Sub Integrated Care Board of Residence  (July 2022 onwards)\nClinical\
    \ Commissioning Group of Residence (until June 2022)\n is String(3-5)"
  expr: is.character(CCG_RESIDENCE) & (3 <= nchar(CCG_RESIDENCE)) & (nchar(CCG_RESIDENCE)
    <= 5)
  name: CCG_RESIDENCE String(3-5)
- description: 'Sub Integrated Care Board of Responsibility (July 2022 onwards)

    Clinical Commissioning Group of Responsibility (until June 2022) is String(5)'
  expr: is.character(CCG_RESPONSIBILITY) & nchar(CCG_RESPONSIBILITY) == 5
  name: CCG_RESPONSIBILITY String(5)
- description: Origin of CCG_Responsibility is String(1)
  expr: is.character(CCG_RESPONSIBILITY_ORIGIN) & nchar(CCG_RESPONSIBILITY_ORIGIN)
    == 1
  name: CCG_RESPONSIBILITY_ORIGIN String(1)
- description: "Sub Integrated Care Board of Treatment (July 2022 onwards) \nClinical\
    \ Commissioning Group of Treatment (until June 2022)\n is String(5)"
  expr: is.character(CCG_TREATMENT) & nchar(CCG_TREATMENT) == 5
  name: CCG_TREATMENT String(5)
- description: Origin of CCG_Treatment is String(1)
  expr: is.character(CCG_TREATMENT_ORIGIN) & nchar(CCG_TREATMENT_ORIGIN) == 1
  name: CCG_TREATMENT_ORIGIN String(1)
- description: CDS Extract Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", CDSEXTDATE)
  name: CDSEXTDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CDSEXTDATE)
  name: CDSEXTDATE YYYY-MM-DD
- description: CDS Unique Identifier is String(35)
  expr: is.character(CDSUNIQUEID) & nchar(CDSUNIQUEID) == 35
  name: CDSUNIQUEID String(35)
- expr: grepl("^[a-zA-Z0-9]{35}$", CDSUNIQUEID)
  name: CDSUNIQUEID 35an
- description: CDS Protocol Identifier is String(3)
  expr: is.character(CDSVERPROTID) & nchar(CDSVERPROTID) == 3
  name: CDSVERPROTID String(3)
- description: CDS Version Number is String(8)
  expr: is.character(CDSVERSION) & nchar(CDSVERSION) == 8
  name: CDSVERSION String(8)
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- expr: grepl("^\d$", CENDUR)
  name: CENDUR 5n
- description: Age at Psychiatric Census Date is Number
  expr: is.integer(CENSAGE)
  name: CENSAGE Number
- expr: grepl("^\d$", CENSAGE)
  name: CENSAGE nnn
- description: Status of Patient Included In Psychiatric Census is String(1)
  expr: is.character(CENSTAT) & nchar(CENSTAT) == 1
  name: CENSTAT String(1)
- description: Ward Type at Psychiatric Census Date is String(7)
  expr: is.character(CENWARD) & nchar(CENWARD) == 7
  name: CENWARD String(7)
- description: Patient Classification is String(1)
  expr: is.character(CLASSPAT) & nchar(CLASSPAT) == 1
  name: CLASSPAT String(1)
- description: Confidentiality Category is String(1)
  expr: is.character(CONFIDENTIALITY_CATEGORY) & nchar(CONFIDENTIALITY_CATEGORY) ==
    1
  name: CONFIDENTIALITY_CATEGORY String(1)
- description: 'Consultant Code

    Professional Registration Entry Identifier is String(8) to 2022

    String(32) from 2023'
  expr: is.character(CONSULT) & (nchar(CONSULT) == 8 | nchar(CONSULT) == 32)
  name: 'CONSULT String(8) to 2022

    String(32) from 2023'
- expr: grepl("^[a-zA-Z0-9]{8}$", CONSULT)
  name: CONSULT 8an
- description: Commissioning Region of GP Practice  is String(3)
  expr: is.character(CR_GP_PRACTICE) & nchar(CR_GP_PRACTICE) == 3
  name: CR_GP_PRACTICE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_GP_PRACTICE)
  name: CR_GP_PRACTICE ann
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) == 3
  name: CR_RESIDENCE String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: Commissioning Region of Treatment  is String(3)
  expr: is.character(CR_TREATMENT) & nchar(CR_TREATMENT) == 3
  name: CR_TREATMENT String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", CR_TREATMENT)
  name: CR_TREATMENT ann
- description: 'Commissioning Serial Number

    NHS Service Agreement Identifier is String(6) to 2022

    String(20) from 2023'
  expr: is.character(CSNUM) & (nchar(CSNUM) == 6 | nchar(CSNUM) == 20)
  name: 'CSNUM String(6) to 2022

    String(20) from 2023'
- expr: grepl("^[a-zA-Z0-9]{6}$", CSNUM)
  name: CSNUM 6an
- description: Current Electoral Ward is String(4)
  expr: is.character(CURRWARD) & nchar(CURRWARD) == 4
  name: CURRWARD String(4)
- expr: grepl("^[a-zA-Z0-9]{2}$", CURRWARD)
  name: CURRWARD 2a
- description: Current Electoral Ward (ONS) is String(9)
  expr: is.character(CURRWARD_ONS) & nchar(CURRWARD_ONS) == 9
  name: CURRWARD_ONS String(9)
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) == 1
  name: DELCHANG String(1)
- description: Delivery Place Intended is String(1)
  expr: is.character(DELINTEN) & nchar(DELINTEN) == 1
  name: DELINTEN String(1)
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) == 2
  name: DELMETH_D String(2)
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) == 1
  name: DELMETH_n String(1)
- description: Labour or Delivery Onset Method is Number
  expr: is.integer(DELONSET)
  name: DELONSET Number
- description: Delivery Place Actual is String(1)
  expr: is.character(DELPLAC_n) & nchar(DELPLAC_n) == 1
  name: DELPLAC_n String(1)
- description: Anaesthetic Given Post-Labour or Delivery  is String(1)
  expr: is.character(DELPOSAN) & nchar(DELPOSAN) == 1
  name: DELPOSAN String(1)
- description: Anaesthetic Given During Labour or Delivery is String(1)
  expr: is.character(DELPREAN) & nchar(DELPREAN) == 1
  name: DELPREAN String(1)
- description: Status of Person Conducting Delivery is String(1)
  expr: is.character(DELSTAT_n) & nchar(DELSTAT_n) == 1
  name: DELSTAT_n String(1)
- description: High-Dependency Care Level is Number
  expr: is.integer(DEPDAYS_n)
  name: DEPDAYS_n Number
- expr: grepl("^\d$", DEPDAYS_n)
  name: DEPDAYS_n 4n
- description: Duration of Detention is Number
  expr: is.integer(DETDUR)
  name: DETDUR Number
- expr: grepl("^\d$", DETDUR)
  name: DETDUR 5n
- description: Detention Category is String(1)
  expr: is.character(DETNCAT) & nchar(DETNCAT) == 1
  name: DETNCAT String(1)
- description: Date Detention Commenced is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DETNDATE)
  name: DETNDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DETNDATE)
  name: DETNDATE YYYY-MM-DD
- description: Concatenated Diagnosis Codes - 3 Character is String(100)
  expr: is.character(DIAG_3_CONCAT) & nchar(DIAG_3_CONCAT) == 100
  name: DIAG_3_CONCAT String(100)
- description: Diagnosis Code - 3 Character is String(3)
  expr: is.character(DIAG_3_nn) & nchar(DIAG_3_nn) == 3
  name: DIAG_3_nn String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", DIAG_3_nn)
  name: DIAG_3_nn 3an
- description: Concatenated Diagnosis Codes - 4 Character is String(120)
  expr: is.character(DIAG_4_CONCAT) & nchar(DIAG_4_CONCAT) == 120
  name: DIAG_4_CONCAT String(120)
- description: Diagnosis Code - 4 Character is String(4)
  expr: is.character(DIAG_4_nn) & nchar(DIAG_4_nn) == 4
  name: DIAG_4_nn String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", DIAG_4_nn)
  name: DIAG_4_nn 4an
- description: Diagnosis Code (Unpivoted) is String(6)
  expr: is.character(DIAG_CODE) & nchar(DIAG_CODE) == 6
  name: DIAG_CODE String(6)
- description: Count of Diagnoses is Number
  expr: is.integer(DIAG_COUNT)
  name: DIAG_COUNT Number
- expr: grepl("^\d$", DIAG_COUNT)
  name: DIAG_COUNT 2n
- description: Diagnosis Code is String(6)
  expr: is.character(DIAG_nn) & nchar(DIAG_nn) == 6
  name: DIAG_nn String(6)
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- expr: grepl("^\d$", DIAG_SEQ)
  name: DIAG_SEQ n
- description: Date of Discharge is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISDATE)
  name: DISDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE)
  name: DISDATE YYYY-MM-DD
- description: Date of Discharge - Uncleaned is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISDATE_UNCLN)
  name: DISDATE_UNCLN Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE_UNCLN)
  name: DISDATE_UNCLN YYYY-MM-DD
- description: Destination on Discharge is String(2)
  expr: is.character(DISDEST) & nchar(DISDEST) == 2
  name: DISDEST String(2)
- description: Destination on Discharge - Uncleaned is String(2)
  expr: is.character(DISDEST_UNCLN) & nchar(DISDEST_UNCLN) == 2
  name: DISDEST_UNCLN String(2)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) == 1
  name: DISMETH String(1)
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) == 1
  name: DISMETH_UNCLN String(1)
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Date of Birth is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DOB)
  name: DOB Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOB)
  name: DOB YYYY-MM-DD
- description: Birth Date (Baby)  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", DOBBABY_n)
  name: DOBBABY_n Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOBBABY_n)
  name: DOBBABY_n YYYY-MM-DD
- description: HRG Dominant Procedure (Provider Derived) is String(4)
  expr: is.character(DOMPROC) & nchar(DOMPROC) == 4
  name: DOMPROC String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", DOMPROC)
  name: DOMPROC 4an
- description: Duplicate Flag  is Number
  expr: is.integer(DUPLICATE_FLAG)
  name: DUPLICATE_FLAG Number
- description: Earliest Reasonable Date Offered is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EARLDATOFF)
  name: EARLDATOFF Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLDATOFF)
  name: EARLDATOFF YYYY-MM-DD
- description: Date of Decision to Admit  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", ELECDATE)
  name: ELECDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ELECDATE)
  name: ELECDATE YYYY-MM-DD
- description: Duration of Elective Wait (Derived) is Number
  expr: is.integer(ELECDUR)
  name: ELECDUR Number
- expr: grepl("^\d$", ELECDUR)
  name: ELECDUR max 4n
- description: Duration of Elective Wait (Calculation) is Number
  expr: is.integer(ELECDUR_CALC)
  name: ELECDUR_CALC Number
- expr: grepl("^\d$", ELECDUR_CALC)
  name: ELECDUR_CALC 4n
- description: Duration of Elective Wait (Submitted) is Number
  expr: is.integer(ELECDURN)
  name: ELECDURN Number
- expr: grepl("^\d$", ELECDURN)
  name: ELECDURN max 4n
- description: Age at End of Episode is Number
  expr: is.integer(ENDAGE)
  name: ENDAGE Number
- expr: grepl("^\d$", ENDAGE)
  name: ENDAGE nnn
- description: Episode Duration is Number
  expr: is.integer(EPIDUR)
  name: EPIDUR Number
- expr: grepl("^\d$", EPIDUR)
  name: EPIDUR 5n
- description: Episode End Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EPIEND)
  name: EPIEND Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPIEND)
  name: EPIEND YYYY-MM-DD
- description: 'HES Record Identifier is String(12) (1989-90 to 2020-21)

    String(19) (2021-22 onwards)'
  expr: is.character(EPIKEY) & (nchar(EPIKEY) == 12 | nchar(EPIKEY) == 19)
  name: 'EPIKEY String(12) (1989-90 to 2020-21)

    String(19) (2021-22 onwards)'
- description: Episode Order is Number
  expr: is.integer(EPIORDER)
  name: EPIORDER Number
- expr: grepl("^\d$", EPIORDER)
  name: EPIORDER 2n
- description: Episode Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EPISTART)
  name: EPISTART Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPISTART)
  name: EPISTART YYYY-MM-DD
- description: Episode Status is Number
  expr: is.integer(EPISTAT)
  name: EPISTAT Number
- description: Episode Type is Number
  expr: is.integer(EPITYPE)
  name: EPITYPE Number
- description: Ethnic Category is String(1)
  expr: is.character(ETHNOS) & nchar(ETHNOS) == 1
  name: ETHNOS String(1)
- description: Ethnic Category (Local Code)  is String(1)
  expr: is.character(ETHNOSL) & nchar(ETHNOSL) == 1
  name: ETHNOSL String(1)
- expr: grepl("^[a-zA-Z0-9]{1}$", ETHNOSL)
  name: ETHNOSL 1an
- description: Ethnic Category (Raw) is String(1)
  expr: is.character(ETHRAW) & nchar(ETHRAW) == 1
  name: ETHRAW String(1)
- description: Finished Admission Episode flag is Number
  expr: is.integer(FAE)
  name: FAE Number
- description: Finished Admission Episode, Emergency Classification flag is Number
  expr: is.integer(FAE_EMERGENCY)
  name: FAE_EMERGENCY Number
- description: Finished Consultant Episode flag is Number
  expr: is.integer(FCE)
  name: FCE Number
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: First Regular Day or Night Admission is String(1)
  expr: is.character(FIRSTREG) & nchar(FIRSTREG) == 1
  name: FIRSTREG String(1)
- description: Financial Year is String(4)
  expr: is.character(FYEAR) & nchar(FYEAR) == 4
  name: FYEAR String(4)
- expr: grepl("^\d$", FYEAR)
  name: FYEAR 4n
- description: Length of Gestation is Number
  expr: is.integer(GESTAT_n)
  name: GESTAT_n Number
- expr: grepl("^\d$", GESTAT_n)
  name: GESTAT_n 2n
- description: Government Office Region of Treatment is String(1)
  expr: is.character(GORTREAT) & nchar(GORTREAT) == 1
  name: GORTREAT String(1)
- description: General Medical Practice (Patient Registration) is String(6-8)
  expr: is.character(GPPRAC) & (6 <= nchar(GPPRAC)) & (nchar(GPPRAC) <= 8)
  name: GPPRAC String(6-8)
- description: Health Authority of GP Practice is String(8)
  expr: is.character(GPPRACHA) & nchar(GPPRACHA) == 8
  name: GPPRACHA String(8)
- description: Regional Office of GP Practice is String(8)
  expr: is.character(GPPRACRO) & nchar(GPPRACRO) == 8
  name: GPPRACRO String(8)
- description: Primary Care Trust of GP Practice is String(8)
  expr: is.character(GPPRPCT) & nchar(GPPRPCT) == 8
  name: GPPRPCT String(8)
- expr: grepl("^\d$", GPPRPCT)
  name: GPPRPCT 5nn
- description: Strategic Health Authority of GP Practice is String(8)
  expr: is.character(GPPRSTHA) & nchar(GPPRSTHA) == 8
  name: GPPRSTHA String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", GPPRSTHA)
  name: GPPRSTHA 3an
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) == 11
  name: GRIDLINK String(11)
- expr: grepl("^\d$", GRIDLINK)
  name: GRIDLINK 9n
- description: Health Authority of Treatment  is String(3)
  expr: is.character(HATREAT) & nchar(HATREAT) == 3
  name: HATREAT String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", HATREAT)
  name: HATREAT 3a
- description: Patient identifier - HES generated  is Number
  expr: is.integer(HESID)
  name: HESID Number
- expr: grepl("^\d$", HESID)
  name: HESID n
- description: Patient  Identifier Origin - HES generated is Number
  expr: is.integer(HESID_ORIG)
  name: HESID_ORIG Number
- description: Healthy Neonate Indicator is String(1)
  expr: is.character(HNEOIND) & nchar(HNEOIND) == 1
  name: HNEOIND String(1)
- description: Postcode of Patient is String(8)
  expr: is.character(HOMEADD) & nchar(HOMEADD) == 8
  name: HOMEADD String(8)
- expr: grepl("^[a-zA-Z0-9]{8}$", HOMEADD)
  name: HOMEADD 8an
- description: Healthcare Resource Group - Provider Derived is String(3)
  expr: is.character(HRGNHS) & nchar(HRGNHS) == 3
  name: HRGNHS String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", HRGNHS)
  name: HRGNHS 3an
- description: Version Number of HRGNHS is String(3)
  expr: is.character(HRGNHSVN) & nchar(HRGNHSVN) == 3
  name: HRGNHSVN String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", HRGNHSVN)
  name: HRGNHSVN 3an
- description: IMD Index of Multiple Deprivation is Decimal
  expr: is.numeric(IMD04)
  name: IMD04 Decimal
- expr: grepl("^\d*\.?\d*$", IMD04)
  name: IMD04 nn.nn
- description: IMD Decile Group is String(30)
  expr: is.character(IMD04_DECILE) & nchar(IMD04_DECILE) == 30
  name: IMD04_DECILE String(30)
- description: IMD Crime Domain is Decimal
  expr: is.numeric(IMD04C)
  name: IMD04C Decimal
- expr: grepl("^\d*\.?\d*$", IMD04C)
  name: IMD04C n.nn
- description: IMD Education Training and Skills Domain  is Decimal
  expr: is.numeric(IMD04ED)
  name: IMD04ED Decimal
- expr: grepl("^\d*\.?\d*$", IMD04ED)
  name: IMD04ED nn.nn
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- expr: grepl("^\d*\.?\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: IMD Health and Disability Domain  is Decimal
  expr: is.numeric(IMD04HD)
  name: IMD04HD Decimal
- expr: grepl("^\d*\.?\d*$", IMD04HD)
  name: IMD04HD n.nn
- description: IMD Barriers to Housing and Services Domain  is Decimal
  expr: is.numeric(IMD04HS)
  name: IMD04HS Decimal
- expr: grepl("^\d*\.?\d*$", IMD04HS)
  name: IMD04HS nn.nn
- description: IMD Income Domain  is Decimal
  expr: is.numeric(IMD04I)
  name: IMD04I Decimal
- expr: grepl("^\d*\.?\d*$", IMD04I)
  name: IMD04I n.nn
- description: IMD Income Affecting Adults Domain  is Decimal
  expr: is.numeric(IMD04IA)
  name: IMD04IA Decimal
- expr: grepl("^\d*\.?\d*$", IMD04IA)
  name: IMD04IA n.nn
- description: IMD Income Affecting Children Domain  is Decimal
  expr: is.numeric(IMD04IC)
  name: IMD04IC Decimal
- expr: grepl("^\d*\.?\d*$", IMD04IC)
  name: IMD04IC n.nn
- description: IMD Living Environment Domain is Decimal
  expr: is.numeric(IMD04LE)
  name: IMD04LE Decimal
- expr: grepl("^\d*\.?\d*$", IMD04LE)
  name: IMD04LE nn.nn
- description: IMD Overall Rank  is Number
  expr: is.integer(IMD04RK)
  name: IMD04RK Number
- expr: grepl("^\d$", IMD04RK)
  name: IMD04RK 5n
- description: Intensive Care Level Days is Number
  expr: is.integer(INTDAYS_n)
  name: INTDAYS_n Number
- expr: grepl("^\d$", INTDAYS_n)
  name: INTDAYS_n 4n
- description: Intended Management  is String(1)
  expr: is.character(INTMANIG) & nchar(INTMANIG) == 1
  name: INTMANIG String(1)
- description: Local Authority District 1998 is String(4)
  expr: is.character(LAD98) & nchar(LAD98) == 4
  name: LAD98 String(4)
- description: Legal Group of Patient (on Admission) is String(1)
  expr: is.character(LEGALGPA) & nchar(LEGALGPA) == 1
  name: LEGALGPA String(1)
- description: Legal Group of Patient (Psychiatric Census Date) is String(1)
  expr: is.character(LEGALGPC) & nchar(LEGALGPC) == 1
  name: LEGALGPC String(1)
- description: Legal Category of Patient is String(2)
  expr: is.character(LEGLCAT) & nchar(LEGLCAT) == 2
  name: LEGLCAT String(2)
- description: Legal Status Classification is String(2)
  expr: is.character(LEGLSTAT) & nchar(LEGLSTAT) == 2
  name: LEGLSTAT String(2)
- description: Legal Status Classification Code on Admission is String(2)
  expr: is.character(LEGLSTATST) & nchar(LEGLSTATST) == 2
  name: LEGLSTATST String(2)
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & (nchar(LOPATID) == 10 | nchar(LOPATID) == 20)
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Lower Super Output Area of Residence 2001 is String(9)
  expr: is.character(LSOA01) & nchar(LSOA01) == 9
  name: LSOA01 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA01)
  name: LSOA01 9an
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) == 9
  name: LSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: Main Specialty is String(3)
  expr: is.character(MAINSPEF) & nchar(MAINSPEF) == 3
  name: MAINSPEF String(3)
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) == 1
  name: MARSTAT String(1)
- description: "Mother\u2019s Age at Delivery is Number"
  expr: is.integer(MATAGE)
  name: MATAGE Number
- expr: grepl("^\d$", MATAGE)
  name: MATAGE nnn
- description: Episode Type - Maternity is String(2)
  expr: is.character(MATERNITY_EPISODE_TYPE) & nchar(MATERNITY_EPISODE_TYPE) == 2
  name: MATERNITY_EPISODE_TYPE String(2)
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) == 1
  name: MENTCAT String(1)
- description: Date of Birth (Mother) is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", MOTDOB)
  name: MOTDOB Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    MOTDOB)
  name: MOTDOB YYYY-MM-DD
- description: Middle Super Output Area of Residence 2001 is String(9)
  expr: is.character(MSOA01) & nchar(MSOA01) == 9
  name: MSOA01 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", MSOA01)
  name: MSOA01 9an
- description: Middle Super Output Area of Residence 2011 is String(9)
  expr: is.character(MSOA11) & nchar(MSOA11) == 9
  name: MSOA11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", MSOA11)
  name: MSOA11 9an
- description: Date of Birth - Month and Year is String(6)
  expr: is.character(MYDOB) & nchar(MYDOB) == 6
  name: MYDOB String(6)
- description: Neonatal Level of Care is String(1)
  expr: is.character(NEOCARE) & nchar(NEOCARE) == 1
  name: NEOCARE String(1)
- description: Age of Baby In Days is Number
  expr: is.integer(NEODUR)
  name: NEODUR Number
- expr: grepl("^\d$", NEODUR)
  name: NEODUR 2n
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) == 8
  name: NER_GP_PRACTICE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: 'Integrated Care Board of Residence  (July 2022 onwards)

    Sustainability and Transformation Partnership of Residence (2020 until June 2022)

    NHS England Region of Residence (until 2020) is String(8)'
  expr: is.character(NER_RESIDENCE) & nchar(NER_RESIDENCE) == 8
  name: NER_RESIDENCE String(8)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_RESIDENCE)
  name: NER_RESIDENCE ann
- description: 'Integrated Care Board of Treatment  (July 2022 onwards)

    Sustainability and Transformation Partnership of Treatment (2020 until June 2022)

    NHS England Region of Treatment (until 2020) is String(3)'
  expr: is.character(NER_TREATMENT) & nchar(NER_TREATMENT) == 3
  name: NER_TREATMENT String(3)
- expr: grepl("^[a-zA-Z]{1}\d{2}$", NER_TREATMENT)
  name: NER_TREATMENT ann
- description: NHS Number is String(10)
  expr: is.character(NEWNHSNO) & nchar(NEWNHSNO) == 10
  name: NEWNHSNO String(10)
- expr: grepl("^\d$", NEWNHSNO)
  name: NEWNHSNO 10n
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) == 1
  name: NEWNHSNO_CHECK String(1)
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) == 2
  name: NHSNOIND String(2)
- description: Number of Valid Augmented Care Period Groups is Number
  expr: is.integer(NUMACP)
  name: NUMACP Number
- expr: grepl("^\d$", NUMACP)
  name: NUMACP n
- description: Number of Babies is String(1)
  expr: is.character(NUMBABY) & nchar(NUMBABY) == 1
  name: NUMBABY String(1)
- description: Number of Previous Pregnancies is String(2)
  expr: is.character(NUMPREG) & nchar(NUMPREG) == 2
  name: NUMPREG String(2)
- expr: grepl("^\d$", NUMPREG)
  name: NUMPREG max 2n
- description: Number of Baby Tails is Number
  expr: is.integer(NUMTAILB)
  name: NUMTAILB Number
- expr: grepl("^\d$", NUMTAILB)
  name: NUMTAILB 1n
- description: Census Output Area 2001  is String(10)
  expr: is.character(OACODE01) & nchar(OACODE01) == 10
  name: OACODE01 String(10)
- expr: grepl("^[a-zA-Z0-9]{10}$", OACODE01)
  name: OACODE01 10an
- description: Census Output Area 2011  is String(9)
  expr: is.character(OACODE11) & nchar(OACODE11) == 9
  name: OACODE11 String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", OACODE11)
  name: OACODE11 9an
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) == 6
  name: OACODE6 String(6)
- expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: Date of Procedure is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", OPDATE_nn)
  name: OPDATE_nn Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPDATE_nn)
  name: OPDATE_nn YYYY-MM-DD
- description: Procedure Code Sequence is Number
  expr: is.integer(OPER_SEQ)
  name: OPER_SEQ Number
- expr: grepl("^\d$", OPER_SEQ)
  name: OPER_SEQ n
- description: Operation Status Code is String(1)
  expr: is.character(OPERSTAT) & nchar(OPERSTAT) == 1
  name: OPERSTAT String(1)
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) == 100
  name: OPERTN_3_CONCAT String(100)
- description: Procedure Code - 3 Character is String(3)
  expr: is.character(OPERTN_3_nn) & nchar(OPERTN_3_nn) == 3
  name: OPERTN_3_nn String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", OPERTN_3_nn)
  name: OPERTN_3_nn 3an
- description: Concatenated Procedure Codes - 4 Character is String(130)
  expr: is.character(OPERTN_4_CONCAT) & nchar(OPERTN_4_CONCAT) == 130
  name: OPERTN_4_CONCAT String(130)
- description: Procedure Code - 4 Character is String(4)
  expr: is.character(OPERTN_4_nn) & nchar(OPERTN_4_nn) == 4
  name: OPERTN_4_nn String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_4_nn)
  name: OPERTN_4_nn 4an
- description: Procedure Code (Unpivoted) is String(4)
  expr: is.character(OPERTN_CODE) & nchar(OPERTN_CODE) == 4
  name: OPERTN_CODE String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_CODE)
  name: OPERTN_CODE 4an
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- expr: grepl("^\d$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Date of Procedure is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", OPERTN_DATE)
  name: OPERTN_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPERTN_DATE)
  name: OPERTN_DATE YYYY-MM-DD
- description: Procedure Code is String(4)
  expr: is.character(OPERTN_nn) & nchar(OPERTN_nn) == 4
  name: OPERTN_nn String(4)
- expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_nn)
  name: OPERTN_nn 4an
- description: "Organisation Identifier (Patient Pathway Identifier Issuer)\n is String(3-5) "
  expr: is.character(ORGPPPID) & ()
  name: 'ORGPPPID String(3-5) '
- description: Number of Organ Systems Supported is Number
  expr: is.integer(ORGSUP_n)
  name: ORGSUP_n Number
- expr: grepl("^\d$", ORGSUP_n)
  name: ORGSUP_n n
- description: HES Extract Year and Number is Number
  expr: is.integer(PARTYEAR)
  name: PARTYEAR Number
- description: Patient Pathway Identifier  is String(20)
  expr: is.character(PATPATHID) & nchar(PATPATHID) == 20
  name: PATPATHID String(20)
- expr: grepl("^[a-zA-Z0-9]{20}$", PATPATHID)
  name: PATPATHID 20an
- description: Programme Budgeting Category  is String(5)
  expr: is.character(PBC) & nchar(PBC) == 5
  name: PBC String(5)
- description: Postcode Found Flag is String(1)
  expr: is.character(PCFOUND) & nchar(PCFOUND) == 1
  name: PCFOUND String(1)
- description: Primary Care Group  is String(8)
  expr: is.character(PCGCODE) & nchar(PCGCODE) == 8
  name: PCGCODE String(8)
- description: Origin of Primary Care Group is String(1)
  expr: is.character(PCGORIG) & nchar(PCGORIG) == 1
  name: PCGORIG String(1)
- description: Westminster Parliamentary Constituency of Residence is String(3)
  expr: is.character(PCON) & nchar(PCON) == 3
  name: PCON String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", PCON)
  name: PCON 3an
- description: Westminster Parliamentary Constituency of Residence (ONS) is String(9)
  expr: is.character(PCON_ONS) & nchar(PCON_ONS) == 9
  name: PCON_ONS String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", PCON_ONS)
  name: PCON_ONS 9an
- description: Consultant Code (Pseudonymised) is String(16)
  expr: is.character(PCONSULT) & nchar(PCONSULT) == 16
  name: PCONSULT String(16)
- expr: grepl("^[a-zA-Z0-9]{16}$", PCONSULT)
  name: PCONSULT 16an
- description: Primary Care Trust of Responsibility   is String(6)
  expr: is.character(PCTCODE) & nchar(PCTCODE) == 6
  name: PCTCODE String(6)
- expr: grepl("^\d$", PCTCODE)
  name: PCTCODE 5nn
- description: Primary Care Trust of Responsibility is String(8)
  expr: is.character(PCTCODE_HIS) & nchar(PCTCODE_HIS) == 8
  name: PCTCODE_HIS String(8)
- expr: grepl("^\d$", PCTCODE_HIS)
  name: PCTCODE_HIS 5nn
- description: Primary Care Trust of Responsibility 2002 is String(8)
  expr: is.character(PCTCODE02) & nchar(PCTCODE02) == 8
  name: PCTCODE02 String(8)
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) == 8
  name: PCTCODE06 String(8)
- expr: grepl("^\d$", PCTCODE06)
  name: PCTCODE06 5nn
- description: Organisation Identifier (Residence Responsibility) is String(3-5)
  expr: is.character(PCTNHS) & (3 <= nchar(PCTNHS)) & (nchar(PCTNHS) <= 5)
  name: PCTNHS String(3-5)
- description: Origin of Primary Care Trust of Responsibility is String(1)
  expr: is.character(PCTORIG) & nchar(PCTORIG) == 1
  name: PCTORIG String(1)
- description: Origin of Primary Care Trust of Responsibility  is String(1)
  expr: is.character(PCTORIG_HIS ) & nchar(PCTORIG_HIS ) == 1
  name: PCTORIG_HIS  String(1)
- description: Origin of Primary Care Trust of Responsibility  2002 is String(1)
  expr: is.character(PCTORIG02) & nchar(PCTORIG02) == 1
  name: PCTORIG02 String(1)
- description: Origin of Primary Care Trust of Responsibility  2006 is String(1)
  expr: is.character(PCTORIG06) & nchar(PCTORIG06) == 1
  name: PCTORIG06 String(1)
- description: Primary Care Trust of Provider  is String(3)
  expr: is.character(PCTTREAT) & nchar(PCTTREAT) == 3
  name: PCTTREAT String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", PCTTREAT)
  name: PCTTREAT 3an
- description: Cds Report Period End Date  is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", PEREND)
  name: PEREND Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PEREND)
  name: PEREND YYYY-MM-DD
- description: Person Identifier (Clear) is String(10)
  expr: is.character(PERSON_ID) & nchar(PERSON_ID) == 10
  name: PERSON_ID String(10)
- expr: grepl("^[a-zA-Z0-9]{0,10}$", PERSON_ID)
  name: PERSON_ID max 10an
- description: Cds Report Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", PERSTART)
  name: PERSTART Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PERSTART)
  name: PERSTART YYYY-MM-DD
- description: Pseudonymised Code of GP Practice is String(16)
  expr: is.character(PGPPRAC) & nchar(PGPPRAC) == 16
  name: PGPPRAC String(16)
- expr: grepl("^[a-zA-Z0-9]{16}$", PGPPRAC)
  name: PGPPRAC 16an
- description: Post-Operative Duration  is Number
  expr: is.integer(POSOPDUR)
  name: POSOPDUR Number
- description: Postcode District is String(4)
  expr: is.character(POSTDIST) & nchar(POSTDIST) == 4
  name: POSTDIST String(4)
- description: Postnatal Stay is Number
  expr: is.integer(POSTDUR)
  name: POSTDUR Number
- expr: grepl("^\d$", POSTDUR)
  name: POSTDUR 3n
- description: Referrer Code (Pseudonymised) is String(16)
  expr: is.character(PREFERER) & nchar(PREFERER) == 16
  name: PREFERER String(16)
- expr: grepl("^[a-zA-Z0-9]{16}$", PREFERER)
  name: PREFERER 16an
- description: Registered or Referring GP (Pseudonymised) is String(16)
  expr: is.character(PREGGMP) & nchar(PREGGMP) == 16
  name: PREGGMP String(16)
- expr: grepl("^[a-zA-Z0-9]{16}$", PREGGMP)
  name: PREGGMP 16an
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- expr: grepl("^\d$", PREOPDUR)
  name: PREOPDUR 3n
- description: CDS Prime Recipient Identity is String(12)
  expr: is.character(PRIMERCP) & nchar(PRIMERCP) == 12
  name: PRIMERCP String(12)
- description: "Organisation Identifier (Code of Provider)\n is String(3) or String(5)"
  expr: is.character(PROCODE) & (nchar(PROCODE) == 3 | nchar(PROCODE) == 5)
  name: PROCODE String(3) or String(5)
- description: Organisation Identifier (Code of Provider) (3 Character) is String(5)
  expr: is.character(PROCODE3) & nchar(PROCODE3) == 5
  name: PROCODE3 String(5)
- expr: grepl("^[a-zA-Z0-9]{3}$", PROCODE3)
  name: PROCODE3 3an
- description: Organisation Identifier (Code of Provider) (5 Character) is String(5)
  expr: is.character(PROCODE5) & nchar(PROCODE5) == 5
  name: PROCODE5 String(5)
- expr: grepl("^[a-zA-Z0-9]{5}$", PROCODE5)
  name: PROCODE5 5an
- description: Organisation Identifier (Code of Provider) (Original) is String(5)
  expr: is.character(PROCODEO) & nchar(PROCODEO) == 5
  name: PROCODEO String(5)
- description: Provider Code of Treatment is String(5)
  expr: is.character(PROCODET) & nchar(PROCODET) == 5
  name: PROCODET String(5)
- expr: grepl("^[a-zA-Z0-9]{5}$", PROCODET)
  name: PROCODET 5an
- description: Provider Type  is String(20)
  expr: is.character(PROTYPE) & nchar(PROTYPE) == 20
  name: PROTYPE String(20)
- description: Distance Between LSOA11 and Provider is String(15)
  expr: is.character(PROVDIST) & nchar(PROVDIST) == 15
  name: PROVDIST String(15)
- expr: grepl("^\d*\.?\d*$", PROVDIST)
  name: PROVDIST nnn.nn
- description: Derivation of PROVDIST is String(1)
  expr: is.character(PROVDIST_FLAG) & nchar(PROVDIST_FLAG) == 1
  name: PROVDIST_FLAG String(1)
- description: Hospital Provider Spell Identifier is Number
  expr: is.integer(PROVSPNO)
  name: PROVSPNO Number
- expr: grepl("^[a-zA-Z0-9]{20}$", PROVSPNO)
  name: PROVSPNO 20an
- description: Hospital Provider Spell Number (Pseudonymised) is String(40)
  expr: is.character(PROVSPNOPS) & nchar(PROVSPNOPS) == 40
  name: PROVSPNOPS String(40)
- description: Pseudonymised Patient identifier - HES generated is String(32)
  expr: is.character(PSEUDO_HESID) & nchar(PSEUDO_HESID) == 32
  name: PSEUDO_HESID String(32)
- expr: grepl("^[a-zA-Z0-9]{32}$", PSEUDO_HESID)
  name: PSEUDO_HESID 32an
- description: Organisation Identifer (Code of Commissioner) is String(12)
  expr: is.character(PURCODE) & nchar(PURCODE) == 12
  name: PURCODE String(12)
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) == 8
  name: PURRO String(8)
- description: Strategic Health Authority of Commissioner is String(8)
  expr: is.character(PURSTHA) & nchar(PURSTHA) == 8
  name: PURSTHA String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", PURSTHA)
  name: PURSTHA 3an
- description: Commissioner Code Status  is String(1)
  expr: is.character(PURVAL) & nchar(PURVAL) == 1
  name: PURVAL String(1)
- description: Linkage Quality Rank is Number
  expr: is.integer(RANK_ORDER)
  name: RANK_ORDER Number
- description: Organisation Identifier (Referring Organisation) is String(3-8)
  expr: is.character(REFERORG) & (3 <= nchar(REFERORG)) & (nchar(REFERORG) <= 8)
  name: REFERORG String(3-8)
- description: Referrer Code is String(8)
  expr: is.character(REFERRER) & nchar(REFERRER) == 8
  name: REFERRER String(8)
- description: Registered or Referring GP is String(8)
  expr: is.character(REGGMP) & nchar(REGGMP) == 8
  name: REGGMP String(8)
- expr: grepl("^[a-zA-Z0-9]{8}$", REGGMP)
  name: REGGMP 8an
- description: County of Residence  is String(2)
  expr: is.character(RESCTY) & nchar(RESCTY) == 2
  name: RESCTY String(2)
- description: County of Residence (ONS) is String(12)
  expr: is.character(RESCTY_ONS) & nchar(RESCTY_ONS) == 12
  name: RESCTY_ONS String(12)
- description: Government Office Region of Residence is String(1)
  expr: is.character(RESGOR) & nchar(RESGOR) == 1
  name: RESGOR String(1)
- description: Government Office Region of Residence (ONS) is String(9)
  expr: is.character(RESGOR_ONS) & nchar(RESGOR_ONS) == 9
  name: RESGOR_ONS String(9)
- description: Health Authority of Residence  is String(3)
  expr: is.character(RESHA) & nchar(RESHA) == 3
  name: RESHA String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESHA)
  name: RESHA 3an
- description: Local Authority District of Residence is String(9)
  expr: is.character(RESLADST) & nchar(RESLADST) == 9
  name: RESLADST String(9)
- expr: grepl("^[a-zA-Z0-9]{4}$", RESLADST)
  name: RESLADST 4an
- description: Local Authority District of Residence (ONS) is String(9)
  expr: is.character(RESLADST_ONS) & nchar(RESLADST_ONS) == 9
  name: RESLADST_ONS String(9)
- expr: grepl("^[a-zA-Z0-9]{9}$", RESLADST_ONS)
  name: RESLADST_ONS 9an
- description: Primary Care Trust of Residence is String(8)
  expr: is.character(RESPCT_HIS) & nchar(RESPCT_HIS) == 8
  name: RESPCT_HIS String(8)
- description: Primary Care Trust of Residence 2002 is String(8)
  expr: is.character(RESPCT02) & nchar(RESPCT02) == 8
  name: RESPCT02 String(8)
- description: Primary Care Trust of Residence 2006 is String(9)
  expr: is.character(RESPCT06) & nchar(RESPCT06) == 9
  name: RESPCT06 String(9)
- description: Regional Office of Residence  is String(3)
  expr: is.character(RESRO) & nchar(RESRO) == 3
  name: RESRO String(3)
- description: Strategic Health Authority of Residence is String(8)
  expr: is.character(RESSTHA_HIS) & nchar(RESSTHA_HIS) == 8
  name: RESSTHA_HIS String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA_HIS)
  name: RESSTHA_HIS 3an
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) == 8
  name: RESSTHA02 String(8)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: Strategic Health Authority of Residence 2006 is String(9)
  expr: is.character(RESSTHA06) & nchar(RESSTHA06) == 9
  name: RESSTHA06 String(9)
- expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA06)
  name: RESSTHA06 3an
- description: Regional Office of Treatment is String(3)
  expr: is.character(ROTREAT) & nchar(ROTREAT) == 3
  name: ROTREAT String(3)
- description: Referral to Treatment Period End Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", RTTPEREND)
  name: RTTPEREND Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPEREND)
  name: RTTPEREND YYYY-MM-DD
- description: Referral to Treatment Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", RTTPERSTART)
  name: RTTPERSTART Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPERSTART)
  name: RTTPERSTART YYYY-MM-DD
- description: Referral to Treatment Period Status is String(2)
  expr: is.character(RTTPERSTAT) & nchar(RTTPERSTAT) == 2
  name: RTTPERSTAT String(2)
- description: Rural / Urban Indicator is String(9)
  expr: is.character(RURURB_IND) & nchar(RURURB_IND) == 9
  name: RURURB_IND String(9)
- description: CDS Sender Identity is String(12)
  expr: is.character(SENDER) & nchar(SENDER) == 12
  name: SENDER String(12)
- description: Person Stated Gender Code is String(1)
  expr: is.character(SEX) & nchar(SEX) == 1
  name: SEX String(1)
- description: Person Phenotypic Sex (Baby) is String(1)
  expr: is.character(SEXBABY_n) & nchar(SEXBABY_n) == 1
  name: SEXBABY_n String(1)
- description: Distance Between LSOA11 and Site Code of Treatment is String(15)
  expr: is.character(SITEDIST) & nchar(SITEDIST) == 15
  name: SITEDIST String(15)
- expr: grepl("^\d*\.?\d*$", SITEDIST)
  name: SITEDIST nnn.nn
- description: Derivation of SITEDIST is String(1)
  expr: is.character(SITEDIST_FLAG) & nchar(SITEDIST_FLAG) == 1
  name: SITEDIST_FLAG String(1)
- description: Organisation Site Identifier (of Treatment) (at Start of Episode) is
    String(5-9)
  expr: is.character(SITETRET) & (5 <= nchar(SITETRET)) & (nchar(SITETRET) <= 9)
  name: SITETRET String(5-9)
- description: Beginning of Spell Indicator is Number
  expr: is.integer(SPELBGIN)
  name: SPELBGIN Number
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- expr: grepl("^\d$", SPELDUR)
  name: SPELDUR 5n
- description: Calculation of SPELDUR is Number
  expr: is.integer(SPELDUR_CALC)
  name: SPELDUR_CALC Number
- expr: grepl("^\d$", SPELDUR_CALC)
  name: SPELDUR_CALC 5n
- description: End of Spell Indicator is String(1)
  expr: is.character(SPELEND) & nchar(SPELEND) == 1
  name: SPELEND String(1)
- description: Age at Start of Episode is Number
  expr: is.integer(STARTAGE)
  name: STARTAGE Number
- expr: grepl("^\d$", STARTAGE)
  name: STARTAGE nnn
- description: Age at Start of Episode (Decimalised) is Decimal
  expr: is.numeric(STARTAGE_CALC)
  name: STARTAGE_CALC Decimal
- expr: grepl("^\d*\.?\d*$", STARTAGE_CALC)
  name: STARTAGE_CALC nnn.nnn
- description: Strategic Health Authority of Treatment is String(3)
  expr: is.character(STHATRET) & nchar(STHATRET) == 3
  name: STHATRET String(3)
- expr: grepl("^[a-zA-Z0-9]{3}$", STHATRET)
  name: STHATRET 3an
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) == 9
  name: STP_GP_PRACTICE String(9)
- description: 'Integrated Care Board of Residence (July 2022 onwards)

    Sustainability and Transformation Partnership of Residence (until June 2022) is
    String(9)'
  expr: is.character(STP_RESIDENCE) & nchar(STP_RESIDENCE) == 9
  name: STP_RESIDENCE String(9)
- description: "Integrated Care Board of Responsibility (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Responsibility (until June 2022)\n is String(9)"
  expr: is.character(STP_RESPONSIBILITY) & nchar(STP_RESPONSIBILITY) == 9
  name: STP_RESPONSIBILITY String(9)
- description: Origin of STP_RESPONSIBILITY  is String(1)
  expr: is.character(STP_RESPONSIBILITY_ORIGIN) & nchar(STP_RESPONSIBILITY_ORIGIN)
    == 1
  name: STP_RESPONSIBILITY_ORIGIN String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) == 9
  name: STP_TREATMENT String(9)
- description: Origin of STP_TREATMENT  is String(1)
  expr: is.character(STP_TREATMENT_ORIGIN) & nchar(STP_TREATMENT_ORIGIN) == 1
  name: STP_TREATMENT_ORIGIN String(1)
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: SUS Generated Core Spell HRG is String(5)
  expr: is.character(SUSCOREHRG) & nchar(SUSCOREHRG) == 5
  name: SUSCOREHRG String(5)
- expr: grepl("^[a-zA-Z0-9]{5}$", SUSCOREHRG)
  name: SUSCOREHRG 5an
- description: Healthcare Resource Group - SUS Generated  is String(5)
  expr: is.character(SUSHRG) & nchar(SUSHRG) == 5
  name: SUSHRG String(5)
- expr: grepl("^[a-zA-Z0-9]{5}$", SUSHRG)
  name: SUSHRG 5an
- description: Healthcare Resource Group Version Number - SUS Generated is String(3)
  expr: is.character(SUSHRGVERS) & nchar(SUSHRGVERS) == 3
  name: SUSHRGVERS String(3)
- description: SUS Loaded Staging Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", SUSLDDATE)
  name: SUSLDDATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUSLDDATE)
  name: SUSLDDATE YYYY-MM-DD
- description: SUS Record Identifier is Number
  expr: is.integer(SUSRECID)
  name: SUSRECID Number
- expr: grepl("^\d$", SUSRECID)
  name: SUSRECID 14n
- description: SUS Generated Spell Identifier is String(38)
  expr: is.character(SUSSPELLID) & nchar(SUSSPELLID) == 38
  name: SUSSPELLID String(38)
- description: Person Identifier (Tokenised) is String(32)
  expr: is.character(TOKEN_PERSON_ID) & nchar(TOKEN_PERSON_ID) == 32
  name: TOKEN_PERSON_ID String(32)
- expr: grepl("^[a-zA-Z0-9]{32}$", TOKEN_PERSON_ID)
  name: TOKEN_PERSON_ID 32an
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- expr: grepl("^\d$", TREAT)
  name: TREAT max 4n
- description: Treatment Specialty is String(3)
  expr: is.character(TRETSPEF) & nchar(TRETSPEF) == 3
  name: TRETSPEF String(3)
- description: V Code Indicator is String(1)
  expr: is.character(VIND) & nchar(VIND) == 1
  name: VIND String(1)
- description: Duration of Wait (Referral to Treatment Period) is Number
  expr: is.integer(WAITDAYS)
  name: WAITDAYS Number
- expr: grepl("^\d$", WAITDAYS)
  name: WAITDAYS 4n
- description: Waiting Time Measurement Type (Commissioning Data Set) is String(2)
  expr: is.character(WAITING_TIME_MEASUREMENT_TYPE) & nchar(WAITING_TIME_MEASUREMENT_TYPE)
    == 2
  name: WAITING_TIME_MEASUREMENT_TYPE String(2)
- description: Method of Admission - Waiting List is Number
  expr: is.integer(WAITLIST)
  name: WAITLIST Number
- description: Electoral Ward 1991 is String(9)
  expr: is.character(WARD91) & nchar(WARD91) == 9
  name: WARD91 String(9)
- expr: grepl("^[a-zA-Z0-9]{6}$", WARD91)
  name: WARD91 6a
- description: Electoral Ward In 1998 is String(8)
  expr: is.character(WARD98) & nchar(WARD98) == 8
  name: WARD98 String(8)
- expr: grepl("^[a-zA-Z0-9]{6}$", WARD98)
  name: WARD98 6a
- description: Ward Type at Start of Episode is String(7)
  expr: is.character(WARDSTRT) & nchar(WARDSTRT) == 7
  name: WARDSTRT String(7)
- description: Well Baby Flag is String(1)
  expr: is.character(WELL_BABY_IND) & nchar(WELL_BABY_IND) == 1
  name: WELL_BABY_IND String(1)
- description: Activity Location Type Code is String(3)
  expr: is.character(ACTIVITY_LOCATION_TYPE_CODE) & nchar(ACTIVITY_LOCATION_TYPE_CODE)
    == 3
  name: ACTIVITY_LOCATION_TYPE_CODE String(3)
- description: Ambulance Call Identifier is String(20)
  expr: is.character(AMBULANCE_CALL_IDENTIFIER) & nchar(AMBULANCE_CALL_IDENTIFIER)
    == 20
  name: AMBULANCE_CALL_IDENTIFIER String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", AMBULANCE_CALL_IDENTIFIER)
  name: AMBULANCE_CALL_IDENTIFIER max 20an
- description: Assessment Tool Completion Timestamp is String(25)
  expr: is.character(ASSESSMENT_TOOL_TIMESTAMP) & nchar(ASSESSMENT_TOOL_TIMESTAMP)
    == 25
  name: ASSESSMENT_TOOL_TIMESTAMP String(25)
- expr: grepl("^[a-zA-Z0-9]{0,25}$", ASSESSMENT_TOOL_TIMESTAMP)
  name: ASSESSMENT_TOOL_TIMESTAMP max 25an
- description: Care Contact Identifier (Ambulance Service) is String(20)
  expr: is.character(CARE_CONTACT_IDENTIFIER_) & nchar(CARE_CONTACT_IDENTIFIER_) ==
    20
  name: CARE_CONTACT_IDENTIFIER_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", CARE_CONTACT_IDENTIFIER_)
  name: CARE_CONTACT_IDENTIFIER_ max 20an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) == 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: Coded Clinical Entry Sequence Number is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER) & nchar(CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER)
    == 5
  name: CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER String(5)
- description: Coded Diagnosis Timestamp is String(25)
  expr: is.character(CODED_DIAGNOSIS_TIMESTAMP) & nchar(CODED_DIAGNOSIS_TIMESTAMP)
    == 25
  name: CODED_DIAGNOSIS_TIMESTAMP String(25)
- expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_DIAGNOSIS_TIMESTAMP)
  name: CODED_DIAGNOSIS_TIMESTAMP max 25an
- description: Coded Finding Timestamp is String(25)
  expr: is.character(CODED_FINDING_TIMESTAMP) & nchar(CODED_FINDING_TIMESTAMP) ==
    25
  name: CODED_FINDING_TIMESTAMP String(25)
- expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_FINDING_TIMESTAMP)
  name: CODED_FINDING_TIMESTAMP max 25an
- description: Coded Observation Timestamp is String(25)
  expr: is.character(CODED_OBSERVATION_TIMESTAMP) & nchar(CODED_OBSERVATION_TIMESTAMP)
    == 25
  name: CODED_OBSERVATION_TIMESTAMP String(25)
- expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_OBSERVATION_TIMESTAMP)
  name: CODED_OBSERVATION_TIMESTAMP max 25an
- description: Coded Procedure Timestamp is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", CODED_PROCEDURE_TIMESTAMP)
  name: CODED_PROCEDURE_TIMESTAMP Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CODED_PROCEDURE_TIMESTAMP)
  name: CODED_PROCEDURE_TIMESTAMP YYYY-MM-DD
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) == 20
  name: COMMISSIONER_REFERENCE String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Comorbidity is String(6-40000)
  expr: is.character(COMORBIDITY) & (6 <= nchar(COMORBIDITY)) & (nchar(COMORBIDITY)
    <= 40000)
  name: COMORBIDITY String(6-40000)
- description: Organisation Identifier (Conveying Ambulance Trust) is String(5)
  expr: is.character(CONVEYING_AMBULANCE_TRUST) & nchar(CONVEYING_AMBULANCE_TRUST)
    == 5
  name: CONVEYING_AMBULANCE_TRUST String(5)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) == 20
  name: DATA_ABSENT_REASON_ String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Ward Intended Day Period Availability is String(1)
  expr: is.character(DAY_PERIOD_AVAILABILITY) & nchar(DAY_PERIOD_AVAILABILITY) ==
    1
  name: DAY_PERIOD_AVAILABILITY String(1)
- description: Delivery Timestamp is String(25)
  expr: is.character(DELIVERY_TIMESTAMP) & nchar(DELIVERY_TIMESTAMP) == 25
  name: DELIVERY_TIMESTAMP String(25)
- expr: grepl("^[a-zA-Z0-9]{0,25}$", DELIVERY_TIMESTAMP)
  name: DELIVERY_TIMESTAMP max 25an
- description: 'Diagnosis Scheme In Use  is String(2) '
  expr: is.character(DIAGNOSIS_SCHEME_IN_USE_) & (nchar(DIAGNOSIS_SCHEME_IN_USE_)
    == 2)
  name: 'DIAGNOSIS_SCHEME_IN_USE_ String(2) '
- description: Discharged To Nhs At Home Service Indicator is String(1)
  expr: is.character(DISCHARGED_TO_NHS_AT_HOME) & nchar(DISCHARGED_TO_NHS_AT_HOME)
    == 1
  name: DISCHARGED_TO_NHS_AT_HOME String(1)
- description: Earliest Clinically Appropriate Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EARLIEST_APPROPRIATE_DATE)
  name: EARLIEST_APPROPRIATE_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLIEST_APPROPRIATE_DATE)
  name: EARLIEST_APPROPRIATE_DATE YYYY-MM-DD
- description: Emed3 Fit Note Follow Up Assessment Required Indicator is String(1)
  expr: is.character(EMED_ASSESSMENT_REQUIRED) & nchar(EMED_ASSESSMENT_REQUIRED) ==
    1
  name: EMED_ASSESSMENT_REQUIRED String(1)
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Emed3 Fit Note Condition (Snomed Ct Expression) is String(6-40000)
  expr: is.character(EMED3_CONDITION) & (6 <= nchar(EMED3_CONDITION)) & (nchar(EMED3_CONDITION)
    <= 40000)
  name: EMED3_CONDITION String(6-40000)
- description: Emed3 Fit Note Diagnosis (Icd) is String(6)
  expr: is.character(EMED3_DIAGNOSIS) & nchar(EMED3_DIAGNOSIS) == 6
  name: EMED3_DIAGNOSIS String(6)
- description: Emed3 Fit Note Duration is String(3)
  expr: is.character(EMED3_DURATION) & nchar(EMED3_DURATION) == 3
  name: EMED3_DURATION String(3)
- expr: grepl("^[a-zA-Z0-9]{0,3}$", EMED3_DURATION)
  name: EMED3_DURATION max 3an
- description: Emed3 Fit Note End Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_END_DATE)
  name: EMED3_END_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_END_DATE)
  name: EMED3_END_DATE YYYY-MM-DD
- description: 'Emed3 Fit Note Issuer is String(2) '
  expr: is.character(EMED3_FIT_NOTE_ISSUER) & (nchar(EMED3_FIT_NOTE_ISSUER) == 2)
  name: 'EMED3_FIT_NOTE_ISSUER String(2) '
- expr: grepl("^[a-zA-Z0-9]{2}$", EMED3_FIT_NOTE_ISSUER)
  name: EMED3_FIT_NOTE_ISSUER 2an
- description: Emed3 Fit Note Recorded Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_RECORDED_DATE)
  name: EMED3_RECORDED_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_RECORDED_DATE)
  name: EMED3_RECORDED_DATE YYYY-MM-DD
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Ethnic Category 2021 is String(3)
  expr: is.character(ETHNIC_CATEGORY_2021) & nchar(ETHNIC_CATEGORY_2021) == 3
  name: ETHNIC_CATEGORY_2021 String(3)
- expr: grepl("^[a-zA-Z0-9]{0,3}$", ETHNIC_CATEGORY_2021)
  name: ETHNIC_CATEGORY_2021 max 3an
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & (4 <= nchar(FINDING)) & (nchar(FINDING) <= 6000)
  name: FINDING String(4-6000)
- description: Last Episode In Spell Indicator Code is String(1)
  expr: is.character(LAST_EPISODE_IN_SPELL) & nchar(LAST_EPISODE_IN_SPELL) == 1
  name: LAST_EPISODE_IN_SPELL String(1)
- description: Latest Clinically Appropriate Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", LATEST_APPROPRIATE_DATE)
  name: LATEST_APPROPRIATE_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    LATEST_APPROPRIATE_DATE)
  name: LATEST_APPROPRIATE_DATE YYYY-MM-DD
- description: Length Of Stay Adjustment (Rehabilitation) is Number
  expr: is.integer(LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT Number
- expr: grepl("^[a-zA-Z0-9]{0,3}$", LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT max 3an
- description: Length Of Stay Adjustment (Specialist Palliative Care) is Number
  expr: is.integer(LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT Number
- expr: grepl("^[a-zA-Z0-9]{0,3}$", LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT max 3an
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    == 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Local Sub-Specialty Code is String(8)
  expr: is.character(LOCAL_SUB-SPECIALTY_CODE) & nchar(LOCAL_SUB-SPECIALTY_CODE) ==
    8
  name: LOCAL_SUB-SPECIALTY_CODE String(8)
- description: NHS Service Agreement Identifier is String(20)
  expr: is.character(NHS_SERVICE_AGREEMENT_IDENTIFIER) & nchar(NHS_SERVICE_AGREEMENT_IDENTIFIER)
    == 20
  name: NHS_SERVICE_AGREEMENT_IDENTIFIER String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", NHS_SERVICE_AGREEMENT_IDENTIFIER)
  name: NHS_SERVICE_AGREEMENT_IDENTIFIER max 20an
- description: NHS Service Agreement Line Identifier is String(20)
  expr: is.character(NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER) & nchar(NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER)
    == 20
  name: NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER)
  name: NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER max 20an
- description: Ward Intended Night Period Availability is String(1)
  expr: is.character(NIGHT_PERIOD_AVAILABILITY) & nchar(NIGHT_PERIOD_AVAILABILITY)
    == 1
  name: NIGHT_PERIOD_AVAILABILITY String(1)
- description: Observation is String(4-6000)
  expr: is.character(OBSERVATION) & (4 <= nchar(OBSERVATION)) & (nchar(OBSERVATION)
    <= 6000)
  name: OBSERVATION String(4-6000)
- description: Observation Value is String(10)
  expr: is.character(OBSERVATION_VALUE) & nchar(OBSERVATION_VALUE) == 10
  name: OBSERVATION_VALUE String(10)
- expr: grepl("^[a-zA-Z0-9]{0,10}$", OBSERVATION_VALUE)
  name: OBSERVATION_VALUE max 10an
- description: Overseas Visitor Charging Category Applicable From Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", OVERSEAS_VISITOR_APPLICABLE_FROM)
  name: OVERSEAS_VISITOR_APPLICABLE_FROM Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_APPLICABLE_FROM)
  name: OVERSEAS_VISITOR_APPLICABLE_FROM YYYY-MM-DD
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    == 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: Overseas Visitor Charging Category Applicable End Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", OVERSEAS_VISITOR_CHARGING_END)
  name: OVERSEAS_VISITOR_CHARGING_END Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_CHARGING_END)
  name: OVERSEAS_VISITOR_CHARGING_END YYYY-MM-DD
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) == 35
  name: PATIENT_FAMILY_NAME String(35)
- description: Patient Full Name is String(70)
  expr: is.character(PATIENT_FULL_NAME) & nchar(PATIENT_FULL_NAME) == 70
  name: PATIENT_FULL_NAME String(70)
- expr: grepl("^[a-zA-Z0-9]{0,70}$", PATIENT_FULL_NAME)
  name: PATIENT_FULL_NAME max 70an
- description: Patient Given Name is String(35)
  expr: is.character(PATIENT_GIVEN_NAME) & nchar(PATIENT_GIVEN_NAME) == 35
  name: PATIENT_GIVEN_NAME String(35)
- description: Patient Initials  is String(35)
  expr: is.character(PATIENT_INITIALS) & nchar(PATIENT_INITIALS) == 35
  name: PATIENT_INITIALS String(35)
- description: Patient Name Suffix is String(35)
  expr: is.character(PATIENT_NAME_SUFFIX) & nchar(PATIENT_NAME_SUFFIX) == 35
  name: PATIENT_NAME_SUFFIX String(35)
- description: Patient Title is String(35)
  expr: is.character(PATIENT_TITLE) & nchar(PATIENT_TITLE) == 35
  name: PATIENT_TITLE String(35)
- description: Patient Usual Address (Structured) is String(35)
  expr: is.character(PATIENT_USUAL_ADDRESS_STRUCTURED) & nchar(PATIENT_USUAL_ADDRESS_STRUCTURED)
    == 35
  name: PATIENT_USUAL_ADDRESS_STRUCTURED String(35)
- description: Patient Usual Address (Unstructured) is String(175)
  expr: is.character(PATIENT_USUAL_ADDRESS_UNSTRUCTURED) & nchar(PATIENT_USUAL_ADDRESS_UNSTRUCTURED)
    == 175
  name: PATIENT_USUAL_ADDRESS_UNSTRUCTURED String(175)
- description: Person Marital Status is String(1)
  expr: is.character(PERSON_MARITAL_STATUS) & nchar(PERSON_MARITAL_STATUS) == 1
  name: PERSON_MARITAL_STATUS String(1)
- description: Person Score is String(5)
  expr: is.character(PERSON_SCORE) & nchar(PERSON_SCORE) == 5
  name: PERSON_SCORE String(5)
- expr: grepl("^[a-zA-Z0-9]{0,5}$", PERSON_SCORE)
  name: PERSON_SCORE max 5an
- description: Present On Admission Indicator is String(1)
  expr: is.character(PRESENT_ON_ADMISSION_INDICATOR) & nchar(PRESENT_ON_ADMISSION_INDICATOR)
    == 1
  name: PRESENT_ON_ADMISSION_INDICATOR String(1)
- description: Procedure  is String(6-40000)
  expr: is.character(PROCEDURE) & (6 <= nchar(PROCEDURE)) & (nchar(PROCEDURE) <= 40000)
  name: PROCEDURE String(6-40000)
- description: Procedure Date is Date(YYYY-MM-DD)
  expr: grepl("^\d4-([0]\d|1[0-2])-([0-2]\d|3[01])$", PROCEDURE_DATE)
  name: PROCEDURE_DATE Date(YYYY-MM-DD)
- expr: grepl("^((?:19|20)\d\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PROCEDURE_DATE)
  name: PROCEDURE_DATE YYYY-MM-DD
- description: Provider Reference Identifier is String(20)
  expr: is.character(PROVIDER_REFERENCE_IDENTIFIER) & nchar(PROVIDER_REFERENCE_IDENTIFIER)
    == 20
  name: PROVIDER_REFERENCE_IDENTIFIER String(20)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", PROVIDER_REFERENCE_IDENTIFIER)
  name: PROVIDER_REFERENCE_IDENTIFIER max 20an
- description: Direct Access Referral Indicator is String(1)
  expr: is.character(REFERRAL_INDICATOR) & nchar(REFERRAL_INDICATOR) == 1
  name: REFERRAL_INDICATOR String(1)
- description: 'Professional Registration Entry Identifier is String(32) '
  expr: is.character(REGISTRATION_ENTRY_IDENTIFIER) & (nchar(REGISTRATION_ENTRY_IDENTIFIER)
    == 32)
  name: 'REGISTRATION_ENTRY_IDENTIFIER String(32) '
- description: 'Professional Registration Issuer Code is String(2) '
  expr: is.character(REGISTRATION_ISSUER_CODE) & (nchar(REGISTRATION_ISSUER_CODE)
    == 2)
  name: 'REGISTRATION_ISSUER_CODE String(2) '
- description: Responsible Care Professional Indicator is String(1)
  expr: is.character(RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR) & nchar(RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR)
    == 1
  name: RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR String(1)
- description: Service Code is String(12)
  expr: is.character(SERVICE_CODE) & nchar(SERVICE_CODE) == 12
  name: SERVICE_CODE String(12)
- expr: grepl("^[a-zA-Z0-9]{0,20}$", SERVICE_CODE)
  name: SERVICE_CODE max 20an
- description: Social And Personal Circumstance (Snomed Ct Expression) is String(6-40000)
  expr: is.character(SOCIAL_AND_PERSONAL_CIRCUMSTANCE) & (6 <= nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE))
    & (nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE) <= 40000)
  name: SOCIAL_AND_PERSONAL_CIRCUMSTANCE String(6-40000)
- description: Social And Personal Circumstance Recorded Timestamp is String(25)
  expr: is.character(SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP) & nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP)
    == 25
  name: SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP String(25)
- description: Rehabilitation Assessment Team Type is String(1)
  expr: is.character(TEAM_TYPE) & nchar(TEAM_TYPE) == 1
  name: TEAM_TYPE String(1)
- description: Ucum Unit Of Measurement is String(10)
  expr: is.character(UCUM_UNIT_OF_MEASUREMENT) & nchar(UCUM_UNIT_OF_MEASUREMENT) ==
    10
  name: UCUM_UNIT_OF_MEASUREMENT String(10)
- expr: grepl("^[a-zA-Z0-9]{0,10}$", UCUM_UNIT_OF_MEASUREMENT)
  name: UCUM_UNIT_OF_MEASUREMENT max 10an
- description: Ward Code is String(12)
  expr: is.character(WARD_CODE) & nchar(WARD_CODE) == 12
  name: WARD_CODE String(12)
- expr: grepl("^[a-zA-Z0-9]{0,12}$", WARD_CODE)
  name: WARD_CODE max 12an
- description: Ward Intended Age Group is String(1)
  expr: is.character(WARD_INTENDED_AGE_GROUP) & nchar(WARD_INTENDED_AGE_GROUP) ==
    1
  name: WARD_INTENDED_AGE_GROUP String(1)
- description: 'Ward Intended Clinical Care Intensity is String(2) '
  expr: is.character(WARD_INTENDED_INTENSITY) & (nchar(WARD_INTENDED_INTENSITY) ==
    2)
  name: 'WARD_INTENDED_INTENSITY String(2) '
- description: Ward Intended Sex Of Patients is String(1)
  expr: is.character(WARD_INTENDED_SEX) & nchar(WARD_INTENDED_SEX) == 1
  name: WARD_INTENDED_SEX String(1)
- description: Ward Security Level is String(1)
  expr: is.character(WARD_SECURITY_LEVEL) & nchar(WARD_SECURITY_LEVEL) == 1
  name: WARD_SECURITY_LEVEL String(1)
- description: 'Withheld Identity Reason  is String(2) '
  expr: is.character(WITHHELD_IDENTITY_REASON) & (nchar(WITHHELD_IDENTITY_REASON)
    == 2)
  name: 'WITHHELD_IDENTITY_REASON String(2) '
- description: HES Extract Year is Number
  expr: is.integer(YEAR)
  name: YEAR Number

