---
# APC data validation rules

# This file is written using YAML format.
# https://cran.r-project.org/web/packages/validate/vignettes/cookbook.html#82_Metadata_in_text_files:_YAML

# The data types codes, such as "10n" are used by the NHS Data Model and Dictionary
# https://www.datadictionary.nhs.uk/

rules:
# ðŸ”‘ EPIKEY (HES Record Identifier) 
- name: EPIKEY is required
# In YAML, we need to use quotes for special characters
# https://stackoverflow.com/a/22235064/15368268
  expr: '!is.na(EPIKEY)'
  meta:
    severity: error
  
- name: EPIKEY is unique
  expr: is_unique(EPIKEY)
  meta:
    severity: error

# SUSSPELLID SUS-generated spell identifier
- name: SUSSPELLID 19n
  description: SUSSPELLID has 19 integers
  expr: grepl("^\\d{19}$", SUSSPELLID)

- name: SUSSPELLID 10n
  description: SUSSPELLID has 10 integers (until 2016-17)
  expr: grepl("^\\d{10}$", SUSSPELLID)

- name: SUSSPELLID missing values
  description: SUSSPELLID is Null or -1
  # Null = Records that have excluded from PbR in SUS as the activity is outside the scope of PbR
  # -1 = Unspellable episodes
  expr: SUSSPELLID %in% c("Null", "-1")

# SUSRECID SUS Record Identifier
# SUS (Secondary Uses Service)-generated record identifier
- name: SUSRECID 14n
  description: SUSRECID is a number with 14 integers (2007-08 onwards)
  expr: grepl("^\\d{14}$", SUSRECID)

# TOKEN_PERSON_ID
- name: TOKEN_PERSON_ID is required
  expr: '!is.na(TOKEN_PERSON_ID)'
  meta:
    severity: error
    
- name: TOKEN_PERSON_ID 32an
  description: TOKEN_PERSON_ID is alphanumeric with length 32
  expr: grepl("^[a-zA-Z0-9]{32}$", TOKEN_PERSON_ID)
  meta:
    severity: error

# STUDY_ID person cohort identifier
- name: STUDY_ID is required
  expr: '!is.na(STUDY_ID)'
  meta:
    severity: error

# ADMIDATE Date of admission
# ADMIDATE is recorded on all episodes within the spell.
- name: ADMIDATE is date
  description: Date(YYYY-MM-DD)
  expr: grepl("^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$", ADMIDATE)
  meta:
    severity: error
  
- name: ADMIDATE is required
  expr: '!is.na(ADMIDATE)'
  meta:
    severity: error
    
# EPISTART Episode Start Date
# 1800-01-01 = Null date submitted
# 1801-01-01 = invalid date submitted
- name: EPISTART is date
  description: Date(YYYY-MM-DD)
  expr: grepl("^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$", EPISTART)
  meta:
    severity: error

#######################################
# Automatically generated rules below #
# using scripts/tos/__main__.py       #
#######################################

- description: Number of Valid Augmented Care Period Groups is Number
  expr: is.integer(A_NUMACP)
  name: A_NUMACP Number
- description: Augmented Care Period Destination is String(2)
  expr: is.character(ACPDISP_n) & nchar(ACPDISP_n) <= 2
  name: ACPDISP_n String(2)
- description: "01 = Ward in same hospital \n02 = High dependency unit (HDU) in same\
    \ hospital, including special care baby units\n03 = Intensive care unit (ICU)\
    \ in same hospital \n04 = ICU in other hospital \n05 = Other hospital (not ICU)\
    \ including HDUs and Special Care Baby Units\n06 = Normal residence or other \n\
    07 = Died\n08 = No change in location: the augmented care period ended because\
    \ the consultant episode ended\n98 = Not applicable: augmented care period not\
    \ finished\n99 = Not known"
  expr: ACPDISP_n %in% c('01', '02', '03', '04', '05', '06', '07', '08', '98', '99')
  name: ACPDISP_n values codes
- description: Augmented Care Period Data Quality Indicator  is String(1)
  expr: is.character(ACPDQIND_n) & nchar(ACPDQIND_n) <= 1
  name: ACPDQIND_n String(1)
- description: Augmented Care Period End Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPEND_n)
  name: ACPEND_n Date(YYYY-MM-DD)
- description: ACPEND_n YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPEND_n)
  name: ACPEND_n YYYY-MM-DD
- description: Augmented Care Period Local Identifier is Number
  expr: is.integer(ACPLCID_n)
  name: ACPLCID_n Number
- description: Augmented Care Location is String(2)
  expr: is.character(ACPLOC_n) & nchar(ACPLOC_n) <= 2
  name: ACPLOC_n String(2)
- description: '01 = General intensive care unit (ICU). Adult intensive care, including
    wards labelled as surgical or medical ICU, but excluding the specialised units
    identified by other values. General ICUs may provide a mixture of high dependency
    unit (HDU) and ICU level care

    02 = Cardiothoracic ICU, including units labelled as separate cardiac or thoracic
    units.

    03 = Liver ICU

    04 = Neurological ICU

    05 = HDU

    06 = Paediatric ICU: a unit generally admitting patients between 0 and 14 years
    old, but excluding special care baby units

    07 = Paediatric HDU

    08 = Neonatal ICU: a unit generally admitting only new born babies up to two-week''s
    post delivery

    09 = Cardiac care unit or coronary care unit (CCU)

    10 = Combined HDU and CCU the beds and staff for the two units are in the same
    area

    11 = Combined CCU and ICU the beds and staff for the two units are in the same
    area

    12 = Combined HDU and ICU the beds and staff for the two units are in the same
    area

    13 = Post operative recovery unit, including a theatre recovery area

    14 = Spinal injury ICU: a unit designated for critical care rather than a spinal
    injury ward

    15 = Burns critical care unit, including all special care burns facilities other
    than short-term post-operative care areas

    16 = Renal unit, including an in-patient kidney dialysis unit, but excluding general
    nephrology or urology wards

    17 = Not otherwise specified

    99 = Not known'
  expr: ACPLOC_n %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    '11', '12', '13', '14', '15', '16', '17', '99')
  name: ACPLOC_n values codes
- description: Augmented Care Period Number is Number
  expr: is.integer(ACPN_n)
  name: ACPN_n Number
- description: ACPN_n 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", ACPN_n)
  name: ACPN_n 2n
- description: '2n = Order number in the range 01 to 97

    99 = Not known: a validation error'
  expr: ACPN_n %in% c('2n', '99')
  name: ACPN_n values codes
- description: Augmented Care Period Outcome Indicator is String(2)
  expr: is.character(ACPOUT_n) & nchar(ACPOUT_n) <= 2
  name: ACPOUT_n String(2)
- description: '01 = Survived

    02 = Died: no organ donation

    03 = Died: organs donated

    98 = Not applicable: Augmented care period not finished

    99 = Not known'
  expr: ACPOUT_n %in% c('01', '02', '03', '98', '99')
  name: ACPOUT_n values codes
- description: Augmented Care Period Planned Indicator is String(1)
  expr: is.character(ACPPLAN_n) & nchar(ACPPLAN_n) <= 1
  name: ACPPLAN_n String(1)
- description: '1 = Yes

    2 = No

    9 = Not known'
  expr: ACPPLAN_n %in% c('1', '2', '9')
  name: ACPPLAN_n values codes
- description: Augmented Care Period Source is String(2)
  expr: is.character(ACPSOUR_n) & nchar(ACPSOUR_n) <= 2
  name: ACPSOUR_n String(2)
- description: '01 = Ward in same hospital

    02 = High dependency unit (HDU) or other immediate care area in same hospital,
    including special care babies

    03 = Intensive care unit (ICU) in same hospital

    04 = Theatre or recovery unit in same hospital

    05 = A&E department in same hospital

    06 = X-ray or endoscopy department in same hospital

    07 = ICU in other hospital

    08 = Other hospital (not ICU) including HDUs and special care baby units

    09 = Clinic, home or other

    10 = No change in location: augmented care period started because consultant episode
    changed

    99 = Not known'
  expr: ACPSOUR_n %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    '99')
  name: ACPSOUR_n values codes
- description: Augmented Care Period Specialty Function Code is String(3)
  expr: is.character(ACPSPEF_n) & nchar(ACPSPEF_n) <= 3
  name: ACPSPEF_n String(3)
- description: "100 = General surgery \n101 = Urology\n110 = Trauma and orthopaedics\n\
    120 = Ear, nose and throat (ENT)\n130 = Ophthalmology\n140 = Oral surgery\n141\
    \ = Restorative dentistry\n142 = Paediatric dentistry (available from 1999-2000)\n\
    143 = Orthodontics\n145 = Oral and maxillo facial surgery (available from 2004-05)\n\
    146 = Endodontics (available from 2004-05)\n147 = Periodontics (available from\
    \ 2004-05)\n148 = Prosthodontics (available from 2004-05) \n149 = Surgical dentistry\
    \ (available from 2004-05)\n150 = Neurosurgery\n160 = Plastic surgery\n170 = Cardiothoracic\
    \ surgery\n171 = Paediatric surgery\n180 = Accident and emergency (A&E)\n190 =\
    \ Anaesthetics \n191 = Pain management (available from 1998-99 to 2003-04)\n192\
    \ = Critical care medicine (available from 2004-05)\n199 = Non-UK Provider - specialty\
    \ function not known, treatment mainly surgical\n300 = General medicine\n301 =\
    \ Gastroenterology\n302 = Endocrinology\n303 = Clinical haematology\n304 = Clinical\
    \ physiology\n305 = Clinical pharmacology\n310 = Audiological medicine \n311 =\
    \ Clinical genetics\n312 = Clinical cytogenics and molecular genetics (available\
    \ from 1990-91)\n313 = Clinical immunology and allergy (available from 1991-92)\n\
    314 = Rehabilitation (available from 1991-92)\n315 = Palliative medicine\n320\
    \ = Cardiology\n321 = Paediatric cardiology (available from 2004-05)\n330 = Dermatology\n\
    340 = Respiratory medicine (also known as thoracic medicine)\n350 = Infectious\
    \ diseases\n352 = Tropical medicine (available from 2004-05)\n360 = Genito-urinary\
    \ medicine\n361 = Nephrology\n370 = Medical oncology\n371 = Nuclear medicine \n\
    400 = Neurology\n401 = Clinical neuro-physiology\n410 = Rheumatology\n420 = Paediatrics\n\
    421 = Paediatric neurology\n430 = Geriatric medicine\n450 = Dental medicine (available\
    \ from 1990-91)\n 460 = Medical ophthalmology (available from 1993-94)\n499 =\
    \ Non-UK Provider - specialty function not known, treatment mainly medical\n501\
    \ = Obstetrics (prior to 2004-05: Obstetrics for patients using a hospital bed\
    \ or delivery facilities) \n502 = Gynaecology\n560 = Midwifery (available from\
    \ October 1995)\n600 = General Medical Practice\n601 = General Dental Practice\n\
    610 = General practice with maternity function (available to 2003-04)\n620 = General\
    \ practice other than maternity (available to 2003-04)\n700 = Learning disability\
    \ (previously known as mental handicap) \n710 = Mental illness\n711 = Child and\
    \ adolescent psychiatry\n712 = Forensic psychiatry\n713 = Psychotherapy\n715 =\
    \ Old age psychiatry (available from 1990-91)\n800 = Clinical oncology (previously\
    \ Radiotherapy)\n810 = Radiology\n820 = General pathology\n821 = Blood transfusion\
    \ \n822 = Chemical pathology\n823 = Haematology\n824 = Histopathology\n830 = Immunopathology\n\
    831 = Medical microbiology\n832 = Neuropathology (available to 2003-04)\n900 =\
    \ Community medicine\n901 = Occupational medicine\n902 = Community health services\
    \ - dental (available from 2004-05)\n903 = Public health medicine (available from\
    \ 2004-05)\n904 = Public health dental (available from 2004-05)\n950 = Nursing\
    \ episode (available from 2002-03)\n960 = Allied health professional episode (available\
    \ from 2006-07)\nNull = Other maternity event\n& = Not known"
  expr: ACPSPEF_n %in% c('100', '101', '110', '120', '130', '140', '141', '142', '143',
    '145', '146', '147', '148', '149', '150', '160', '170', '171', '180', '190', '191',
    '192', '199', '300', '301', '302', '303', '304', '305', '310', '311', '312', '313',
    '314', '315', '320', '321', '330', '340', '350', '352', '360', '361', '370', '371',
    '400', '401', '410', '420', '421', '430', '450', '460', '499', '501', '502', '560',
    '600', '601', '610', '620', '700', '710', '711', '712', '713', '715', '800', '810',
    '820', '821', '822', '823', '824', '830', '831', '832', '900', '901', '902', '903',
    '904', '950', '960', 'Null', '&')
  name: ACPSPEF_n values codes
- description: Augmented Care Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPSTAR_n)
  name: ACPSTAR_n Date(YYYY-MM-DD)
- description: ACPSTAR_n YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ACPSTAR_n)
  name: ACPSTAR_n YYYY-MM-DD
- description: 'YYYY-MM-DD = Date period started

    Null = Not applicable/ not known'
  expr: ACPSTAR_n %in% c('YYYY-MM-DD', 'Null')
  name: ACPSTAR_n values codes
- description: Ambulatory Care Sensitive Condition Flag is Number
  expr: is.integer(ACSCFLAG)
  name: ACSCFLAG Number
- description: '1 = Episode contains a diagnosis that is ambulatory care sensitive

    0 = Episode does not contain a diagnosis that is ambulatory care sensitive'
  expr: ACSCFLAG %in% c('1', '0')
  name: ACSCFLAG values codes
- description: Age at Activity Date is Number
  expr: is.integer(ACTIVAGE)
  name: ACTIVAGE Number
- description: ACTIVAGE max 3n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,3}$", ACTIVAGE)
  name: ACTIVAGE max 3n
- description: "max 3n = Age at activity date \n999 = Not known, i.e. date of birth\
    \ not known and age cannot be estimated"
  expr: ACTIVAGE %in% c('max 3n', '999')
  name: ACTIVAGE values codes
- description: Age on Admission is Number
  expr: is.integer(ADMIAGE)
  name: ADMIAGE Number
- description: 'max n3 = Age on admission

    999 = Not known, e.g. date of birth not known and age cannot be estimated'
  expr: ADMIAGE %in% c('max n3', '999')
  name: ADMIAGE values codes
- description: Admission Date (Hospital Provider Spell) is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ADMIDATE)
  name: ADMIDATE Date(YYYY-MM-DD)
- description: ADMIDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ADMIDATE)
  name: ADMIDATE YYYY-MM-DD
- description: 'YYYY-MM-DD = Date of admission

    1800-01-01 = Null

    1801-01-01 = invalid date submitted'
  expr: ADMIDATE %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: ADMIDATE values codes
- description: Method of Admission is String(2)
  expr: is.character(ADMIMETH) & nchar(ADMIMETH) <= 2
  name: ADMIMETH String(2)
- description: "Elective Admission, when the decision to admit could be separated\
    \ in time from the actual admission: \n11 = Waiting list. A Patient admitted electively\
    \ from a waiting list having been given no date of admission at a time a decision\
    \ was made to admit\n12 = Booked. A Patient admitted having been given a date\
    \ at the time the decision to admit was made, determined mainly on the grounds\
    \ of resource availability\n 13 = Planned. A Patient admitted, having been given\
    \ a date or approximate date at the time that the decision to admit was made.\
    \ This is usually part of a planned sequence of clinical care determined mainly\
    \ on social or clinical criteria (e.g. check cystoscopy)\". A planned admission\
    \ is one where the date of admission is determined by the needs of the treatment,\
    \ rather than by the availability of resources.\n\nNote that this does not include\
    \ a transfer from another Hospital Provider (see 81 below).\n\nEmergency Admission,\
    \ when admission is unpredictable and at short notice because of clinical need:\
    \ \n\n21 = Emergency Care Department\_or acute or emergency dental\_service\n\
    22 = General Practitioner:  after a request for immediate admission has been made\
    \ direct to a\_Hospital Provider, i.e. not through a Bed bureau, by a\_GP\_or\
    \ deputy\n23 = Bed bureau \n24 = Consultant Clinic, of this or another Health\
    \ Care Provider  \n25 = Admission via Mental Health Crisis Resolution Team (available\
    \ from 2013/14)\n2A = Emergency Care Department of another provider where the\
    \ patient had not been admitted (available from 2013/14)\n2B = Transfer of an\
    \ admitted patient from another Hospital Provider in an emergency (available from\
    \ 2013/14)\n2C = Baby born at home as intended (available from 2013/14)\n2D =\
    \ Other emergency admission (available from 2013/14)\n28 = Other means, examples\
    \ are:\n- admitted from the Accident and Emergency Department of another provider\
    \ where they had not been admitted\n- transfer of an admitted PATIENT from another\
    \ Hospital Provider in an emergency\n- baby born at home as intended (retired\
    \ on 2022-23)\n\nMaternity Admission, of a pregnant or recently pregnant woman\
    \ to a maternity ward (including delivery facilities) except when the intention\
    \ is to terminate the pregnancy:\n\n31 = Admitted ante-partum \n32 = Admitted\
    \ post-partum \n\nOther Admission not specified above:\n\n82 = The birth of a\
    \ baby in this Health Care Provider  \n83 = Baby born outside the Health Care\
    \ Provider except when born at home as intended. \n81 = Transfer of any admitted\
    \ patient from other Hospital Provider other than in an emergency\n84 = Admission\
    \ by Admissions Panel of a High Security Psychiatric Hospital, patient not entered\
    \ on the HSPH Admissions Waiting List (available between 1999 and 2006)\n89 =\
    \ HSPH Admissions Waiting List of a High Security Psychiatric Hospital (available\
    \ between 1999 and 2006)\n98 = Not applicable (available from 1996/97)\n99 = Method\
    \ of admission not known"
  expr: ADMIMETH %in% c('11', '12', '13', '21', '22', '23', '24', '25', '2A', '2B',
    '2C', '2D', '28', '31', '32', '82', '83', '81', '84', '89', '98', '99')
  name: ADMIMETH values codes
- description: Administrative Category Code on Admission is String(2)
  expr: is.character(ADMINCAT) & nchar(ADMINCAT) <= 2
  name: ADMINCAT String(2)
- description: "01 = NHS patient, including overseas visitors charged under the  National\
    \ Health Service (Overseas Visitors Hospital Charging Regulations)\n02 = Private\
    \ patient, one who uses accommodation or services authorised under the National\
    \ Health Service Act 2006  \n03 = Amenity patient, one who pays for the use of\
    \ a single room or small ward in accordance with the National Health Service Act\
    \ 2006  \n04 = Category II patient, one for whom work is undertaken by hospital\
    \ medical or dental staff within category II as defined in paragraph 37 of the\
    \ Terms and Conditions of Service of Hospital Medical and Dental Staff\n98 = Not\
    \ applicable\n99 = Administravite category not known"
  expr: ADMINCAT %in% c('01', '02', '03', '04', '98', '99')
  name: ADMINCAT values codes
- description: Administrative Category Code at Start of Episode is String(2)
  expr: is.character(ADMINCATST) & nchar(ADMINCATST) <= 2
  name: ADMINCATST String(2)
- description: "01 = NHS patient\n02 = Private patient \n03 = Amenity patient \n04\
    \ = Category II patient \n98 = Not applicable\n99 = Administrative category not\
    \ known"
  expr: ADMINCATST %in% c('01', '02', '03', '04', '98', '99')
  name: ADMINCATST values codes
- description: Source of Admission is String(2)
  expr: is.character(ADMISORC) & nchar(ADMISORC) <= 2
  name: ADMISORC String(2)
- description: "19 = The usual place of residence, unless listed below, for example,\
    \ a private dwelling whether owner occupied or owned by Local Authority, housing\
    \ association or other landlord. This includes wardened accommodation but not\
    \ residential accommodation where health care is provided. It also includes patients\
    \ with no fixed abode.\n29 = Temporary place of residence when usually resident\
    \ elsewhere, for example, hotels and residential educational establishments\n\
    30 = Repatriation from high security psychiatric hospital (1999-00 to 2006-07)\
    \  \n37 = Court (1999-00 to 2006-07 and from 2022-23)\n38 = Penal establishment:\
    \ police station (1999-00 to 2006-07)\n39 = Penal establishment, court or police\
    \ station /  police custody suite (retired in 2022-23)\n40 = Penal establishment\
    \ (available from 2022-23)\n41 = Court (retired in 2022-23)\n42 = Police Station\
    \ / Police Custody Suite\n48 = High security psychiatric hospital, Scotland (1999-00\
    \ to 2006-07)\n49 = NHS other hospital provider: high security psychiatric accommodation\
    \ in an NHS hospital provider (NHS trust or NHS Foundation Trust)\n50 = NHS other\
    \ hospital provider: medium secure unit (1999-00 to 2006-07)\n51 = NHS other hospital\
    \ provider: ward for general patients or the younger physically disabled or Emergency\
    \ and Care department\n52 = NHS other hospital provider: ward for maternity patients\
    \ or neonates\n53 = NHS other hospital provider: ward for patients who are mentally\
    \ ill or have learning disabilities\n54 = NHS run care home (retired in 2022-23)\n\
    55 = Care Home with Nursing\n56 = Care Home without Nursing\n65 = Local authority\
    \ residential accommodation i.e. where care is provided (retired in 2022-23)\n\
    66 = Local authority foster care, but not in residential accommodation i.e. where\
    \ care is provided\n69 = Local authority home or care (1989-90 to 1995-96)\n79\
    \ = Babies born in or on the way to hospital\n85 = Non-NHS (other than local authority)\
    \ run care home (retired in 2022-23)\n86 = Non-NHS (other than local authority)\
    \ run nursing home\n87 = Independent Sector Healthcare Provider run hospital\n\
    88 = Hospice\n89 = Non-NHS institution (1989-90 to 1995-96)\n98 = Not applicable\n\
    99 = Admission Source Not known"
  expr: ADMISORC %in% c('19', '29', '30', '37', '38', '39', '40', '41', '42', '48',
    '49', '50', '51', '52', '53', '54', '55', '56', '65', '66', '69', '79', '85',
    '86', '87', '88', '89', '98', '99')
  name: ADMISORC values codes
- description: Psychiatric History on Admission is String(1)
  expr: is.character(ADMISTAT) & nchar(ADMISTAT) <= 1
  name: ADMISTAT String(1)
- description: "0 = No known previous hospital provider spell with a consultant episode\
    \ having a psychiatric specialty within any health care provider.\n1 = One or\
    \ more previous hospital provider spells with a consultant episode having a psychiatric\
    \ specialty within this health care provider.\n2 = One or more previous hospital\
    \ provider spells with a consultant episode having a psychiatric specialty within\
    \ another health care provider, but none with this healthcare provider. \n8 =\
    \ Not applicable: the patient is not receiving admitted patient care under a consultant\
    \ in a psychiatric specialty.\n9 = Not known: the patient is receiving admitted\
    \ patient care under a consultant in a psychiatric specialty but the information\
    \ is not available."
  expr: ADMISTAT %in% c('0', '1', '2', '8', '9')
  name: ADMISTAT values codes
- description: 'A&E Record Identifier is String(12) (2013-14 to 2020-21)

    String(19) (2021-22 onwards)'
  expr: is.character(AEKEY) & nchar(AEKEY) <= 19
  name: 'AEKEY String(12) (2013-14 to 2020-21)

    String(19) (2021-22 onwards)'
- description: Alcohol Related Diagnosis Code - Broad Definition is String(4)
  expr: is.character(ALCBRDDIAG) & nchar(ALCBRDDIAG) <= 4
  name: ALCBRDDIAG String(4)
- description: 'ann or annn = Alcohol related diagnosis - broad

    Null = Not applicable'
  expr: ALCBRDDIAG %in% c('ann or annn', 'Null')
  name: ALCBRDDIAG values codes
- description: Alcohol Attributable Fraction - Broad Definition is String(17)
  expr: is.character(ALCBRDFRAC) & nchar(ALCBRDFRAC) <= 17
  name: ALCBRDFRAC String(17)
- description: ALCBRDFRAC n.nnnnnnnnnnnnnnn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", ALCBRDFRAC)
  name: ALCBRDFRAC n.nnnnnnnnnnnnnnn
- description: Principal Alcohol Related Diagnosis is String(10)
  expr: is.character(ALCDIAG) & nchar(ALCDIAG) <= 10
  name: ALCDIAG String(10)
- description: Principal Alcohol Related Diagnosis - 4 Characters is String(4)
  expr: is.character(ALCDIAG_4) & nchar(ALCDIAG_4) <= 4
  name: ALCDIAG_4 String(4)
- description: ALCDIAG_4 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", ALCDIAG_4)
  name: ALCDIAG_4 4an
- description: '4an = Principal alcohol related diagnosis (4 characters)

    Null = Not applicable'
  expr: ALCDIAG_4 %in% c('4an', 'Null')
  name: ALCDIAG_4 values codes
- description: Principal Alcohol Related Fraction is String(17)
  expr: is.character(ALCFRAC) & nchar(ALCFRAC) <= 17
  name: ALCFRAC String(17)
- description: ALCFRAC n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", ALCFRAC)
  name: ALCFRAC n.nn
- description: Alcohol Related Diagnosis Code - Narrow Definition is String(4)
  expr: is.character(ALCNRWDIAG) & nchar(ALCNRWDIAG) <= 4
  name: ALCNRWDIAG String(4)
- description: 'ann or annn = Alcohol related diagnosis - narrow

    Null = Not applicable'
  expr: ALCNRWDIAG %in% c('ann or annn', 'Null')
  name: ALCNRWDIAG values codes
- description: Alcohol Attributable Fraction - Narrow Definition is String(17)
  expr: is.character(ALCNRWFRAC) & nchar(ALCNRWFRAC) <= 17
  name: ALCNRWFRAC String(17)
- description: ALCNRWFRAC n.nnnnnnnnnnnnnnn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", ALCNRWFRAC)
  name: ALCNRWFRAC n.nnnnnnnnnnnnnnn
- description: Gestation Period in Weeks at First Antenatal Assessment is Number
  expr: is.integer(ANAGEST)
  name: ANAGEST Number
- description: ANAGEST 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", ANAGEST)
  name: ANAGEST 2n
- description: '2n = The gestation period in weeks

    Null = Not valid / not known'
  expr: ANAGEST %in% c('2n', 'Null')
  name: ANAGEST values codes
- description: First Antenatal Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ANASDATE)
  name: ANASDATE Date(YYYY-MM-DD)
- description: ANASDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ANASDATE)
  name: ANASDATE YYYY-MM-DD
- description: "YYYY-MM-DD = Date of first antenatal assessment  \n1800-01-01 = Null\n\
    1801-01-01 = Invalid date submitted"
  expr: ANASDATE %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: ANASDATE values codes
- description: Antenatal Days of Stay is Number
  expr: is.integer(ANTEDUR)
  name: ANTEDUR Number
- description: ANTEDUR 3n NHS Data Model and Dictionary
  expr: grepl("^\\d{3}$", ANTEDUR)
  name: ANTEDUR 3n
- description: "3n = The number of days of stay from 0 to 270  \nNull = Not applicable\
    \ / not known"
  expr: ANTEDUR %in% c('3n', 'Null')
  name: ANTEDUR values codes
- description: Area Team of GP Practice  is String(3)
  expr: is.character(AT_GP_PRACTICE) & nchar(AT_GP_PRACTICE) <= 3
  name: AT_GP_PRACTICE String(3)
- description: AT_GP_PRACTICE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", AT_GP_PRACTICE)
  name: AT_GP_PRACTICE ann
- description: "ann = Area Team of patient\u2019s GP practice\nY = Unknown"
  expr: AT_GP_PRACTICE %in% c('ann', 'Y')
  name: AT_GP_PRACTICE values codes
- description: Area Team of Residence  is String(3)
  expr: is.character(AT_RESIDENCE) & nchar(AT_RESIDENCE) <= 3
  name: AT_RESIDENCE String(3)
- description: AT_RESIDENCE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", AT_RESIDENCE)
  name: AT_RESIDENCE ann
- description: 'ann = Area Team of residence

    S = Scotland

    U = England (not otherwise specified)

    W = Wales

    X = Foreign

    Y = Not known

    Z = Northern Ireland'
  expr: AT_RESIDENCE %in% c('ann', 'S', 'U', 'W', 'X', 'Y', 'Z')
  name: AT_RESIDENCE values codes
- description: Area Team of Treatment  is String(3)
  expr: is.character(AT_TREATMENT) & nchar(AT_TREATMENT) <= 3
  name: AT_TREATMENT String(3)
- description: AT_TREATMENT ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", AT_TREATMENT)
  name: AT_TREATMENT ann
- description: 'ann = Area Team of treatment

    Y = Unknown

    '
  expr: AT_TREATMENT %in% c('ann', 'Y')
  name: AT_TREATMENT values codes
- description: Bed Days Within the Year is Number
  expr: is.integer(BEDYEAR)
  name: BEDYEAR Number
- description: "nnn = The number of days of stay from 0 to 366  \nNull = Not applicable\
    \ (other maternity event / not known)"
  expr: BEDYEAR %in% c('nnn', 'Null')
  name: BEDYEAR values codes
- description: Resuscitation Method is String(1)
  expr: is.character(BIRESUS_n) & nchar(BIRESUS_n) <= 1
  name: BIRESUS_n String(1)
- description: "1 = Positive pressure nil, drugs nil  \n2 = Positive pressure nil,\
    \ drugs administered  \n3 = Positive pressure by mask, drugs nil  \n4 = Positive\
    \ pressure by mask, drugs administered  \n5 = Positive pressure by endotracheal\
    \ tube, drugs nil  \n6 = Positive pressure by endotracheal tube, drugs administered\
    \  \n8 = Not applicable (e.g. stillborn, where no method of resuscitation was\
    \ attempted)\n9 = Resuscitation Method Not known"
  expr: BIRESUS_n %in% c('1', '2', '3', '4', '5', '6', '8', '9')
  name: BIRESUS_n values codes
- description: Birth Order  is String(1)
  expr: is.character(BIRORDR_n) & nchar(BIRORDR_n) <= 1
  name: BIRORDR_n String(1)
- description: '1 to 7 = The sequence in which the baby was born

    8 = Not applicable

    9 = Birth Order not known (submitted value)

    X = Not known (derived in HES where the field is null)'
  expr: BIRORDR_n %in% c('1 to 7', '8', '9', 'X')
  name: BIRORDR_n values codes
- description: Birth Status is String(1)
  expr: is.character(BIRSTAT_n) & nchar(BIRSTAT_n) <= 1
  name: BIRSTAT_n String(1)
- description: "1 = Live  \n2 = Still birth: ante-partum  \n3 = Still birth: intra-partum\
    \  \n4 = Still birth: indeterminate  \n9 = Not known"
  expr: BIRSTAT_n %in% c('1', '2', '3', '4', '9')
  name: BIRSTAT_n values codes
- description: Birth Weight  is Number
  expr: is.integer(BIRWEIT_n)
  name: BIRWEIT_n Number
- description: BIRWEIT_n max 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,4}$", BIRWEIT_n)
  name: BIRWEIT_n max 4n
- description: 'max 4n = Weight in grams from 0010 to 6999

    7000 = 7000g or more

    9999 = Not known'
  expr: BIRWEIT_n %in% c('max 4n', '7000', '9999')
  name: BIRWEIT_n values codes
- description: Unique Booking Reference Number is Number
  expr: is.integer(BOOKREFNO)
  name: BOOKREFNO Number
- description: BOOKREFNO 12n NHS Data Model and Dictionary
  expr: grepl("^\\d{12}$", BOOKREFNO)
  name: BOOKREFNO 12n
- description: Cancer Network Area of Residence is String(3)
  expr: is.character(CANNET) & nchar(CANNET) <= 3
  name: CANNET String(3)
- description: "N01-N98 = Cancer network in England/Wales/Isle of Man \nZ99 = Scotland/Northern\
    \ Ireland/Channel Islands (pseudo) \nNull = No information available"
  expr: CANNET %in% c('N01-N98', 'Z99', 'Null')
  name: CANNET values codes
- description: Cancer Registry Area of Residence is String(5)
  expr: is.character(CANREG) & nchar(CANREG) <= 5
  name: CANREG String(5)
- description: 'Y0201-Y1701 = Cancer Registry in England/Wales

    Z9999 = Scotland/Northern Ireland/Channel Islands/Isle of Man (pseudo)

    Null = No information available'
  expr: CANREG %in% c('Y0201-Y1701', 'Z9999', 'Null')
  name: CANREG values codes
- description: Carer Support Indicator is String(2)
  expr: is.character(CARERSI) & nchar(CARERSI) <= 2
  name: CARERSI String(2)
- description: '01 = Yes - Carer support is available

    02 = No - Carer support is not available

    99 = Not known'
  expr: CARERSI %in% c('01', '02', '99')
  name: CARERSI values codes
- description: Administrative and Legal Status of Patient is String(2)
  expr: is.character(CATEGORY) & nchar(CATEGORY) <= 2
  name: CATEGORY String(2)
- description: "10 = NHS patient: not formally detained  \n11 = NHS patient: formally\
    \ detained under Part II of the Mental Health Act 1983  \n12 = NHS patient: formally\
    \ detained under Part III of the Mental Health Act 1983 or under other Acts  \n\
    13 = NHS patient: formally detained under part X, Mental Health Act 1983*  \n\
    20 = Private patient: not formally detained  \n21 = Private patient: formally\
    \ detained under Part II of the Mental Health Act 1983  \n22 = Private patient:\
    \ formally detained under Part III of the Mental Health Act 1983 or under other\
    \ Acts  \n23 = Private patient: formally detained under part X, Mental health\
    \ Act 1983*  \n30 = Amenity patient: not formally detained  \n31 = Amenity patient:\
    \ formally detained under Part II of the Mental Health Act 1983  \n32 = Amenity\
    \ patient: formally detained under Part III of the Mental Health Act 1983 or under\
    \ other Acts  \n33 = Amenity patient: formally detained under part X, Mental health\
    \ Act 1983*  \nNull = Other maternity event.  \n* Codes 13, 23 and 33 were introduced\
    \ at the start of the 1994-95 HES year (1 April 1995)"
  expr: CATEGORY %in% c('10', '11', '12', '13', '20', '21', '22', '23', '30', '31',
    '32', '33', 'Null')
  name: CATEGORY values codes
- description: Cause Code is String(10)
  expr: is.character(CAUSE) & nchar(CAUSE) <= 10
  name: CAUSE String(10)
- description: CAUSE 6an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{6}$", CAUSE)
  name: CAUSE 6an
- description: '6an = Code copied from a diagnosis field: this is a standard ICD-10
    code in the range V01-Y98

    Null = Unfinished episode, other maternity event, or no cause code found'
  expr: CAUSE %in% c('6an', 'Null')
  name: CAUSE values codes
- description: Cause Code - 3 Characters is String(3)
  expr: is.character(CAUSE_3) & nchar(CAUSE_3) <= 3
  name: CAUSE_3 String(3)
- description: CAUSE_3 ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", CAUSE_3)
  name: CAUSE_3 ann
- description: 'ann = Code copied from a diagnosis field: this is a standard ICD-10
    code in the range V01-Y98

    Null = Unfinished episode, other maternity event, or no cause code found'
  expr: CAUSE_3 %in% c('ann', 'Null')
  name: CAUSE_3 values codes
- description: Cause Code - 4 Characters  is String(4)
  expr: is.character(CAUSE_4) & nchar(CAUSE_4) <= 4
  name: CAUSE_4 String(4)
- description: CAUSE_4 annn NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{3}$", CAUSE_4)
  name: CAUSE_4 annn
- description: 'annn = Code copied from a diagnosis field: this is a standard ICD-10
    code in the range V01-Y98

    Null = Unfinished episode, other maternity event, or no cause code found'
  expr: CAUSE_4 %in% c('annn', 'Null')
  name: CAUSE_4 values codes
- description: "Sub Integrated Care Board of GP Practice (July 2022 onwards)\nClinical\
    \ Commissioning Group of GP Practice (until June 2022)\n is String(5)"
  expr: is.character(CCG_GP_PRACTICE) & nchar(CCG_GP_PRACTICE) <= 5
  name: CCG_GP_PRACTICE String(5)
- description: "3an or 5an = Sub ICB / CCG area of patient\u2019s GP practice\n59999\
    \ = Unknown"
  expr: CCG_GP_PRACTICE %in% c('3an or 5an', '59999')
  name: CCG_GP_PRACTICE values codes
- description: "Sub Integrated Care Board of Residence  (July 2022 onwards)\nClinical\
    \ Commissioning Group of Residence (until June 2022)\n is String(3-5)"
  expr: is.character(CCG_RESIDENCE) & (3 <= nchar(CCG_RESIDENCE)) & (nchar(CCG_RESIDENCE)
    <= 5)
  name: CCG_RESIDENCE String(3-5)
- description: "3an or 5an = Sub ICB / CCG of patient\u2019s residence\n59898 = Not\
    \ applicable\n59999 = Unknown"
  expr: CCG_RESIDENCE %in% c('3an or 5an', '59898', '59999')
  name: CCG_RESIDENCE values codes
- description: 'Sub Integrated Care Board of Responsibility (July 2022 onwards)

    Clinical Commissioning Group of Responsibility (until June 2022) is String(5)'
  expr: is.character(CCG_RESPONSIBILITY) & nchar(CCG_RESPONSIBILITY) <= 5
  name: CCG_RESPONSIBILITY String(5)
- description: '3an or 5an = Sub ICB / CCG of responsibility

    59999 = Unknown'
  expr: CCG_RESPONSIBILITY %in% c('3an or 5an', '59999')
  name: CCG_RESPONSIBILITY values codes
- description: Origin of CCG_Responsibility is String(1)
  expr: is.character(CCG_RESPONSIBILITY_ORIGIN) & nchar(CCG_RESPONSIBILITY_ORIGIN)
    <= 1
  name: CCG_RESPONSIBILITY_ORIGIN String(1)
- description: "1 = Derived from GPPRAC\n2 = Derived from HOMEADD\n3 = Derived from\
    \ postcode of SITETRET \n4 = Derived from postcode of provider\n9 = Unknown"
  expr: CCG_RESPONSIBILITY_ORIGIN %in% c('1', '2', '3', '4', '9')
  name: CCG_RESPONSIBILITY_ORIGIN values codes
- description: "Sub Integrated Care Board of Treatment (July 2022 onwards) \nClinical\
    \ Commissioning Group of Treatment (until June 2022)\n is String(5)"
  expr: is.character(CCG_TREATMENT) & nchar(CCG_TREATMENT) <= 5
  name: CCG_TREATMENT String(5)
- description: '3an or 5an = Sub ICB / CCG of treatment

    59999 = Unknown'
  expr: CCG_TREATMENT %in% c('3an or 5an', '59999')
  name: CCG_TREATMENT values codes
- description: Origin of CCG_Treatment is String(1)
  expr: is.character(CCG_TREATMENT_ORIGIN) & nchar(CCG_TREATMENT_ORIGIN) <= 1
  name: CCG_TREATMENT_ORIGIN String(1)
- description: "1 = Derived from postcode of SITETRET \n2 = Derived from postcode\
    \ of PROCODET\n9 = Unknown"
  expr: CCG_TREATMENT_ORIGIN %in% c('1', '2', '9')
  name: CCG_TREATMENT_ORIGIN values codes
- description: CDS Extract Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CDSEXTDATE)
  name: CDSEXTDATE Date(YYYY-MM-DD)
- description: CDSEXTDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CDSEXTDATE)
  name: CDSEXTDATE YYYY-MM-DD
- description: CDS Unique Identifier is String(35)
  expr: is.character(CDSUNIQUEID) & nchar(CDSUNIQUEID) <= 35
  name: CDSUNIQUEID String(35)
- description: CDSUNIQUEID 35an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{35}$", CDSUNIQUEID)
  name: CDSUNIQUEID 35an
- description: CDS Protocol Identifier is String(3)
  expr: is.character(CDSVERPROTID) & nchar(CDSVERPROTID) <= 3
  name: CDSVERPROTID String(3)
- description: '010 = Net change update mechanism (this is the recommended protocol)

    020 = Bulk replacement update mechanism'
  expr: CDSVERPROTID %in% c('010', '020')
  name: CDSVERPROTID values codes
- description: CDS Version Number is String(8)
  expr: is.character(CDSVERSION) & nchar(CDSVERSION) <= 8
  name: CDSVERSION String(8)
- description: 'CDS006 = The 2007 CDS-XML Specification

    CDS062 = The 2012 CDS XML Specification'
  expr: CDSVERSION %in% c('CDS006', 'CDS062')
  name: CDSVERSION values codes
- description: Duration of Care to Psychiatric Census Date  is Number
  expr: is.integer(CENDUR)
  name: CENDUR Number
- description: CENDUR 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", CENDUR)
  name: CENDUR 5n
- description: "5n = Duration of stay in days at census date from 0 to 29,200  \n\
    Null = Not applicable (EPITYPE is not 4) / not known"
  expr: CENDUR %in% c('5n', 'Null')
  name: CENDUR values codes
- description: Age at Psychiatric Census Date is Number
  expr: is.integer(CENSAGE)
  name: CENSAGE Number
- description: 'nnn = Age on the annual psychiatric census date

    120 = 120 years or more

    Null = Not applicable (EPITYPE is not 4) or not known'
  expr: CENSAGE %in% c('nnn', '120', 'Null')
  name: CENSAGE values codes
- description: Status of Patient Included In Psychiatric Census is String(1)
  expr: is.character(CENSTAT) & nchar(CENSTAT) <= 1
  name: CENSTAT String(1)
- description: "1 = Detained patient  \n2 = Long term patient  \n3 = Detained and\
    \ long term patient  \nNull = Not applicable"
  expr: CENSTAT %in% c('1', '2', '3', 'Null')
  name: CENSTAT values codes
- description: Ward Type at Psychiatric Census Date is String(7)
  expr: is.character(CENWARD) & nchar(CENWARD) <= 7
  name: CENWARD String(7)
- description: "A is as follows: \n\n51 = for intensive care: specially designated\
    \ ward for patients needing containment and more intensive management. This is\
    \ not to be confused with intensive nursing where patients may require one to\
    \ one nursing while on a standard ward  \n52 = for short stay: patients intended\
    \ to stay less than a year \n53 = for long stay: patients intended to stay a year\
    \ or more \n  For patients with Learning Disabilities  \n61 = designated or interim\
    \ secure unit \n62 = Patients intending to stay less than a year \n63 = Patients\
    \ intending to stay a year or more \nFor maternity patients:\n41 = only for patients\
    \ looked after by consultants  \n43 = only for patients looked after by general\
    \ medical practitioners  \n42 = for joint use by consultants & general medical\
    \ practitioners  \nFor neonates:\n33 = maternity: associated with the maternity\
    \ ward in that cots are in the maternity ward nursery or in the ward itself \n\
    32 = non-maternity: not associated with the maternity ward and without designated\
    \ cots for intensive care \n31 = not associated with the maternity ward and in\
    \ which there are some designated cots for intensive care \nFor the younger physically\
    \ disabled \n21 = spinal units, only those units which are nationally recognised\
    \ \n22 = other units \nFor terminally ill/Palliative Care  \n81 = terminally ill/Palliative\
    \ Care  \nFor general patients:\n11 = for intensive therapy, including high dependency\
    \ care \n12 = for normal therapy: where resources permit the admission of patients\
    \ who might need all but intensive or high dependency therapy \n13 = for limited\
    \ therapy: where nursing care rather than continuous medical care is provided.\
    \ Such wards can be used only for patients carefully selected and restricted to\
    \ a narrow range in terms of the extent and nature of disease \nAdditional codes:\n\
    71 = Home leave, non-psychiatric \n72 = Home leave, psychiatric \n\nB is age as\
    \ follows: \n1 = Neonates \n2 = Children and adolescents \n3 = Elderly \n8 = Any\
    \ age \n9 = Invalid \n\nC is sex as follows: \n1 = Male  \n2 = Female  \n8 = Not\
    \ specified  \n9 = Invalid  \nD is the hospital provider as follows: \n1 = NHS\
    \ hospital provider  \n2 = Non-NHS hospital provider  \n9 = Invalid\n\nD is Hospital\
    \ Provider Type as follows:\n1 = NHS Hospital provider\n2 = Non-NHS Hospital provider\n\
    9 = Home Leave\n\nE is the number of days in a week that the ward is open only\
    \ during the day.\n\nF is the number of days in a week that the ward is open at\
    \ night."
  expr: CENWARD %in% c('51', '52', '53', '61', '62', '63', '41', '43', '42', '33',
    '32', '31', '21', '22', '81', '11', '12', '13', '71', '72', '1', '2', '3', '8',
    '9')
  name: CENWARD values codes
- description: Patient Classification is String(1)
  expr: is.character(CLASSPAT) & nchar(CLASSPAT) <= 1
  name: CLASSPAT String(1)
- description: "1 = Ordinary admission  \n2 = Day case admission  \n3 = Regular day\
    \ attender  \n4 = Regular night attender  \n5 = Mothers and babies using only\
    \ delivery facilities  \n8 = Not applicable (other maternity event)\n9 = Not known"
  expr: CLASSPAT %in% c('1', '2', '3', '4', '5', '8', '9')
  name: CLASSPAT values codes
- description: Confidentiality Category is String(1)
  expr: is.character(CONFIDENTIALITY_CATEGORY) & nchar(CONFIDENTIALITY_CATEGORY) <=
    1
  name: CONFIDENTIALITY_CATEGORY String(1)
- description: 'Consultant Code

    Professional Registration Entry Identifier is String(8) to 2022

    String(32) from 2023'
  expr: is.character(CONSULT) & nchar(CONSULT) <= 8
  name: 'CONSULT String(8) to 2022

    String(32) from 2023'
- description: CONSULT 8an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{8}$", CONSULT)
  name: CONSULT 8an
- description: '8an = Consultant code:

    Cnnnnnnn = Consultant

    Dnnnnnnn = Dentist

    CDnnnnnn = Dental consultant

    H9999998 = Other healthcare professional

    M9999998 = Midwife

    N9999998 = Nurse

    C9999998 = Consultant not known

    D9999998 = Dentist not known

    CD999998 = Dental consultant not known

    & = Not known (null)

    99 = Invalid (the format of the submitted code is not valid. Note that the number
    is not verified, only the format of the code)'
  expr: CONSULT %in% c('8an', 'Cnnnnnnn', 'Dnnnnnnn', 'CDnnnnnn', 'H9999998', 'M9999998',
    'N9999998', 'C9999998', 'D9999998', 'CD999998', '&', '99')
  name: CONSULT values codes
- description: Commissioning Region of GP Practice  is String(3)
  expr: is.character(CR_GP_PRACTICE) & nchar(CR_GP_PRACTICE) <= 3
  name: CR_GP_PRACTICE String(3)
- description: CR_GP_PRACTICE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", CR_GP_PRACTICE)
  name: CR_GP_PRACTICE ann
- description: "ann = Commissioning Region of patient\u2019s GP practice\nQ99 = Wales\n\
    Y = Unknown"
  expr: CR_GP_PRACTICE %in% c('ann', 'Q99', 'Y')
  name: CR_GP_PRACTICE values codes
- description: Commissioning Region of Residence  is String(3)
  expr: is.character(CR_RESIDENCE) & nchar(CR_RESIDENCE) <= 3
  name: CR_RESIDENCE String(3)
- description: CR_RESIDENCE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", CR_RESIDENCE)
  name: CR_RESIDENCE ann
- description: 'ann = Commissioning Region of residence

    Q99 = Wales

    S = Scotland

    U = No Fixed Abode

    X = Isle of Man, Channel Islands or Foreign

    Z = Northern Ireland

    Y = Unknown'
  expr: CR_RESIDENCE %in% c('ann', 'Q99', 'S', 'U', 'X', 'Z', 'Y')
  name: CR_RESIDENCE values codes
- description: Commissioning Region of Treatment  is String(3)
  expr: is.character(CR_TREATMENT) & nchar(CR_TREATMENT) <= 3
  name: CR_TREATMENT String(3)
- description: CR_TREATMENT ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", CR_TREATMENT)
  name: CR_TREATMENT ann
- description: 'ann = Commissioning Region of treatment

    Q99 = Wales

    Y = Unknown'
  expr: CR_TREATMENT %in% c('ann', 'Q99', 'Y')
  name: CR_TREATMENT values codes
- description: 'Commissioning Serial Number

    NHS Service Agreement Identifier is String(6) to 2022

    String(20) from 2023'
  expr: is.character(CSNUM) & nchar(CSNUM) <= 6
  name: 'CSNUM String(6) to 2022

    String(20) from 2023'
- description: CSNUM 6an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{6}$", CSNUM)
  name: CSNUM 6an
- description: Current Electoral Ward is String(4)
  expr: is.character(CURRWARD) & nchar(CURRWARD) <= 4
  name: CURRWARD String(4)
- description: CURRWARD 2a NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{2}$", CURRWARD)
  name: CURRWARD 2a
- description: '2a = Electoral ward

    Y = Not known'
  expr: CURRWARD %in% c('2a', 'Y')
  name: CURRWARD values codes
- description: Current Electoral Ward (ONS) is String(9)
  expr: is.character(CURRWARD_ONS) & nchar(CURRWARD_ONS) <= 9
  name: CURRWARD_ONS String(9)
- description: 'Ennnnnnnn = England

    Wnnnnnnnn = Wales

    Snnnnnnnn = Scotland

    Northern Ireland start with 95 followed by a letter, then space, then 2 digits
    (e.g. 95B 24)


    E99999999 = England (not otherwise stated)

    W99999999 = Wales (not otherwise stated)

    S99999999 = Scotland (not otherwise stated)

    N99999999 = Northern Ireland (not otherwise stated)

    L99999999 = Channel Islands

    M99999999 = Isle of Man

    U = No fixed abode

    X = Foreign

    Y = Not known'
  expr: CURRWARD_ONS %in% c('Ennnnnnnn', 'Wnnnnnnnn', 'Snnnnnnnn', 'E99999999', 'W99999999',
    'S99999999', 'N99999999', 'L99999999', 'M99999999', 'U', 'X', 'Y')
  name: CURRWARD_ONS values codes
- description: Delivery Place Change Reason is String(1)
  expr: is.character(DELCHANG) & nchar(DELCHANG) <= 1
  name: DELCHANG String(1)
- description: "1 = Decision made during pregnancy because the patient's address changed\
    \  \n2 = Decision made during pregnancy for clinical reasons  \n3 = Decision made\
    \ during pregnancy for other reasons  \n4 = Decision made during labour for clinical\
    \ reasons  \n5 = Decision made during labour for other reasons  \n6 = Occurred\
    \ unintentionally during labour  \n8 = Not applicable: there was no change  \n\
    9 = Devliery change reason not known  \nNull = No change (before 1995-96)"
  expr: DELCHANG %in% c('1', '2', '3', '4', '5', '6', '8', '9', 'Null')
  name: DELCHANG values codes
- description: Delivery Place Intended is String(1)
  expr: is.character(DELINTEN) & nchar(DELINTEN) <= 1
  name: DELINTEN String(1)
- description: "0 = In NHS hospital: delivery facilities associated with midwife ward\
    \  \n1 = At a domestic address  \n2 = In NHS hospital: delivery facilities associated\
    \ with consultant ward  \n3 = In NHS hospital: delivery facilities associated\
    \ with General Medical Practitioner ward  \n4 = In NHS hospital: delivery facilities\
    \ associated with consultant / General Medical Practitioner / midwife ward, inclusive\
    \ of any combination of two of the professionals mentioned \n5 = In private hospital\
    \  \n6 = In other hospital or institution  \n7 = In NHS hospital: ward or unit\
    \ without delivery facilities  \n8 = None of the above  \n9 = Not known  \nNull\
    \ = Not applicable (from 1990-91 to 1995-96)"
  expr: DELINTEN %in% c('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Null')
  name: DELINTEN values codes
- description: Alternative Delivery Method (Derived) is String(2)
  expr: is.character(DELMETH_D) & nchar(DELMETH_D) <= 2
  name: DELMETH_D String(2)
- description: '01 = Elective caesarean delivery

    02 = Other/emergency caesarean delivery

    03 = Breech extraction delivery

    04 = Other breech delivery

    05 = Low forceps cephalic delivery

    06 = Other Forceps Delivery

    07 = Ventouse (Vacuum) delivery

    08 = Spontaneous other delivery

    09 = Normal delivery (Spontaneous vertex)

    10 = Other methods of delivery

    X = Not known'
  expr: DELMETH_D %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    'X')
  name: DELMETH_D values codes
- description: Delivery Method is String(1)
  expr: is.character(DELMETH_n) & nchar(DELMETH_n) <= 1
  name: DELMETH_n String(1)
- description: "0 = Spontaneous vertex (normal vaginal delivery, occipitoanterior)\
    \  \n1 = Spontaneous other cephalic (cephalic vaginal delivery with abnormal presentation\
    \ of head at delivery, without instruments, with or without manipulation)  \n\
    2 = Low forceps, not breech, including forceps delivery not otherwise specified\
    \ (forceps, low application, without manipulation)  \n3 = Other forceps, not breech,\
    \ including high forceps and mid forceps (forceps with manipulation)  \n4 = Ventouse,\
    \ vacuum extraction  \n5 = Breech, including partial breech extraction (spontaneous\
    \ delivery assisted or unspecified)  \n6 = Breech\n7 = Elective caesarean section\n\
    8 = Emergency caesarean section\n9 = Other \nX = Not known"
  expr: DELMETH_n %in% c('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'X')
  name: DELMETH_n values codes
- description: Labour or Delivery Onset Method is Number
  expr: is.integer(DELONSET)
  name: DELONSET Number
- description: "1 = Spontaneous: the onset of regular contractions whether or not\
    \ preceded by spontaneous rupture of the membranes  \n2 = Any caesarean section\
    \ carried out immediately following the onset of labour, when the decision was\
    \ made before labour  \n3 = Surgical induction by amniotomy  \n4 = Medical induction,\
    \ including the administration of agents either orally, intravenously or intravaginally\
    \ with the intention of initiating labour  \n5 = Combination of surgical induction\
    \ and medical induction  \n9 = Delivery onset method not known\nNull = Not applicable\
    \ (from 1990-91 to 1994-95)\n"
  expr: DELONSET %in% c('1', '2', '3', '4', '5', '9', 'Null')
  name: DELONSET values codes
- description: Delivery Place Actual is String(1)
  expr: is.character(DELPLAC_n) & nchar(DELPLAC_n) <= 1
  name: DELPLAC_n String(1)
- description: "0 = In NHS hospital: delivery facilities associated with midwife ward\
    \  \n1 = At a domestic address  \n2 = In NHS hospital: delivery facilities associated\
    \ with consultant ward  \n3 = In NHS hospital: delivery facilities associated\
    \ with General Medical Practitioner ward  \n4 = In NHS hospital: delivery facilities\
    \ associated with consultant / General Medical Practitioner / midwife ward, inclusive\
    \ of any combination of two of the professionals mentioned \n5 = In private hospital\
    \  \n6 = In other hospital or institution  \n7 = In NHS hospital: ward or unit\
    \ without delivery facilities  \n8 = Other than those above  \n9 = Not known"
  expr: DELPLAC_n %in% c('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')
  name: DELPLAC_n values codes
- description: Anaesthetic Given Post-Labour or Delivery  is String(1)
  expr: is.character(DELPOSAN) & nchar(DELPOSAN) <= 1
  name: DELPOSAN String(1)
- description: "1 = General anaesthetic: the administration by a doctor of an agent\
    \ to produce unconsciousness  \n2 = Epidural or caudal anaesthetic: the injection\
    \ of a local anaesthetic into the epidural space  \n3 = Spinal anaesthetic: the\
    \ injection of a local anaesthetic agent into the subarachnoid space  \n4 = General\
    \ anaesthetic and epidural or caudal anaesthetic  \n5 = General anaesthetic and\
    \ spinal anaesthetic  \n6 = Epidural or caudal, and spinal anaesthetic  \n7 =\
    \ Other than 1 to 6  \n8 = Not applicable i.e. no analgesic or anaesthetic administered\n\
    9 =  Anaesthetic Given Post Labour Not known  \nNull = Not applicable (from 1990-91\
    \ to 1994-95)"
  expr: DELPOSAN %in% c('1', '2', '3', '4', '5', '6', '7', '8', '9', 'Null')
  name: DELPOSAN values codes
- description: Anaesthetic Given During Labour or Delivery is String(1)
  expr: is.character(DELPREAN) & nchar(DELPREAN) <= 1
  name: DELPREAN String(1)
- description: "1 = General anaesthetic: the administration by a doctor of an agent\
    \ to produce unconsciousness  \n2 = Epidural or caudal anaesthetic: the injection\
    \ of a local anaesthetic into the epidural space  \n3 = Spinal anaesthetic: the\
    \ injection of a local anaesthetic agent into the subarachnoid space  \n4 = General\
    \ anaesthetic and epidural or caudal anaesthetic  \n5 = General anaesthetic and\
    \ spinal anaesthetic  \n6 = Epidural or caudal, and spinal anaesthetic  \n7 =\
    \ Other than 1 to 6  \n8 = Not applicable i.e. no analgesic or anaesthetic administered\n\
    9 = Anaesthetic Given During Labour Not known  \nNull = Not applicable (from 1990-91\
    \ to 1994-95)"
  expr: DELPREAN %in% c('1', '2', '3', '4', '5', '6', '7', '8', '9', 'Null')
  name: DELPREAN values codes
- description: Status of Person Conducting Delivery is String(1)
  expr: is.character(DELSTAT_n) & nchar(DELSTAT_n) <= 1
  name: DELSTAT_n String(1)
- description: "1 = Hospital doctor  \n2 = General medical practitioner  \n3 = Midwife\
    \  \n8 = Other than above  \n9 = Status of Person Conducting Delivery not known"
  expr: DELSTAT_n %in% c('1', '2', '3', '8', '9')
  name: DELSTAT_n values codes
- description: High-Dependency Care Level is Number
  expr: is.integer(DEPDAYS_n)
  name: DEPDAYS_n Number
- description: DEPDAYS_n 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{4}$", DEPDAYS_n)
  name: DEPDAYS_n 4n
- description: '4n = Number of days in the range 000 to 9998

    9999 = Not known: a validation error'
  expr: DEPDAYS_n %in% c('4n', '9999')
  name: DEPDAYS_n values codes
- description: Duration of Detention is Number
  expr: is.integer(DETDUR)
  name: DETDUR Number
- description: DETDUR 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", DETDUR)
  name: DETDUR 5n
- description: "5n = Duration of detention in days at census date from 0 to 29,200\
    \  \nNull = Not applicable (EPITYPE is not 4) / not known"
  expr: DETDUR %in% c('5n', 'Null')
  name: DETDUR values codes
- description: Detention Category is String(1)
  expr: is.character(DETNCAT) & nchar(DETNCAT) <= 1
  name: DETNCAT String(1)
- description: "0 = Informal, not formally detained  \n1 = Formally detained under\
    \ Part II, Mental Health Act 1983  \n2 = Formally detained under Part III, Mental\
    \ Health Act 1983, and other legislation  \n3 = Formally detained under Part X,\
    \ Mental Health Act 1983"
  expr: DETNCAT %in% c('0', '1', '2', '3')
  name: DETNCAT values codes
- description: Date Detention Commenced is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DETNDATE)
  name: DETNDATE Date(YYYY-MM-DD)
- description: DETNDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DETNDATE)
  name: DETNDATE YYYY-MM-DD
- description: Concatenated Diagnosis Codes - 3 Character is String(100)
  expr: is.character(DIAG_3_CONCAT) & nchar(DIAG_3_CONCAT) <= 100
  name: DIAG_3_CONCAT String(100)
- description: Diagnosis Code - 3 Character is String(3)
  expr: is.character(DIAG_3_nn) & nchar(DIAG_3_nn) <= 3
  name: DIAG_3_nn String(3)
- description: DIAG_3_nn 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", DIAG_3_nn)
  name: DIAG_3_nn 3an
- description: '3an = A valid ICD-9 or ICD-10 diagnosis code

    Null = Not applicable

    R69 = Not known, invalid or null'
  expr: DIAG_3_nn %in% c('3an', 'Null', 'R69')
  name: DIAG_3_nn values codes
- description: Concatenated Diagnosis Codes - 4 Character is String(120)
  expr: is.character(DIAG_4_CONCAT) & nchar(DIAG_4_CONCAT) <= 120
  name: DIAG_4_CONCAT String(120)
- description: Diagnosis Code - 4 Character is String(4)
  expr: is.character(DIAG_4_nn) & nchar(DIAG_4_nn) <= 4
  name: DIAG_4_nn String(4)
- description: DIAG_4_nn 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", DIAG_4_nn)
  name: DIAG_4_nn 4an
- description: '4an = A valid ICD-9 or ICD-10 diagnosis code

    Null = Not applicable

    R69X = Not known, invalid or null'
  expr: DIAG_4_nn %in% c('4an', 'Null', 'R69X')
  name: DIAG_4_nn values codes
- description: Diagnosis Code (Unpivoted) is String(6)
  expr: is.character(DIAG_CODE) & nchar(DIAG_CODE) <= 6
  name: DIAG_CODE String(6)
- description: '4an to 6an = A valid ICD-9 or ICD-10 diagnosis code

    R96X = Not known

    R69X6 = Null (primary diagnosis only)

    R69X8 = Invalid code submitted

    R69X3 = Invalid (external cause code entered as primary diagnosis)

    Null = Not applicable'
  expr: DIAG_CODE %in% c('4an to 6an', 'R96X', 'R69X6', 'R69X8', 'R69X3', 'Null')
  name: DIAG_CODE values codes
- description: Count of Diagnoses is Number
  expr: is.integer(DIAG_COUNT)
  name: DIAG_COUNT Number
- description: DIAG_COUNT 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", DIAG_COUNT)
  name: DIAG_COUNT 2n
- description: Diagnosis Code is String(6)
  expr: is.character(DIAG_nn) & nchar(DIAG_nn) <= 6
  name: DIAG_nn String(6)
- description: '4an to 6an = A valid ICD-9 or ICD-10 diagnosis code

    R96X = Not known

    R69X6 = Null (primary diagnosis only)

    R69X8 = Invalid code submitted

    R69X3 = Invalid (external cause code entered as primary diagnosis)

    Null = Not applicable'
  expr: DIAG_nn %in% c('4an to 6an', 'R96X', 'R69X6', 'R69X8', 'R69X3', 'Null')
  name: DIAG_nn values codes
- description: Diagnosis Code Sequence is Number
  expr: is.integer(DIAG_SEQ)
  name: DIAG_SEQ Number
- description: Date of Discharge is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE)
  name: DISDATE Date(YYYY-MM-DD)
- description: DISDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE)
  name: DISDATE YYYY-MM-DD
- description: 'YYYY-MM-DD = Date of discharge

    1800-01-01 = Null

    1801-01-01 = invalid date submitted'
  expr: DISDATE %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: DISDATE values codes
- description: Date of Discharge - Uncleaned is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE_UNCLN)
  name: DISDATE_UNCLN Date(YYYY-MM-DD)
- description: DISDATE_UNCLN YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISDATE_UNCLN)
  name: DISDATE_UNCLN YYYY-MM-DD
- description: 'YYYY-MM-DD = Date

    Null = Not known / not applicable'
  expr: DISDATE_UNCLN %in% c('YYYY-MM-DD', 'Null')
  name: DISDATE_UNCLN values codes
- description: Destination on Discharge is String(2)
  expr: is.character(DISDEST) & nchar(DISDEST) <= 2
  name: DISDEST String(2)
- description: "19 = The usual place of residence, including no fixed abode  \n29\
    \ = Temporary place of residence when usually resident elsewhere, for example,\
    \ hotels and residential educational establishments  \n30 = Repatriation from\
    \ high security psychiatric hospital (from 1999-2000)  \n37 = Penal establishment\
    \ - court (from 1999-2000)  \n38 = Penal establishment - police station (1999-2000\
    \ to 2022-23)  \n39 = Penal establishment - court and police station excluded\
    \ (from 1999-2000)  \n40 = Penal establishment\n42 = Police Station / Police Custody\
    \ Suite\n48 = High security psychiatric hospital, Scotland (from 1999-2000)  \n\
    49 = NHS other hospital provider - high security psychiatric\n50 = NHS other hospital\
    \ provider - medium secure unit \n51 = NHS other hospital provider - ward for\
    \ general PATIENTS or the younger physically disabled \n52 = NHS other hospital\
    \ provider - ward for maternity PATIENTS or Neonates  \n53 = NHS other hospital\
    \ provider - ward for PATIENTS who are mentally ill or have learning disabilities\
    \ \n54 = NHS run Care Home (retired in 2022-23)  \n55 = Care Home With Nursing\n\
    56 = Care Home Without Nursing\n65 = Local Authority residential accommodation\
    \ i.e. where care is provided (retired in 2022-23)\n66 = Local Authority foster\
    \ care \n79 = PATIENT died or still birth \n84 = Independent Sector Healthcare\
    \ Provider run hospital - medium secure unit\n85 = Non-NHS (other than Local Authority)\
    \ run Care Home (retired in 2022-23)\n87 = Independent Sector Healthcare Provider\
    \ run hospital - excluding medium secure unit\n88 = Hospice\n89 = ORGANISATION\
    \ responsible for forced repatriation\n98 = Not applicable - Hospital Provider\
    \ Spell not finished at episode end (i.e. not discharged) or current episode unfinished\n\
    99 = Destination of Discharge Not Known"
  expr: DISDEST %in% c('19', '29', '30', '37', '38', '39', '40', '42', '48', '49',
    '50', '51', '52', '53', '54', '55', '56', '65', '66', '79', '84', '85', '87',
    '88', '89', '98', '99')
  name: DISDEST values codes
- description: Destination on Discharge - Uncleaned is String(2)
  expr: is.character(DISDEST_UNCLN) & nchar(DISDEST_UNCLN) <= 2
  name: DISDEST_UNCLN String(2)
- description: Method of Discharge  is String(1)
  expr: is.character(DISMETH) & nchar(DISMETH) <= 1
  name: DISMETH String(1)
- description: '1 = Patient discharged on clinical advice or with clinical consent

    2 = Patient discharged him/herself or was discharged by a relative or advocate
    (retired in 2022-23)

    3 = Patient discharged by a mental health review tribunal, Home Secretary or court

    4 = Patient died

    5 = Stillbirth

    6 = Patient discharged himself/herself (available from 2022-23)

    7 = Patient discharged by a relative or advocate (available from 2022-23)

    8 = Not applicable - Hospital Provider Spell not finished at episode end (i.e.
    not discharged) or current episode unfinished

    9 = Method of Discharge Not Known'
  expr: DISMETH %in% c('1', '2', '3', '4', '5', '6', '7', '8', '9')
  name: DISMETH values codes
- description: Method of Discharge - Uncleaned is String(1)
  expr: is.character(DISMETH_UNCLN) & nchar(DISMETH_UNCLN) <= 1
  name: DISMETH_UNCLN String(1)
- description: "1 = Discharged on clinical advice or with clinical consent  \n2 =\
    \ Self discharged, or discharged by a relative or advocate  \n3 = Discharged by\
    \ a mental health review tribunal, the Home Secretary or a court  \n4 = Died \
    \ \n5 = Baby was still born  \n8 = Not applicable: patient still in hospital \
    \ \n9 = Not known: a validation error"
  expr: DISMETH_UNCLN %in% c('1', '2', '3', '4', '5', '8', '9')
  name: DISMETH_UNCLN values codes
- description: Discharge Ready Date  is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE Date(YYYY-MM-DD)
- description: DISREADYDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DISREADYDATE)
  name: DISREADYDATE YYYY-MM-DD
- description: Date of Birth is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOB)
  name: DOB Date(YYYY-MM-DD)
- description: DOB YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOB)
  name: DOB YYYY-MM-DD
- description: 'YYYY-MM-DD = DOB

    1800-01-01 = Null

    1801-01-01 = invalid date submitted'
  expr: DOB %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: DOB values codes
- description: Birth Date (Baby)  is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOBBABY_n)
  name: DOBBABY_n Date(YYYY-MM-DD)
- description: DOBBABY_n YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    DOBBABY_n)
  name: DOBBABY_n YYYY-MM-DD
- description: 'YYYY-MM-DD = Birth date (baby)

    Null = Invalid/not known'
  expr: DOBBABY_n %in% c('YYYY-MM-DD', 'Null')
  name: DOBBABY_n values codes
- description: HRG Dominant Procedure (Provider Derived) is String(4)
  expr: is.character(DOMPROC) & nchar(DOMPROC) <= 4
  name: DOMPROC String(4)
- description: DOMPROC 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", DOMPROC)
  name: DOMPROC 4an
- description: "4an = Procedure code  \n- = No operation performed  \n& = Not known"
  expr: DOMPROC %in% c('4an', '-', '&')
  name: DOMPROC values codes
- description: Duplicate Flag  is Number
  expr: is.integer(DUPLICATE_FLAG)
  name: DUPLICATE_FLAG Number
- description: Earliest Reasonable Date Offered is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLDATOFF)
  name: EARLDATOFF Date(YYYY-MM-DD)
- description: EARLDATOFF YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLDATOFF)
  name: EARLDATOFF YYYY-MM-DD
- description: Date of Decision to Admit  is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ELECDATE)
  name: ELECDATE Date(YYYY-MM-DD)
- description: ELECDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    ELECDATE)
  name: ELECDATE YYYY-MM-DD
- description: 'YYYY-MM-DD = Date of decision to admit

    1800-01-01 = Null date submitted

    1801-01-01 = invalid date submitted'
  expr: ELECDATE %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: ELECDATE values codes
- description: Duration of Elective Wait (Derived) is Number
  expr: is.integer(ELECDUR)
  name: ELECDUR Number
- description: ELECDUR max 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,4}$", ELECDUR)
  name: ELECDUR max 4n
- description: 'max 4n = Duration of elective wait in days

    9998 = Not applicable

    9999 = Not Known (no date known for Decision to Admit)'
  expr: ELECDUR %in% c('max 4n', '9998', '9999')
  name: ELECDUR values codes
- description: Duration of Elective Wait (Calculation) is Number
  expr: is.integer(ELECDUR_CALC)
  name: ELECDUR_CALC Number
- description: ELECDUR_CALC 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{4}$", ELECDUR_CALC)
  name: ELECDUR_CALC 4n
- description: '4n = Waiting time in days from 1 to 8887

    null = Not known / not applicable'
  expr: ELECDUR_CALC %in% c('4n', 'null')
  name: ELECDUR_CALC values codes
- description: Duration of Elective Wait (Submitted) is Number
  expr: is.integer(ELECDURN)
  name: ELECDURN Number
- description: ELECDURN max 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,4}$", ELECDURN)
  name: ELECDURN max 4n
- description: 'max 4n = Duration of elective wait in days

    9998 = Not applicable

    9999 = Not known (i.e. no date known for decision to admit): a validation error

    null = Not known / not applicable'
  expr: ELECDURN %in% c('max 4n', '9998', '9999', 'null')
  name: ELECDURN values codes
- description: Age at End of Episode is Number
  expr: is.integer(ENDAGE)
  name: ENDAGE Number
- description: "nnn = Age in years\n120 = 120 years or more\n7001 = Less than 1 day\
    \  \n7002 = 1 to 6 days  \n7003 = 7 to 28 days  \n7004 = 29 to 90 days (under\
    \ 3 months)  \n7005 = 91 to 181 days (approximately 3 months to under 6 months)\
    \  \n7006 = 182 to 272 days (approximately 6 months to under 9 months)  \n7007\
    \ = 273 to <1 year (approximately 9 months to under 1 year)  \nNull = Not applicable\
    \ (other maternity event) or not known"
  expr: ENDAGE %in% c('nnn', '120', '7001', '7002', '7003', '7004', '7005', '7006',
    '7007', 'Null')
  name: ENDAGE values codes
- description: Episode Duration is Number
  expr: is.integer(EPIDUR)
  name: EPIDUR Number
- description: EPIDUR 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", EPIDUR)
  name: EPIDUR 5n
- description: "5n = Duration of episode in days from 0 to 29,200  \nNull = Not applicable\
    \ (other maternity event or not known)"
  expr: EPIDUR %in% c('5n', 'Null')
  name: EPIDUR values codes
- description: Episode End Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPIEND)
  name: EPIEND Date(YYYY-MM-DD)
- description: EPIEND YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPIEND)
  name: EPIEND YYYY-MM-DD
- description: 'YYYY-MM-DD = Date episode ended

    1800-01-01 = Null

    1801-01-01 = invalid date submitted'
  expr: EPIEND %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: EPIEND values codes
- description: 'HES Record Identifier is String(12) (1989-90 to 2020-21)

    String(19) (2021-22 onwards)'
  expr: is.character(EPIKEY) & nchar(EPIKEY) <= 19
  name: 'EPIKEY String(12) (1989-90 to 2020-21)

    String(19) (2021-22 onwards)'
- description: Episode Order is Number
  expr: is.integer(EPIORDER)
  name: EPIORDER Number
- description: EPIORDER 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", EPIORDER)
  name: EPIORDER 2n
- description: "2n = The number of the episode in the sequence of episodes from 01-87\
    \  \n98 = Not applicable  \n99 = Not known: a validation error  \nNull = Not applicable:\
    \ other maternity event"
  expr: EPIORDER %in% c('2n', '98', '99', 'Null')
  name: EPIORDER values codes
- description: Episode Start Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPISTART)
  name: EPISTART Date(YYYY-MM-DD)
- description: EPISTART YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EPISTART)
  name: EPISTART YYYY-MM-DD
- description: 'YYYY-MM-DD = Date episode started

    1800-01-01 = Null date submitted

    1801-01-01 = invalid date submitted'
  expr: EPISTART %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: EPISTART values codes
- description: Episode Status is Number
  expr: is.integer(EPISTAT)
  name: EPISTAT Number
- description: "1 = Unfinished (until 2016-17)\n3 = Finished  \n9 = Derived unfinished\
    \ (not present on processed data)"
  expr: EPISTAT %in% c('1', '3', '9')
  name: EPISTAT values codes
- description: Episode Type is Number
  expr: is.integer(EPITYPE)
  name: EPITYPE Number
- description: "1 = General episode (anything that is not covered by the other codes)\
    \  \n2 = Delivery episode  \n3 = Birth episode  \n4 = Formally detained under\
    \ the provisions of mental health legislation or long-term (over one year) psychiatric\
    \ patients who should have additional information recorded on the psychiatric\
    \ census (until 2016-17)\n5 = Other delivery event \n6 = Other birth event"
  expr: EPITYPE %in% c('1', '2', '3', '4', '5', '6')
  name: EPITYPE values codes
- description: Ethnic Category is String(2)
  expr: is.character(ETHNOS) & nchar(ETHNOS) <= 2
  name: ETHNOS String(2)
- description: "From 2001-02 onwards:\nA = British (White) \nB = Irish (White) \n\
    C = Any other White background \nD = White and Black Caribbean (Mixed) \nE = White\
    \ and Black African (Mixed) \nF = White and Asian (Mixed) \nG = Any other Mixed\
    \ background \nH = Indian (Asian or Asian British) \nJ = Pakistani (Asian or Asian\
    \ British)\nK = Bangladeshi (Asian or Asian British) \nL = Any other Asian background\
    \ \nM = Caribbean (Black or Black British) \nN = African (Black or Black British)\
    \ \nP = Any other Black background \nR = Chinese (other ethnic group) \nS = Any\
    \ other ethnic group \nZ = Not stated\nX = Not known (prior to 2013)\n99 = Not\
    \ known (2013 onwards)\nFrom 1995-96 to 2000-01:\n0= White\n1 = Black - Caribbean\
    \ \n2 = Black - African\n3 = Black - Other \n4 = Indian \n5 = Pakistani \n6 =\
    \ Bangladeshi \n7 = Chinese \n8 = Any other ethnic group \n9 = Not given \n99\
    \ = Not known "
  expr: ETHNOS %in% c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M',
    'N', 'P', 'R', 'S', 'Z', 'X', '99', '0', '1', '2', '3', '4', '5', '6', '7', '8',
    '9')
  name: ETHNOS values codes
- description: Ethnic Category (Local Code)  is String(1)
  expr: is.character(ETHNOSL) & nchar(ETHNOSL) <= 1
  name: ETHNOSL String(1)
- description: ETHNOSL 1an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{1}$", ETHNOSL)
  name: ETHNOSL 1an
- description: Ethnic Category (Raw) is String(1)
  expr: is.character(ETHRAW) & nchar(ETHRAW) <= 1
  name: ETHRAW String(1)
- description: "A = British (White) \nB = Irish (White) \nC = Any other White background\
    \ \nD = White and Black Caribbean (Mixed) \nE = White and Black African (Mixed)\
    \ \nF = White and Asian (Mixed) \nG = Any other Mixed background \nH = Indian\
    \ (Asian or Asian British) \nJ = Pakistani (Asian or Asian British)\nK = Bangladeshi\
    \ (Asian or Asian British) \nL = Any other Asian background \nM = Caribbean (Black\
    \ or Black British) \nN = African (Black or Black British) \nP = Any other Black\
    \ background \nR = Chinese (other ethnic group) \nS = Any other ethnic group \n\
    Z = Not stated\nX = Not known (prior to 2013)\n9 = Not known (2013 onwards)"
  expr: ETHRAW %in% c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M',
    'N', 'P', 'R', 'S', 'Z', 'X', '9')
  name: ETHRAW values codes
- description: Finished Admission Episode flag is Number
  expr: is.integer(FAE)
  name: FAE Number
- description: '1 = Finished Admission Episode

    0 = All other episodes'
  expr: FAE %in% c('1', '0')
  name: FAE values codes
- description: Finished Admission Episode, Emergency Classification flag is Number
  expr: is.integer(FAE_EMERGENCY)
  name: FAE_EMERGENCY Number
- description: "1 = Finished Admission Episode Flag where admission to hospital is\
    \ from an emergency admission \n0 = All other episodes"
  expr: FAE_EMERGENCY %in% c('1', '0')
  name: FAE_EMERGENCY values codes
- description: Finished Consultant Episode flag is Number
  expr: is.integer(FCE)
  name: FCE Number
- description: '1 = Finished Consultant Episode

    0 = All other episodes'
  expr: FCE %in% c('1', '0')
  name: FCE values codes
- description: Finished Discharge Episode flag is Number
  expr: is.integer(FDE)
  name: FDE Number
- description: '1 = Finished Discharge Episode

    0 = All other episodes'
  expr: FDE %in% c('1', '0')
  name: FDE values codes
- description: First Regular Day or Night Admission is String(1)
  expr: is.character(FIRSTREG) & nchar(FIRSTREG) <= 1
  name: FIRSTREG String(1)
- description: '0 = First in a series

    1 = Subsequent to first in a series'
  expr: FIRSTREG %in% c('0', '1')
  name: FIRSTREG values codes
- description: Financial Year is String(4)
  expr: is.character(FYEAR) & nchar(FYEAR) <= 4
  name: FYEAR String(4)
- description: FYEAR 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{4}$", FYEAR)
  name: FYEAR 4n
- description: Length of Gestation is Number
  expr: is.integer(GESTAT_n)
  name: GESTAT_n Number
- description: GESTAT_n 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", GESTAT_n)
  name: GESTAT_n 2n
- description: "2n = Number of weeks in the range 10 to 49  \n99 = Not known: a validation\
    \ error"
  expr: GESTAT_n %in% c('2n', '99')
  name: GESTAT_n values codes
- description: Government Office Region of Treatment is String(1)
  expr: is.character(GORTREAT) & nchar(GORTREAT) <= 1
  name: GORTREAT String(1)
- description: "A = North East  \nB = North West  \nD = Yorkshire and The Humber \
    \ \nE = East Midlands  \nF = West Midlands  \nG = East of England  \nH = London\
    \  \nJ = South East  \nK = South West  \nY = Not known"
  expr: GORTREAT %in% c('A', 'B', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'Y')
  name: GORTREAT values codes
- description: General Medical Practice (Patient Registration) is String(6-8)
  expr: is.character(GPPRAC) & (6 <= nchar(GPPRAC)) & (nchar(GPPRAC) <= 8)
  name: GPPRAC String(6-8)
- description: "6an - 8an = GP practice code (English GP's with codes commencing A-P\
    \ only)  \nV81997 = Patient not currently registered at a GP practice, but is\
    \ eligible to be registered should they wish to\nV81998 = Not applicable \nV81999\
    \ = Not known (submitted value) - where it is not possible to determine a patient's\
    \ registered GP practice but it is known that they should have one, or where it\
    \ is impossible to determine whether the patient should or should not have a registered\
    \ practice (e.g. the patient cannot communicate and is unidentified)\n& = Not\
    \ known (derived in HES where no code was submitted)"
  expr: GPPRAC %in% c('6an - 8an', 'V81997', 'V81998', 'V81999', '&')
  name: GPPRAC values codes
- description: Health Authority of GP Practice is String(8)
  expr: is.character(GPPRACHA) & nchar(GPPRACHA) <= 8
  name: GPPRACHA String(8)
- description: "aaa or aan = Health Authority of GP practice  \nY = Unknown"
  expr: GPPRACHA %in% c('aaa or aan', 'Y')
  name: GPPRACHA values codes
- description: Regional Office of GP Practice is String(8)
  expr: is.character(GPPRACRO) & nchar(GPPRACRO) <= 8
  name: GPPRACRO String(8)
- description: "Y01 = Northern and Yorkshire Regional Office  \nY02 = Trent Regional\
    \ Office  \nY07 = West Midlands Regional Office  \nY08 = North West Regional Office\
    \  \nY09 = Eastern Regional Office  \nY10 = London Regional Office  \nY11 = South\
    \ East Regional Office  \nY12 = South West Regional Office  \nY00 = Unknown"
  expr: GPPRACRO %in% c('Y01', 'Y02', 'Y07', 'Y08', 'Y09', 'Y10', 'Y11', 'Y12', 'Y00')
  name: GPPRACRO values codes
- description: Primary Care Trust of GP Practice is String(8)
  expr: is.character(GPPRPCT) & nchar(GPPRPCT) <= 8
  name: GPPRPCT String(8)
- description: GPPRPCT 5nn NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", GPPRPCT)
  name: GPPRPCT 5nn
- description: "5nn = PCT \nTaa = Care trust \n59898 = Not applicable (non-England)\
    \ \n59999 = Unknown"
  expr: GPPRPCT %in% c('5nn', 'Taa', '59898', '59999')
  name: GPPRPCT values codes
- description: Strategic Health Authority of GP Practice is String(8)
  expr: is.character(GPPRSTHA) & nchar(GPPRSTHA) <= 8
  name: GPPRSTHA String(8)
- description: GPPRSTHA 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", GPPRSTHA)
  name: GPPRSTHA 3an
- description: "3an = Strategic Health Authority  \nS = Scotland   \nU = England -\
    \ not otherwise specified  \nW = Wales  \nX = Foreign (including Isle of Man and\
    \ Channel Islands)  \nY = Unknown  \nZ = Northern Ireland"
  expr: GPPRSTHA %in% c('3an', 'S', 'U', 'W', 'X', 'Y', 'Z')
  name: GPPRSTHA values codes
- description: Ordnance Survey Grid Reference is String(11)
  expr: is.character(GRIDLINK) & nchar(GRIDLINK) <= 11
  name: GRIDLINK String(11)
- description: GRIDLINK 10n NHS Data Model and Dictionary
  expr: grepl("^\\d{10}$", GRIDLINK)
  name: GRIDLINK 10n
- description: Health Authority of Treatment  is String(3)
  expr: is.character(HATREAT) & nchar(HATREAT) <= 3
  name: HATREAT String(3)
- description: HATREAT 3a NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", HATREAT)
  name: HATREAT 3a
- description: "3a = Health Authority area of treatment  \nY = Unknown"
  expr: HATREAT %in% c('3a', 'Y')
  name: HATREAT values codes
- description: Patient identifier - HES generated  is Number
  expr: is.integer(HESID)
  name: HESID Number
- description: Patient  Identifier Origin - HES generated is Number
  expr: is.integer(HESID_ORIG)
  name: HESID_ORIG Number
- description: Healthy Neonate Indicator is String(1)
  expr: is.character(HNEOIND) & nchar(HNEOIND) <= 1
  name: HNEOIND String(1)
- description: 'Y = Healthy Neonate

    N = Not Healthy Neonate


    If SUSHRG is null:

    HNEOIND = Null '
  expr: HNEOIND %in% c('Y', 'N', 'HNEOIND')
  name: HNEOIND values codes
- description: Postcode of Patient is String(8)
  expr: is.character(HOMEADD) & nchar(HOMEADD) <= 8
  name: HOMEADD String(8)
- description: HOMEADD 8an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{8}$", HOMEADD)
  name: HOMEADD 8an
- description: "8an = Postcode  \nZZ99 3CZ = England, GB, UK (not otherwise stated)\
    \  \nZZ99 3VZ = No fixed abode  \nZZ99 3WZ = Not known + sundry categories  \n\
    ZZ99 2WZ = Northern Ireland  \nZZ99 1WZ = Scotland  \nZZ99 3GZ = Wales  \nZZ99\
    \ NNN = Other pseudo codes used for patients normally resident abroad (where NNN\
    \ is the country code listed in the NHS postcode directory)"
  expr: HOMEADD %in% c('8an', 'ZZ99 3CZ', 'ZZ99 3VZ', 'ZZ99 3WZ', 'ZZ99 2WZ', 'ZZ99
    1WZ', 'ZZ99 3GZ', 'ZZ99 NNN')
  name: HOMEADD values codes
- description: Healthcare Resource Group - Provider Derived is String(3)
  expr: is.character(HRGNHS) & nchar(HRGNHS) <= 3
  name: HRGNHS String(3)
- description: HRGNHS 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", HRGNHS)
  name: HRGNHS 3an
- description: Version Number of HRGNHS is String(3)
  expr: is.character(HRGNHSVN) & nchar(HRGNHSVN) <= 3
  name: HRGNHSVN String(3)
- description: HRGNHSVN 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", HRGNHSVN)
  name: HRGNHSVN 3an
- description: IMD Index of Multiple Deprivation is Decimal
  expr: is.numeric(IMD04)
  name: IMD04 Decimal
- description: IMD04 nn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04)
  name: IMD04 nn.nn
- description: IMD Decile Group is String(30)
  expr: is.character(IMD04_DECILE) & nchar(IMD04_DECILE) <= 30
  name: IMD04_DECILE String(30)
- description: IMD Crime Domain is Decimal
  expr: is.numeric(IMD04C)
  name: IMD04C Decimal
- description: IMD04C n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04C)
  name: IMD04C n.nn
- description: IMD Education Training and Skills Domain  is Decimal
  expr: is.numeric(IMD04ED)
  name: IMD04ED Decimal
- description: IMD04ED nn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04ED)
  name: IMD04ED nn.nn
- description: IMD Employment Deprivation Domain is Decimal
  expr: is.numeric(IMD04EM)
  name: IMD04EM Decimal
- description: IMD04EM n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04EM)
  name: IMD04EM n.nn
- description: IMD Health and Disability Domain  is Decimal
  expr: is.numeric(IMD04HD)
  name: IMD04HD Decimal
- description: IMD04HD n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04HD)
  name: IMD04HD n.nn
- description: IMD Barriers to Housing and Services Domain  is Decimal
  expr: is.numeric(IMD04HS)
  name: IMD04HS Decimal
- description: IMD04HS nn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04HS)
  name: IMD04HS nn.nn
- description: IMD Income Domain  is Decimal
  expr: is.numeric(IMD04I)
  name: IMD04I Decimal
- description: IMD04I n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04I)
  name: IMD04I n.nn
- description: IMD Income Affecting Adults Domain  is Decimal
  expr: is.numeric(IMD04IA)
  name: IMD04IA Decimal
- description: IMD04IA n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04IA)
  name: IMD04IA n.nn
- description: IMD Income Affecting Children Domain  is Decimal
  expr: is.numeric(IMD04IC)
  name: IMD04IC Decimal
- description: IMD04IC n.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04IC)
  name: IMD04IC n.nn
- description: IMD Living Environment Domain is Decimal
  expr: is.numeric(IMD04LE)
  name: IMD04LE Decimal
- description: IMD04LE nn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", IMD04LE)
  name: IMD04LE nn.nn
- description: IMD Overall Rank  is Number
  expr: is.integer(IMD04RK)
  name: IMD04RK Number
- description: IMD04RK 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", IMD04RK)
  name: IMD04RK 5n
- description: Intensive Care Level Days is Number
  expr: is.integer(INTDAYS_n)
  name: INTDAYS_n Number
- description: INTDAYS_n 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{4}$", INTDAYS_n)
  name: INTDAYS_n 4n
- description: '4n = Number of days in the range 0000 to 9998

    Null = Not known: a validation error'
  expr: INTDAYS_n %in% c('4n', 'Null')
  name: INTDAYS_n values codes
- description: Intended Management  is String(1)
  expr: is.character(INTMANIG) & nchar(INTMANIG) <= 1
  name: INTMANIG String(1)
- description: '1 = Patient to stay in hospital for at least one night

    2 = Patient not to stay in hospital overnight

    3 = Patient to have a planned series of admissions at least one overnight stay

    4 = Patient to have a planned sequence of admissions no overnight stay

    5 = Patient to be admitted regularly for a sequence of nights rest of the 24 hour
    period at home

    8 = Not applicable

    9 = Intendend Management not known'
  expr: INTMANIG %in% c('1', '2', '3', '4', '5', '8', '9')
  name: INTMANIG values codes
- description: Local Authority District 1998 is String(4)
  expr: is.character(LAD98) & nchar(LAD98) <= 4
  name: LAD98 String(4)
- description: "nnaa = Local authority code  \nS = Scotland  \nU = England (NOS) \
    \ \nW = Wales  \nY = Not known  \nZ = Northern Ireland  \nX = Foreign"
  expr: LAD98 %in% c('nnaa', 'S', 'U', 'W', 'Y', 'Z', 'X')
  name: LAD98 values codes
- description: Legal Group of Patient (on Admission) is String(1)
  expr: is.character(LEGALGPA) & nchar(LEGALGPA) <= 1
  name: LEGALGPA String(1)
- description: "0 = Not formally detained (LEGLCAT is 01 or spaces)  \n1 = Formally\
    \ detained under Part II, Sections 2 to 34 of the Mental Health Act 1983 (LEGLCAT\
    \ is 02 to 06, or 2 to 6)  \n2 = Formally detained under Part III, Sections 35\
    \ to 55 of the Mental Health Act 1983, or previous legislation (LEGLCAT is 07\
    \ to18, 30 to 32, 34 or 7 to 9)  \n3 = Formally detained under Part X, Sections\
    \ 131 to 149 of the Mental Health Act 1983 (LEGLCAT is 19 or 20)  \n4 = Supervised\
    \ discharge under the Mental Health Act 1995 (LEGLCAT is 33)  \n5 = Guardianship\
    \ (Sections 7 & 37) under the Mental Health Act 1983 (LEGLCAT is 35 or 36)  \n\
    Not applicable = i.e. home births/deliveries where EPITYPE is 5 or 6  \nNot known\
    \ = Any other value for leglcat"
  expr: LEGALGPA %in% c('0', '1', '2', '3', '4', '5', 'Not applicable', 'Not known')
  name: LEGALGPA values codes
- description: Legal Group of Patient (Psychiatric Census Date) is String(1)
  expr: is.character(LEGALGPC) & nchar(LEGALGPC) <= 1
  name: LEGALGPC String(1)
- description: "0 = Legal status on psychiatric census date is not formally detained,\
    \ LEGLSTAT =01 or spaces  \n1 = Legal status on psychiatric census date, LEGLSTAT\
    \ = 02-06 or 2-6: Formally detained under Part II (Section 2-34) of the Mental\
    \ Health Act 1983  \n2 = Legal status on admission, LEGLSTAT = 07-18, 30-32, 34\
    \ or 7-9: Formally detained under Part III (Section 35-55) of the Mental Health\
    \ Act 1983, or previous legislation  \n3 = Legal status on admission, LEGLSTAT\
    \ = 19-20: Formally detained under Part X (Sections 131-149) of the Mental Health\
    \ Act 1983  \n4 = Legal status on admission, LEGLSTAT = 33: Supervised discharge\
    \ under the Mental Health Act 1995  \n5 = Legal status on admission, LEGLSTAT\
    \ = 35, 36: Guardianship (Sections 7 & 37) under the Mental Health Act 1983  \n\
    8 = Not applicable \n9 = Not known: any other value for LEGLSTAT."
  expr: LEGALGPC %in% c('0', '1', '2', '3', '4', '5', '8', '9')
  name: LEGALGPC values codes
- description: Legal Category of Patient is String(2)
  expr: is.character(LEGLCAT) & nchar(LEGLCAT) <= 2
  name: LEGLCAT String(2)
- description: "01 = Informal  \n02 = Formally detained under the Mental Health Act,\
    \ Section 2  \n03 = Formally detained under the Mental Health Act, Section 3 \
    \ \n04 = Formally detained under the Mental Health Act, Section 4  \n05 = Formally\
    \ detained under the Mental Health Act, Section 5(2)  \n06 = Formally detained\
    \ under the Mental Health Act, Section 5(4)  \n07 = Formally detained under the\
    \ Mental Health Act, Section 35  \n08 = Formally detained under the Mental Health\
    \ Act, Section 36  \n09 = Formally detained under the Mental Health Act, Section\
    \ 37 with Section 41 restrictions  \n10 = Formally detained under the Mental Health\
    \ Act, Section 37 excluding Section 37(4)  \n11 = Formally detained under the\
    \ Mental Health Act, Section 37(4)  \n12 = Formally detained under the Mental\
    \ Health Act, Section 38  \n13 = Formally detained under the Mental Health Act,\
    \ Section 44  \n14 = Formally detained under the Mental Health Act, Section 46\
    \  \n15 = Formally detained under the Mental Health Act, Section 47 with Section\
    \ 49 restrictions  \n16 = Formally detained under the Mental Health Act, Section\
    \ 47  \n17 = Formally detained under the Mental Health Act, Section 48 with Section\
    \ 49 restrictions  \n18 = Formally detained under the Mental Health Act, Section\
    \ 48  \n19 = Formally detained under the Mental Health Act, Section 135  \n20\
    \ = Formally detained under the Mental Health Act, Section 136  \n21 = Formally\
    \ detained under the previous legislation (fifth schedule)  \n22 = Formally detained\
    \ under Criminal Procedure (Insanity) Act 1964 as amended by the Criminal Procedures\
    \ (Insanity and Unfitness to Plead) Act 1991  \n23 = Formally detained under other\
    \ Acts  \n24 = Supervised discharge under the Mental Health (Patients in the Community)\
    \ Act 1995  \n25 = Formally detained under the Mental Health Act, Section 45A\
    \  \n26 = Not applicable  \n27 = Not known"
  expr: LEGLCAT %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23',
    '24', '25', '26', '27')
  name: LEGLCAT values codes
- description: Legal Status Classification is String(2)
  expr: is.character(LEGLSTAT) & nchar(LEGLSTAT) <= 2
  name: LEGLSTAT String(2)
- description: "01 = Informal  \n02 = Formally detained under the Mental Health Act,\
    \ Section 2  \n03 = Formally detained under the Mental Health Act, Section 3 \
    \ \n04 = Formally detained under the Mental Health Act, Section 4  \n05 = Formally\
    \ detained under the Mental Health Act, Section 5(2)  \n06 = Formally detained\
    \ under the Mental Health Act, Section 5(4)  \n07 = Formally detained under the\
    \ Mental Health Act, Section 35  \n08 = Formally detained under the Mental Health\
    \ Act, Section 36  \n09 = Formally detained under the Mental Health Act, Section\
    \ 37 with Section 41 restrictions  \n10 = Formally detained under the Mental Health\
    \ Act, Section 37 excluding Section 37(4)  \n11 = Formally detained under the\
    \ Mental Health Act, Section 37(4)  \n12 = Formally detained under the Mental\
    \ Health Act, Section 38  \n13 = Formally detained under the Mental Health Act,\
    \ Section 44  \n14 = Formally detained under the Mental Health Act, Section 46\
    \  \n15 = Formally detained under the Mental Health Act, Section 47 with Section\
    \ 49 restrictions  \n16 = Formally detained under the Mental Health Act, Section\
    \ 47  \n17 = Formally detained under the Mental Health Act, Section 48 with Section\
    \ 49 restrictions  \n18 = Formally detained under the Mental Health Act, Section\
    \ 48  \n19 = Formally detained under the Mental Health Act, Section 135  \n20\
    \ = Formally detained under the Mental Health Act, Section 136  \n30 = Formally\
    \ detained under the previous legislation (fifth schedule)  \n31 = Formally detained\
    \ under Criminal Procedure (Insanity) Act 1964 as amended by the Criminal Procedures\
    \ (Insanity and Unfitness to Plead) Act 1991  \n32 = Formally detained under other\
    \ Acts  \n33 = Supervised discharge under the Mental Health (Patients in the Community)\
    \ Act 1995  \n34 = Formally detained under the Mental Health Act, Section 45A\
    \  \n35 = Subject to guardianship under Mental Health Act Section 7  \n36 = Subject\
    \ to guardianship under Mental Health Act Section 37  \n98 = Not applicable  \n\
    99 = Not known"
  expr: LEGLSTAT %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '31', '32',
    '33', '34', '35', '36', '98', '99')
  name: LEGLSTAT values codes
- description: Legal Status Classification Code on Admission is String(2)
  expr: is.character(LEGLSTATST) & nchar(LEGLSTATST) <= 2
  name: LEGLSTATST String(2)
- description: "01 = Informal  \n02 = Formally detained under the Mental Health Act,\
    \ Section 2  \n03 = Formally detained under the Mental Health Act, Section 3 \
    \ \n04 = Formally detained under the Mental Health Act, Section 4  \n05 = Formally\
    \ detained under the Mental Health Act, Section 5(2)  \n06 = Formally detained\
    \ under the Mental Health Act, Section 5(4)  \n07 = Formally detained under the\
    \ Mental Health Act, Section 35  \n08 = Formally detained under the Mental Health\
    \ Act, Section 36  \n09 = Formally detained under the Mental Health Act, Section\
    \ 37 with Section 41 restrictions  \n10 = Formally detained under the Mental Health\
    \ Act, Section 37 excluding Section 37(4)  \n11 = Formally detained under the\
    \ Mental Health Act, Section 37(4)  \n12 = Formally detained under the Mental\
    \ Health Act, Section 38  \n13 = Formally detained under the Mental Health Act,\
    \ Section 44  \n14 = Formally detained under the Mental Health Act, Section 46\
    \  \n15 = Formally detained under the Mental Health Act, Section 47 with Section\
    \ 49 restrictions  \n16 = Formally detained under the Mental Health Act, Section\
    \ 47  \n17 = Formally detained under the Mental Health Act, Section 48 with Section\
    \ 49 restrictions  \n18 = Formally detained under the Mental Health Act, Section\
    \ 48  \n19 = Formally detained under the Mental Health Act, Section 135  \n20\
    \ = Formally detained under the Mental Health Act, Section 136  \n30 = Formally\
    \ detained under the previous legislation (fifth schedule)  \n31 = Formally detained\
    \ under Criminal Procedure (Insanity) Act 1964 as amended by the Criminal Procedures\
    \ (Insanity and Unfitness to Plead) Act 1991  \n32 = Formally detained under other\
    \ Acts  \n33 = Supervised discharge under the Mental Health (Patients in the Community)\
    \ Act 1995 (Retired 03 November 2008 - but may apply to some patients until 3\
    \ May 2009)\n34 = Formally detained under the Mental Health Act, Section 45A (retired\
    \ 01/09/14)  \n35 = Subject to guardianship under Mental Health Act Section 7\
    \  \n36 = Subject to guardianship under Mental Health Act Section 37  \n37 = \
    \ Formally detained under Mental Health Act Section 45A (Limited direction in\
    \ force)\n38 = Formally detained under Mental Health Act Section 45A (Limitation\
    \ direction ended)\n98 = Not applicable  \n99 = Not known"
  expr: LEGLSTATST %in% c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
    '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '31', '32',
    '33', '34', '35', '36', '37', '38', '98', '99')
  name: LEGLSTATST values codes
- description: 'Local Patient Identifier  is String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
  expr: is.character(LOPATID) & nchar(LOPATID) <= 20
  name: 'LOPATID String(10) (to 2022-23)

    String(20) (2022-23 onwards))'
- description: Lower Super Output Area of Residence 2001 is String(9)
  expr: is.character(LSOA01) & nchar(LSOA01) <= 9
  name: LSOA01 String(9)
- description: LSOA01 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", LSOA01)
  name: LSOA01 9an
- description: "9an = 2001 Lower Super Output Area  \nE01000001 - E01032482 = England\n\
    W01000001- W01001896 = Wales\nS01000001- S01006505 = Scotland\n95AA01S1 - 95ZZ16S2\
    \ = Northern Ireland\nL99999999 (pseudo) = Channel Islands\nM99999999 (pseudo)\
    \ = Isle of Man\nZ99999999 = Not known\nE99999999 = England Unknown\nN99999999\
    \ = N. Ireland Unknown"
  expr: LSOA01 %in% c('9an', 'E01000001 - E01032482', 'W01000001- W01001896', 'S01000001-
    S01006505', '95AA01S1 - 95ZZ16S2', 'L99999999 (pseudo)', 'M99999999 (pseudo)',
    'Z99999999', 'E99999999', 'N99999999')
  name: LSOA01 values codes
- description: Lower Super Output Area of Residence 2011 is String(9)
  expr: is.character(LSOA11) & nchar(LSOA11) <= 9
  name: LSOA11 String(9)
- description: LSOA11 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", LSOA11)
  name: LSOA11 9an
- description: "9an = 2011 Lower Super Output Area \nE01000001- E01033768 = England\n\
    W01000001- W01001958 = Wales\nS01006506 - S01013481 = Scotland\n95AA01S1 - 95ZZ16S2\
    \ = Northern Ireland\nL99999999 (pseudo) = Channel Islands\nM99999999 (pseudo)\
    \ = Isle of Man\nZ99999999 = Not known\nE99999999 = England Unknown\nN99999999\
    \ = N. Ireland Unknown"
  expr: LSOA11 %in% c('9an', 'E01000001- E01033768', 'W01000001- W01001958', 'S01006506
    - S01013481', '95AA01S1 - 95ZZ16S2', 'L99999999 (pseudo)', 'M99999999 (pseudo)',
    'Z99999999', 'E99999999', 'N99999999')
  name: LSOA11 values codes
- description: Main Specialty is String(3)
  expr: is.character(MAINSPEF) & nchar(MAINSPEF) <= 3
  name: MAINSPEF String(3)
- description: '100 = General Surgery

    101 = Urology

    107 = Vascular Surgery (Introduced 1 April 2021)

    110 = Trauma and Orthopaedics

    120 = Ear Nose and Throat

    130 = Ophthalmology

    140 = Oral Surgery

    141 = Restorative Dentistry

    142 = Paediatric Dentistry

    143 = Orthodontics

    145 = Oral and Maxillofacial Surgery

    146 = Endodontics

    147 = Periodontics

    148 = Prosthodontics

    149 = Surgical Dentistry

    150 = Neurosurgery

    160 = Plastic Surgery

    170 = Cardiothoracic Surgery

    171 = Paediatric Surgery

    191 = Pain Management (Retired 1 April 2004)

    180 = Emergency Medicine

    190 = Anaesthetics

    192 = Intensive Care Medicine

    200 = Aviation and Space Medicine (Introduced 1 April 2021)

    300 = General Internal Medicine

    301 = Gastroenterology

    302 = Endocrinology and Diabetes

    303 = Clinical Haematology

    304 = Clinical Physiology

    305 = Clinical Pharmacology

    310 = Audio Vestibular Medicine

    311 = Clinical Genetics

    312 = Clinical Cytogenetics and Molecular Genetics (Retired 1 April 2010). National
    Code 312 is retained for consultants qualified in this Main Specialty prior to
    1 April 2010

    313 = Clinical Immunology

    314 = Rehabilitation Medicine

    315 = Palliative Medicine

    317 = Allergy (Introduced 1 April 2021)

    320 = Cardiology

    321 = Paediatric Cardiology

    325 = Sport and Exercise Medicine

    326 = Acute Internal Medicine

    330 = Dermatology

    340 = Respiratory Medicine

    350 = Infectious Diseases

    352 = Tropical Medicine

    360 = Genitourinary Medicine

    361 = Renal Medicine

    370 = Medical Oncology

    371 = Nuclear Medicine

    400 = Neurology

    401 = Clinical Neurophysiology

    410 = Rheumatology

    420 = Paediatrics

    421 = Paediatric Neurology

    430 = Geriatric Medicine

    450 = Dental Medicine

    451 = Special Care Dentistry

    501 = Obstetrics

    502 = Gynaecology

    504 = Community Sexual and Reproductive Health

    510 = Antenatal Clinic (Retired 1 April 2004)

    520 = Postnatal Clinic (Retired 1 April 2004)

    560 = Midwifery

    600 = General Medical Practice

    601 = General Dental Practice

    610 = Maternity Function (Retired 1 April 2004)

    620 = Other than Maternity (Retired 1 April 2004)

    700 = Learning Disability

    710 = Adult Mental Illness

    711 = Child and Adolescent Psychiatry

    712 = Forensic Psychiatry

    713 = Medical Psychotherapy

    715 = Old Age Psychiatry

    800 = Clinical Oncology

    810 = Radiology

    820 = General Pathology

    821 = Blood Transfusion

    822 = Chemical Pathology

    823 = Haematology

    824 = Histopathology

    830 = Immunopathology

    831 = Medical Microbiology and Virology

    832 = Neuropathology (Retired 1 April 2004)

    833 = Medical Microbiology

    834 = Medical Virology

    900 = Community Medicine

    901 = Occupational Medicine

    902 = Community Health Services Dental

    903 = Public Health Medicine

    904 = Public Health Dental

    950 = Nursing

    960 = Allied Health Professional

    990 = Joint Consultant Clinics (Retired 1 April 2004)

    199 = Non-UK Provider - Specialty Function Not Known, Treatment Mainly Surgical

    460 = Medical Ophthalmology

    499 = Non-UK Provider - Specialty Function Not Known, Treatment Mainly Medical

    Null  = Other Maternity Event

    &  = Not Known'
  expr: MAINSPEF %in% c('100', '101', '107', '110', '120', '130', '140', '141', '142',
    '143', '145', '146', '147', '148', '149', '150', '160', '170', '171', '191', '180',
    '190', '192', '200', '300', '301', '302', '303', '304', '305', '310', '311', '312',
    '313', '314', '315', '317', '320', '321', '325', '326', '330', '340', '350', '352',
    '360', '361', '370', '371', '400', '401', '410', '420', '421', '430', '450', '451',
    '501', '502', '504', '510', '520', '560', '600', '601', '610', '620', '700', '710',
    '711', '712', '713', '715', '800', '810', '820', '821', '822', '823', '824', '830',
    '831', '832', '833', '834', '900', '901', '902', '903', '904', '950', '960', '990',
    '199', '460', '499', 'Null', '&')
  name: MAINSPEF values codes
- description: Marital Status (Psychiatric) is String(1)
  expr: is.character(MARSTAT) & nchar(MARSTAT) <= 1
  name: MARSTAT String(1)
- description: "From 1/10/2006 onwards: \nS = Single  \nM = Married/Civil Partner\
    \  \nD = Divorced/Person whose Civil Partnership has been dissolved  \nW = Widowed/Surviving\
    \ Civil Partner  \nP = Separated  \nN = Not disclosed.  \n8 = Not applicable\n\
    9 = Not known\n\nPrior to 1/10/2006: \n1 = Single \n2 = Married, including separated\
    \  \n3 = Divorced  \n4 = Widowed \n8 = Not applicable\n9 = Not known"
  expr: MARSTAT %in% c('S', 'M', 'D', 'W', 'P', 'N', '8', '9', '1', '2', '3', '4')
  name: MARSTAT values codes
- description: "Mother\u2019s Age at Delivery is Number"
  expr: is.integer(MATAGE)
  name: MATAGE Number
- description: "nnn = Age in years  \nNull = Not valid"
  expr: MATAGE %in% c('nnn', 'Null')
  name: MATAGE values codes
- description: Episode Type - Maternity is String(2)
  expr: is.character(MATERNITY_EPISODE_TYPE) & nchar(MATERNITY_EPISODE_TYPE) <= 2
  name: MATERNITY_EPISODE_TYPE String(2)
- description: '1 = Finished delivery episode

    2 = Finished birth episode

    3 = Finished other delivery episode

    4 = Finished other birth episode

    9 = Unfinished maternity episodes

    99 = All other episodes'
  expr: MATERNITY_EPISODE_TYPE %in% c('1', '2', '3', '4', '9', '99')
  name: MATERNITY_EPISODE_TYPE values codes
- description: Mental Category is String(1)
  expr: is.character(MENTCAT) & nchar(MENTCAT) <= 1
  name: MENTCAT String(1)
- description: "1 = Mental illness  \n2 = Mental impairment  \n3 = Severe mental impairment\
    \  \n4 = Psychopathic disorder  \n5 = Not specified (from 1995-96)  \n8 = Not\
    \ applicable  \n9 = Not known"
  expr: MENTCAT %in% c('1', '2', '3', '4', '5', '8', '9')
  name: MENTCAT values codes
- description: Date of Birth (Mother) is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    MOTDOB)
  name: MOTDOB Date(YYYY-MM-DD)
- description: MOTDOB YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    MOTDOB)
  name: MOTDOB YYYY-MM-DD
- description: Middle Super Output Area of Residence 2001 is String(9)
  expr: is.character(MSOA01) & nchar(MSOA01) <= 9
  name: MSOA01 String(9)
- description: MSOA01 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", MSOA01)
  name: MSOA01 9an
- description: "9an = Middle Super Output Area  \nE02000001- E02006781 = England\n\
    W02000001- W02000413 = Wales\nS02000001 - S02001235 = Scotland\nN99999999 (pseudo)\
    \ = Northern Ireland\nL99999999 (pseudo) = Channel Islands\nM99999999 (pseudo)\
    \ = Isle of Man\nZ99999999 = Not known\nE99999999 = England Unknown\nN99999999\
    \ = N. Ireland Unknown"
  expr: MSOA01 %in% c('9an', 'E02000001- E02006781', 'W02000001- W02000413', 'S02000001
    - S02001235', 'N99999999 (pseudo)', 'L99999999 (pseudo)', 'M99999999 (pseudo)',
    'Z99999999', 'E99999999', 'N99999999')
  name: MSOA01 values codes
- description: Middle Super Output Area of Residence 2011 is String(9)
  expr: is.character(MSOA11) & nchar(MSOA11) <= 9
  name: MSOA11 String(9)
- description: MSOA11 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", MSOA11)
  name: MSOA11 9an
- description: "9an = Middle Super Output Area  \nE02000001- E02006934 = England\n\
    W02000001- W02000423 = Wales\nS02001236 - S02002514 = Scotland\nN99999999 (pseudo)\
    \ = Northern Ireland\nL99999999 (pseudo) = Channel Islands\nM99999999 (pseudo)\
    \ = Isle of Man\nZ99999999 = Not known\nE99999999 = England Unknown\nN99999999\
    \ = N. Ireland Unknown"
  expr: MSOA11 %in% c('9an', 'E02000001- E02006934', 'W02000001- W02000423', 'S02001236
    - S02002514', 'N99999999 (pseudo)', 'L99999999 (pseudo)', 'M99999999 (pseudo)',
    'Z99999999', 'E99999999', 'N99999999')
  name: MSOA11 values codes
- description: Date of Birth - Month and Year is String(6)
  expr: is.character(MYDOB) & nchar(MYDOB) <= 6
  name: MYDOB String(6)
- description: Neonatal Level of Care is String(1)
  expr: is.character(NEOCARE) & nchar(NEOCARE) <= 1
  name: NEOCARE String(1)
- description: "0 = Normal care: care given by the mother or mother substitute, with\
    \ medical and neonatal nursing advice if needed  \n1 = Special care: care given\
    \ in a special nursery, transitional care ward or postnatal ward, which provides\
    \ care and treatment exceeding normal routine care. Some aspects of special care\
    \ can be undertaken by a mother supervised by qualified nursing staff. Special\
    \ nursing care includes support for and education of the infant's parents  \n\
    2 = Level 2 intensive care (high dependency intensive care): care given in an\
    \ intensive or special care nursery, which provides continuous skilled supervision\
    \ by qualified and specially trained nursing staff who may care for more babies\
    \ than in level 1 intensive care. Care includes support for the infant's parents\
    \  \n3 = Level 1 intensive care (maximal intensive care): care given in an intensive\
    \ or special care nursery, which provides continuous skilled supervision by qualified\
    \ and specially trained nursing and medical staff. Care includes support for the\
    \ infant's parents  \n8 = Not applicable\n9 = Not known"
  expr: NEOCARE %in% c('0', '1', '2', '3', '8', '9')
  name: NEOCARE values codes
- description: Age of Baby In Days is Number
  expr: is.integer(NEODUR)
  name: NEODUR Number
- description: NEODUR 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", NEODUR)
  name: NEODUR 2n
- description: "2n = Age of patient in days from 0 to 27  \nNull = Not applicable:\
    \ other maternity event (EPITYPE is 5 or 6) or patient is older than 27 days"
  expr: NEODUR %in% c('2n', 'Null')
  name: NEODUR values codes
- description: 'Integrated Care Board of GP Practice  (July 2022 onwards)

    Sustainability and Transformation Partnership of GP Practice (2020 until June
    2022)

    NHS England Region of GP Practice (until 2020) is String(8)'
  expr: is.character(NER_GP_PRACTICE) & nchar(NER_GP_PRACTICE) <= 8
  name: NER_GP_PRACTICE String(8)
- description: NER_GP_PRACTICE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", NER_GP_PRACTICE)
  name: NER_GP_PRACTICE ann
- description: 'ann = ICB / STP / NER of GP practice

    Q99 = Wales

    Y = Not known'
  expr: NER_GP_PRACTICE %in% c('ann', 'Q99', 'Y')
  name: NER_GP_PRACTICE values codes
- description: 'Integrated Care Board of Residence  (July 2022 onwards)

    Sustainability and Transformation Partnership of Residence (2020 until June 2022)

    NHS England Region of Residence (until 2020) is String(8)'
  expr: is.character(NER_RESIDENCE) & nchar(NER_RESIDENCE) <= 8
  name: NER_RESIDENCE String(8)
- description: NER_RESIDENCE ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", NER_RESIDENCE)
  name: NER_RESIDENCE ann
- description: 'ann = ICB / STP / NER of residence

    Q99 = Wales

    S = Scotland

    U = no fixed abode

    X = Foreign, Isle of Man or Channel Islands

    Y = Not known

    Z = Northern Ireland'
  expr: NER_RESIDENCE %in% c('ann', 'Q99', 'S', 'U', 'X', 'Y', 'Z')
  name: NER_RESIDENCE values codes
- description: 'Integrated Care Board of Treatment  (July 2022 onwards)

    Sustainability and Transformation Partnership of Treatment (2020 until June 2022)

    NHS England Region of Treatment (until 2020) is String(3)'
  expr: is.character(NER_TREATMENT) & nchar(NER_TREATMENT) <= 3
  name: NER_TREATMENT String(3)
- description: NER_TREATMENT ann NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z]{1}\\d{2}$", NER_TREATMENT)
  name: NER_TREATMENT ann
- description: 'ann = ICB / STP / NER of treatment

    Q99 = Wales

    Y = Not known'
  expr: NER_TREATMENT %in% c('ann', 'Q99', 'Y')
  name: NER_TREATMENT values codes
- description: NHS Number is String(10)
  expr: is.character(NEWNHSNO) & nchar(NEWNHSNO) <= 10
  name: NEWNHSNO String(10)
- description: NEWNHSNO 10n NHS Data Model and Dictionary
  expr: grepl("^\\d{10}$", NEWNHSNO)
  name: NEWNHSNO 10n
- description: NHS Number Check Flag is String(1)
  expr: is.character(NEWNHSNO_CHECK) & nchar(NEWNHSNO_CHECK) <= 1
  name: NEWNHSNO_CHECK String(1)
- description: 'Y = The format of the NEWNHSNO is valid

    N = The format of the NEWNHSNO is not valid

    Null = NEWNHSNO is null'
  expr: NEWNHSNO_CHECK %in% c('Y', 'N', 'Null')
  name: NEWNHSNO_CHECK values codes
- description: NHS Number Status Indicator is String(2)
  expr: is.character(NHSNOIND) & nchar(NHSNOIND) <= 2
  name: NHSNOIND String(2)
- description: "01 = Number present and verified \n02 = Number present but not traced\
    \ \n03 = Trace required\n04 = Trace attempted - No match or multiple match found\
    \ \n05 = Trace needs to be resolved - (New NHS number or patient detail conflict)\
    \ \n06 = Trace in progress \n07 = Number not present and trace not required \n\
    08 = Trace postponed (baby under six weeks old)\n91 = Anonymised or pseudonymised\
    \ by SUS"
  expr: NHSNOIND %in% c('01', '02', '03', '04', '05', '06', '07', '08', '91')
  name: NHSNOIND values codes
- description: Number of Valid Augmented Care Period Groups is Number
  expr: is.integer(NUMACP)
  name: NUMACP Number
- description: Number of Babies is String(1)
  expr: is.character(NUMBABY) & nchar(NUMBABY) <= 1
  name: NUMBABY String(1)
- description: "1 = One  \n2 = Two  \n3 = Three  \n4 = Four  \n5 = Five  \n6 = Six\
    \ or more  \n9 = Number of registrable births not known \nX = Not known (derived\
    \ in HES where the field is null)"
  expr: NUMBABY %in% c('1', '2', '3', '4', '5', '6', '9', 'X')
  name: NUMBABY values codes
- description: Number of Previous Pregnancies is String(2)
  expr: is.character(NUMPREG) & nchar(NUMPREG) <= 2
  name: NUMPREG String(2)
- description: NUMPREG max 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,2}$", NUMPREG)
  name: NUMPREG max 2n
- description: "max 2n = Number of previous pregnancies, from 00 to 19, resulting\
    \ in a registrable birth  \n99 = Not known"
  expr: NUMPREG %in% c('max 2n', '99')
  name: NUMPREG values codes
- description: Number of Baby Tails is Number
  expr: is.integer(NUMTAILB)
  name: NUMTAILB Number
- description: NUMTAILB 1n NHS Data Model and Dictionary
  expr: grepl("^\\d{1}$", NUMTAILB)
  name: NUMTAILB 1n
- description: Census Output Area 2001  is String(10)
  expr: is.character(OACODE01) & nchar(OACODE01) <= 10
  name: OACODE01 String(10)
- description: OACODE01 10an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{10}$", OACODE01)
  name: OACODE01 10an
- description: '10an = 2001 Census Output Area

    Y = not known'
  expr: OACODE01 %in% c('10an', 'Y')
  name: OACODE01 values codes
- description: Census Output Area 2011  is String(9)
  expr: is.character(OACODE11) & nchar(OACODE11) <= 9
  name: OACODE11 String(9)
- description: OACODE11 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", OACODE11)
  name: OACODE11 9an
- description: '9an = 2011 Census Output Area

    E00000001 - E00176774 = England;

    W00000001 - W00010265 = Wales;

    S00088956 - S00135306 = Scotland;

    N00000001 - N00004537 = Northern Ireland;

    L99999999 (pseudo) = Channel Islands;

    M99999999 (pseudo) = Isle of Man;

    Y = not known'
  expr: OACODE11 %in% c('9an', 'E00000001 - E00176774', 'W00000001 - W00010265', 'S00088956
    - S00135306', 'N00000001 - N00004537', 'L99999999 (pseudo)', 'M99999999 (pseudo)',
    'Y')
  name: OACODE11 values codes
- description: Census Output Area 2001 (Ward Identifier) is String(6)
  expr: is.character(OACODE6) & nchar(OACODE6) <= 6
  name: OACODE6 String(6)
- description: OACODE6 6an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{6}$", OACODE6)
  name: OACODE6 6an
- description: '6an = 2001 census output area ward identifier code

    Y = not known'
  expr: OACODE6 %in% c('6an', 'Y')
  name: OACODE6 values codes
- description: Date of Procedure is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPDATE_nn)
  name: OPDATE_nn Date(YYYY-MM-DD)
- description: OPDATE_nn YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPDATE_nn)
  name: OPDATE_nn YYYY-MM-DD
- description: 'YYYY-MM-DD = Date of procedure

    1800-01-01 = Null

    1801-01-01 = Invalid date submitted'
  expr: OPDATE_nn %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: OPDATE_nn values codes
- description: Procedure Code Sequence is Number
  expr: is.integer(OPER_SEQ)
  name: OPER_SEQ Number
- description: Operation Status Code is String(1)
  expr: is.character(OPERSTAT) & nchar(OPERSTAT) <= 1
  name: OPERSTAT String(1)
- description: '1 = One or more operative procedures carried out

    8 = No operative procedures performed or intended

    9 = Not known, i.e. finished episode but no data entered or the episode is unfinished
    and no data needs to be present (this would only be a validation error for a finished
    episode).'
  expr: OPERSTAT %in% c('1', '8', '9')
  name: OPERSTAT values codes
- description: Concatenated Procedure Codes - 3 Character is String(100)
  expr: is.character(OPERTN_3_CONCAT) & nchar(OPERTN_3_CONCAT) <= 100
  name: OPERTN_3_CONCAT String(100)
- description: Procedure Code - 3 Character is String(3)
  expr: is.character(OPERTN_3_nn) & nchar(OPERTN_3_nn) <= 3
  name: OPERTN_3_nn String(3)
- description: OPERTN_3_nn 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", OPERTN_3_nn)
  name: OPERTN_3_nn 3an
- description: '3an = Procedure code

    - = No operation performed

    & = Not known'
  expr: OPERTN_3_nn %in% c('3an', '-', '&')
  name: OPERTN_3_nn values codes
- description: Concatenated Procedure Codes - 4 Character is String(130)
  expr: is.character(OPERTN_4_CONCAT) & nchar(OPERTN_4_CONCAT) <= 130
  name: OPERTN_4_CONCAT String(130)
- description: Procedure Code - 4 Character is String(4)
  expr: is.character(OPERTN_4_nn) & nchar(OPERTN_4_nn) <= 4
  name: OPERTN_4_nn String(4)
- description: OPERTN_4_nn 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_4_nn)
  name: OPERTN_4_nn 4an
- description: '4an = Procedure code

    - = No operation performed

    & = Not known'
  expr: OPERTN_4_nn %in% c('4an', '-', '&')
  name: OPERTN_4_nn values codes
- description: Procedure Code (Unpivoted) is String(4)
  expr: is.character(OPERTN_CODE) & nchar(OPERTN_CODE) <= 4
  name: OPERTN_CODE String(4)
- description: OPERTN_CODE 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_CODE)
  name: OPERTN_CODE 4an
- description: '4an = Procedure code

    - = No operation performed

    & = Not known'
  expr: OPERTN_CODE %in% c('4an', '-', '&')
  name: OPERTN_CODE values codes
- description: Count of Procedures is Number
  expr: is.integer(OPERTN_COUNT)
  name: OPERTN_COUNT Number
- description: OPERTN_COUNT 2n NHS Data Model and Dictionary
  expr: grepl("^\\d{2}$", OPERTN_COUNT)
  name: OPERTN_COUNT 2n
- description: Date of Procedure is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPERTN_DATE)
  name: OPERTN_DATE Date(YYYY-MM-DD)
- description: OPERTN_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OPERTN_DATE)
  name: OPERTN_DATE YYYY-MM-DD
- description: 'YYYY-MM-DD = Date of procedure

    1800-01-01 = Null

    1801-01-01 = Invalid date submitted'
  expr: OPERTN_DATE %in% c('YYYY-MM-DD', '1800-01-01', '1801-01-01')
  name: OPERTN_DATE values codes
- description: Procedure Code is String(4)
  expr: is.character(OPERTN_nn) & nchar(OPERTN_nn) <= 4
  name: OPERTN_nn String(4)
- description: OPERTN_nn 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", OPERTN_nn)
  name: OPERTN_nn 4an
- description: "4an = Procedure code  \n- = No procedures performed  \n& = Not known\
    \  \nX998 = Procedure carried out but no appropriate OPCS-4 code available (submitted\
    \ value present between 1997-98 and 2005-07)\nX999 = No procedure carried out\
    \ (submitted value present between 1997-98 and 2001-02)"
  expr: OPERTN_nn %in% c('4an', '-', '&', 'X998', 'X999')
  name: OPERTN_nn values codes
- description: "Organisation Identifier (Patient Pathway Identifier Issuer)\n is String(3-5)"
  expr: is.character(ORGPPPID) & (3 <= nchar(ORGPPPID)) & (nchar(ORGPPPID) <= 5)
  name: ORGPPPID String(3-5)
- description: Number of Organ Systems Supported is Number
  expr: is.integer(ORGSUP_n)
  name: ORGSUP_n Number
- description: 'n = Number of organ systems supported in the range 0 to 5

    98 = Not applicable: augmented care period not finished

    99 = Not known: a validation error'
  expr: ORGSUP_n %in% c('n', '98', '99')
  name: ORGSUP_n values codes
- description: HES Extract Year and Number is Number
  expr: is.integer(PARTYEAR)
  name: PARTYEAR Number
- description: Patient Pathway Identifier  is String(20)
  expr: is.character(PATPATHID) & nchar(PATPATHID) <= 20
  name: PATPATHID String(20)
- description: PATPATHID 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{20}$", PATPATHID)
  name: PATPATHID 20an
- description: Programme Budgeting Category  is String(5)
  expr: is.character(PBC) & nchar(PBC) <= 5
  name: PBC String(5)
- description: '0201A = HIV and AIDS

    0201X = Infectious diseases

    0202A = Cancer, Head and Neck

    0202B = Cancer, UGI

    0202C = Cancer, LGI

    0202D = Cancer, Lung

    0202E = Cancer, Skin

    0202F = Cancer, Breast

    0202G = Cancer, Gynaecological

    0202H = Cancer, Urological

    0202I = Cancer, Haematological

    0202X = Cancers and Tumours

    0203X = Disorders of Blood

    0204A = Diabetes

    0204B = Endocrine

    0204X = Endocrine, Nutritional and Metabolic pro

    0205A = Substance Misuse

    0205B = Organic Mental Disorders

    0205C = Psychotic Disorders

    0205D = Child and Adolescent Mental Health Disorders

    0205X = Other Mental Health Disorders

    0206X = Problems of Learning Disability

    0207A = Chronic Pain

    0207X = Neurological

    0208X = Problems of Vision

    0209X = Problems of Hearing

    0210A = Coronary Heart Disease

    0210B = Cerebrovascular disease

    0210C = Problems of Rhythm

    0210X = Problems of circulation

    0211A = Obstructive Airways Disease

    0211B = Asthma

    0211X = Problems of the respiratory system

    0212X = Dental problems

    0213A = Upper GI

    0213B = Lower GI

    0213C = HepatoBiliary

    0213X = Problems of the gastro intestinal system

    0214A = Burns

    0214X = Problems of the Skin

    0215X = Problems of the Musculo skeletal system

    0216X = Problems due to Trauma and Injuries

    0217A = Genital tract problems

    0217B = Renal problems

    0217C = STD

    0217X = Problems of Genito Urinary system

    0218X = Maternity and Reproductive Health

    0219X = Conditions of neonates

    0220A = Unintended consequences of treatment

    0220B = Poisoning

    0220C = Violence

    0220X = Poisoning and adverse effects

    0221A = NSF Prevention programme

    0221B = NSF Mental health prevention

    0221X = Healthy Individuals

    0222X = Social Care Needs

    0223X = Other

    02U1 = Primary Diagnosis Not Recognised

    02U2 = Unclassified'
  expr: PBC %in% c('0201A', '0201X', '0202A', '0202B', '0202C', '0202D', '0202E',
    '0202F', '0202G', '0202H', '0202I', '0202X', '0203X', '0204A', '0204B', '0204X',
    '0205A', '0205B', '0205C', '0205D', '0205X', '0206X', '0207A', '0207X', '0208X',
    '0209X', '0210A', '0210B', '0210C', '0210X', '0211A', '0211B', '0211X', '0212X',
    '0213A', '0213B', '0213C', '0213X', '0214A', '0214X', '0215X', '0216X', '0217A',
    '0217B', '0217C', '0217X', '0218X', '0219X', '0220A', '0220B', '0220C', '0220X',
    '0221A', '0221B', '0221X', '0222X', '0223X', '02U1', '02U2')
  name: PBC values codes
- description: Postcode Found Flag is String(1)
  expr: is.character(PCFOUND) & nchar(PCFOUND) <= 1
  name: PCFOUND String(1)
- description: 'Y = Valid

    N = Invalid or null'
  expr: PCFOUND %in% c('Y', 'N')
  name: PCFOUND values codes
- description: Primary Care Group  is String(8)
  expr: is.character(PCGCODE) & nchar(PCGCODE) <= 8
  name: PCGCODE String(8)
- description: Origin of Primary Care Group is String(1)
  expr: is.character(PCGORIG) & nchar(PCGORIG) <= 1
  name: PCGORIG String(1)
- description: "1 = GPPRAC was used to derive the code  \n2 = REGGMP was used to derive\
    \ the code  \n3 = PURCODE was used to derive the code  \n4 = POSTCODE was used\
    \ to derive the code  \n5 = POSTCODE allocated code, PCG code was blank  \n6 =\
    \ POSTCODE allocated code, PCG code was 49998  \n9 = PCG code not known"
  expr: PCGORIG %in% c('1', '2', '3', '4', '5', '6', '9')
  name: PCGORIG values codes
- description: Westminster Parliamentary Constituency of Residence is String(3)
  expr: is.character(PCON) & nchar(PCON) <= 3
  name: PCON String(3)
- description: PCON 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", PCON)
  name: PCON 3an
- description: '3an = English Westminster Parliamentary Constituency

    S = Scotland

    U = no fixed abode

    W = Wales

    X = Foreign (includes Channel Islands and Isle of Man)

    Y = not known

    Z = Northern Ireland'
  expr: PCON %in% c('3an', 'S', 'U', 'W', 'X', 'Y', 'Z')
  name: PCON values codes
- description: Westminster Parliamentary Constituency of Residence (ONS) is String(9)
  expr: is.character(PCON_ONS) & nchar(PCON_ONS) <= 9
  name: PCON_ONS String(9)
- description: PCON_ONS 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", PCON_ONS)
  name: PCON_ONS 9an
- description: '9an = English Westminster Parliamentary Constituency

    E99999999 = England (not specified)

    L99999999 = Channel Islands

    M99999999 = Isle of Man

    N99999999 = Northern Ireland

    S99999999 = Scotland

    W99999999 = Wales

    U = no fixed abode

    X = foreign

    Y = not known'
  expr: PCON_ONS %in% c('9an', 'E99999999', 'L99999999', 'M99999999', 'N99999999',
    'S99999999', 'W99999999', 'U', 'X', 'Y')
  name: PCON_ONS values codes
- description: Consultant Code (Pseudonymised) is String(16)
  expr: is.character(PCONSULT) & nchar(PCONSULT) <= 16
  name: PCONSULT String(16)
- description: PCONSULT 16an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{16}$", PCONSULT)
  name: PCONSULT 16an
- description: "16an = Pseudonymised consultant code  \n& = Consultant code is null\n\
    99 = Consultant code is invalid"
  expr: PCONSULT %in% c('16an', '&', '99')
  name: PCONSULT values codes
- description: Primary Care Trust of Responsibility   is String(6)
  expr: is.character(PCTCODE) & nchar(PCTCODE) <= 6
  name: PCTCODE String(6)
- description: PCTCODE 5nn NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", PCTCODE)
  name: PCTCODE 5nn
- description: "5nn = PCT \nTaa = Care trust \n59898 = Not applicable\n59999 = Unknown"
  expr: PCTCODE %in% c('5nn', 'Taa', '59898', '59999')
  name: PCTCODE values codes
- description: Primary Care Trust of Responsibility is String(8)
  expr: is.character(PCTCODE_HIS) & nchar(PCTCODE_HIS) <= 8
  name: PCTCODE_HIS String(8)
- description: PCTCODE_HIS 5nn NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", PCTCODE_HIS)
  name: PCTCODE_HIS 5nn
- description: "5nn = PCT \nTaa = Care trust \n59898 = Not applicable\n59999 = Unknown"
  expr: PCTCODE_HIS %in% c('5nn', 'Taa', '59898', '59999')
  name: PCTCODE_HIS values codes
- description: Primary Care Trust of Responsibility 2002 is String(8)
  expr: is.character(PCTCODE02) & nchar(PCTCODE02) <= 8
  name: PCTCODE02 String(8)
- description: "nan, naa or aaa = PCT\n59898 = Not applicable  \n59999 = Unknown"
  expr: PCTCODE02 %in% c('nan, naa or aaa', '59898', '59999')
  name: PCTCODE02 values codes
- description: Primary Care Trust of Responsibility 2006 is String(8)
  expr: is.character(PCTCODE06) & nchar(PCTCODE06) <= 8
  name: PCTCODE06 String(8)
- description: PCTCODE06 5nn NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", PCTCODE06)
  name: PCTCODE06 5nn
- description: "5nn = PCT \nTaa = Care trust \n59898 = Not applicable\n59999 = Unknown"
  expr: PCTCODE06 %in% c('5nn', 'Taa', '59898', '59999')
  name: PCTCODE06 values codes
- description: Organisation Identifier (Residence Responsibility) is String(3-5)
  expr: is.character(PCTNHS) & (3 <= nchar(PCTNHS)) & (nchar(PCTNHS) <= 5)
  name: PCTNHS String(3-5)
- description: "3an - 5an = Organisation identifier \nQ99 = Not Known\nX98 = Not Applicable\
    \ (Overseas Visitors)"
  expr: PCTNHS %in% c('3an - 5an', 'Q99', 'X98')
  name: PCTNHS values codes
- description: Origin of Primary Care Trust of Responsibility is String(1)
  expr: is.character(PCTORIG) & nchar(PCTORIG) <= 1
  name: PCTORIG String(1)
- description: "1 = GPPRAC was used to derive the code  \n2 = REGGMP was used to derive\
    \ the code  \n3 = PURCODE was used to derive the code  \n4 = POSTCODE was used\
    \ to derive the code  \n5 = POSTCODE allocated code, PCT code was blank  \n6 =\
    \ POSTCODE allocated code, PCT code  \n9 = PCT code not known"
  expr: PCTORIG %in% c('1', '2', '3', '4', '5', '6', '9')
  name: PCTORIG values codes
- description: Origin of Primary Care Trust of Responsibility  is String(1)
  expr: is.character(PCTORIG_HIS) & nchar(PCTORIG_HIS) <= 1
  name: PCTORIG_HIS String(1)
- description: "1 = GPPRAC was used to derive the code  \n2 = REGGMP was used to derive\
    \ the code  \n3 = PURCODE was used to derive the code  \n4 = POSTCODE was used\
    \ to derive the code  \n5 = POSTCODE allocated code, PCT code was blank  \n6 =\
    \ POSTCODE allocated code, PCT code was 59998  \n9 = PCT code not known"
  expr: PCTORIG_HIS %in% c('1', '2', '3', '4', '5', '6', '9')
  name: PCTORIG_HIS values codes
- description: Origin of Primary Care Trust of Responsibility  2002 is String(1)
  expr: is.character(PCTORIG02) & nchar(PCTORIG02) <= 1
  name: PCTORIG02 String(1)
- description: "1 = GPPRAC was used to derive the code  \n2 = REGGMP was used to derive\
    \ the code  \n3 = PURCODE was used to derive the code  \n4 = POSTCODE was used\
    \ to derive the code  \n5 = POSTCODE allocated code, PCT code was blank  \n6 =\
    \ POSTCODE allocated code, PCT code was 59998  \n9 = PCT code not known"
  expr: PCTORIG02 %in% c('1', '2', '3', '4', '5', '6', '9')
  name: PCTORIG02 values codes
- description: Origin of Primary Care Trust of Responsibility  2006 is String(1)
  expr: is.character(PCTORIG06) & nchar(PCTORIG06) <= 1
  name: PCTORIG06 String(1)
- description: "1 = GPPRAC was used to derive the code  \n2 = REGGMP was used to derive\
    \ the code  \n3 = PURCODE was used to derive the code  \n4 = POSTCODE was used\
    \ to derive the code  \n5 = POSTCODE allocated code, PCT code was blank  \n6 =\
    \ POSTCODE allocated code, PCT code was 59998  \n9 = PCT code not known"
  expr: PCTORIG06 %in% c('1', '2', '3', '4', '5', '6', '9')
  name: PCTORIG06 values codes
- description: Primary Care Trust of Provider  is String(3)
  expr: is.character(PCTTREAT) & nchar(PCTTREAT) <= 3
  name: PCTTREAT String(3)
- description: PCTTREAT 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", PCTTREAT)
  name: PCTTREAT 3an
- description: '3an = PCT of provider

    59898 = Not applicable

    59999 = Unknown'
  expr: PCTTREAT %in% c('3an', '59898', '59999')
  name: PCTTREAT values codes
- description: Cds Report Period End Date  is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PEREND)
  name: PEREND Date(YYYY-MM-DD)
- description: PEREND YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PEREND)
  name: PEREND YYYY-MM-DD
- description: Person Identifier (Clear) is String(10)
  expr: is.character(PERSON_ID) & nchar(PERSON_ID) <= 10
  name: PERSON_ID String(10)
- description: PERSON_ID max 10an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,10}$", PERSON_ID)
  name: PERSON_ID max 10an
- description: Cds Report Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PERSTART)
  name: PERSTART Date(YYYY-MM-DD)
- description: PERSTART YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PERSTART)
  name: PERSTART YYYY-MM-DD
- description: Pseudonymised Code of GP Practice is String(16)
  expr: is.character(PGPPRAC) & nchar(PGPPRAC) <= 16
  name: PGPPRAC String(16)
- description: PGPPRAC 16an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{16}$", PGPPRAC)
  name: PGPPRAC 16an
- description: '16an = Pseudonymised GP practice code

    & = Unknown'
  expr: PGPPRAC %in% c('16an', '&')
  name: PGPPRAC values codes
- description: Post-Operative Duration  is Number
  expr: is.integer(POSOPDUR)
  name: POSOPDUR Number
- description: '1n to 5n = Number of days between the main procedure and the end of
    the episode

    Null = Not applicable: no procedure or episode is unfinished'
  expr: POSOPDUR %in% c('1n to 5n', 'Null')
  name: POSOPDUR values codes
- description: Postcode District is String(4)
  expr: is.character(POSTDIST) & nchar(POSTDIST) <= 4
  name: POSTDIST String(4)
- description: "an, aan, ann, or aann = Postcode district \nZZ99 = Unavailable / not\
    \ applicable"
  expr: POSTDIST %in% c('an, aan, ann, or aann', 'ZZ99')
  name: POSTDIST values codes
- description: Postnatal Stay is Number
  expr: is.integer(POSTDUR)
  name: POSTDUR Number
- description: POSTDUR 3n NHS Data Model and Dictionary
  expr: grepl("^\\d{3}$", POSTDUR)
  name: POSTDUR 3n
- description: "3n = The number of days of stay, from 0 to 270  \nNull = Not applicable\
    \ / not known"
  expr: POSTDUR %in% c('3n', 'Null')
  name: POSTDUR values codes
- description: Referrer Code (Pseudonymised) is String(16)
  expr: is.character(PREFERER) & nchar(PREFERER) <= 16
  name: PREFERER String(16)
- description: PREFERER 16an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{16}$", PREFERER)
  name: PREFERER 16an
- description: "16an = Pseudonymised referrer code  \n& = Referrer code is null\n\
    99 = Referrer code is invalid"
  expr: PREFERER %in% c('16an', '&', '99')
  name: PREFERER values codes
- description: Registered or Referring GP (Pseudonymised) is String(16)
  expr: is.character(PREGGMP) & nchar(PREGGMP) <= 16
  name: PREGGMP String(16)
- description: PREGGMP 16an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{16}$", PREGGMP)
  name: PREGGMP 16an
- description: "16an = pseudonymised registered or referring GP code \n& = registered\
    \ or referring GP code is null\n99 = registered or referring GP code is invalid"
  expr: PREGGMP %in% c('16an', '&', '99')
  name: PREGGMP values codes
- description: Pre-Operative Duration is Number
  expr: is.integer(PREOPDUR)
  name: PREOPDUR Number
- description: PREOPDUR 3n NHS Data Model and Dictionary
  expr: grepl("^\\d{3}$", PREOPDUR)
  name: PREOPDUR 3n
- description: '3n = Number of days between the start of the episode and the main
    procedure from 0-365

    Null = Not applicable: no operation or procedure unfinished'
  expr: PREOPDUR %in% c('3n', 'Null')
  name: PREOPDUR values codes
- description: CDS Prime Recipient Identity is String(12)
  expr: is.character(PRIMERCP) & nchar(PRIMERCP) <= 12
  name: PRIMERCP String(12)
- description: '3an or 5an = Prime recipient organisation identifier

    Q99 = Not known

    X98 = Not applicable'
  expr: PRIMERCP %in% c('3an or 5an', 'Q99', 'X98')
  name: PRIMERCP values codes
- description: "Organisation Identifier (Code of Provider)\n is String(3) or String(5)"
  expr: is.character(PROCODE) & nchar(PROCODE) <= 5
  name: PROCODE String(3) or String(5)
- description: "3an or 5an = Organisation identifier\n89997 = UK provider where no\
    \ organisation identifier has been issued \n89999 = Non-NHS UK provider where\
    \ no organisation identifier has been issued"
  expr: PROCODE %in% c('3an or 5an', '89997', '89999')
  name: PROCODE values codes
- description: Organisation Identifier (Code of Provider) (3 Character) is String(5)
  expr: is.character(PROCODE3) & nchar(PROCODE3) <= 5
  name: PROCODE3 String(5)
- description: PROCODE3 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", PROCODE3)
  name: PROCODE3 3an
- description: Organisation Identifier (Code of Provider) (5 Character) is String(5)
  expr: is.character(PROCODE5) & nchar(PROCODE5) <= 5
  name: PROCODE5 String(5)
- description: PROCODE5 5an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{5}$", PROCODE5)
  name: PROCODE5 5an
- description: "5an = Provider code to 5 characters\n89997 = Non-UK provider where\
    \ no organisation code has been issued  \n89999 = Non-NHS UK provider where no\
    \ organisation code has been issued"
  expr: PROCODE5 %in% c('5an', '89997', '89999')
  name: PROCODE5 values codes
- description: Organisation Identifier (Code of Provider) (Original) is String(5)
  expr: is.character(PROCODEO) & nchar(PROCODEO) <= 5
  name: PROCODEO String(5)
- description: Provider Code of Treatment is String(5)
  expr: is.character(PROCODET) & nchar(PROCODET) <= 5
  name: PROCODET String(5)
- description: PROCODET 5an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{5}$", PROCODET)
  name: PROCODET 5an
- description: Provider Type  is String(20)
  expr: is.character(PROTYPE) & nchar(PROTYPE) <= 20
  name: PROTYPE String(20)
- description: "CARETRUST = Care trust  \nCCG = Clinical Commissioning Group\nFOUNDATION\
    \ = NHS foundation trust  \nIND = Independent sector provider  \nINDSITE = Independent\
    \ sector provider site \nINDSITETC = Treatment centre at independent sector provider\
    \ site  \nOTHERPROV = Other provider organisation  \nPCT = Primary care trust\
    \  \nTRUST = NHS trust  \nTRUSTSITETC = Treatment centre at NHS trust site"
  expr: PROTYPE %in% c('CARETRUST', 'CCG', 'FOUNDATION', 'IND', 'INDSITE', 'INDSITETC',
    'OTHERPROV', 'PCT', 'TRUST', 'TRUSTSITETC')
  name: PROTYPE values codes
- description: Distance Between LSOA11 and Provider is String(15)
  expr: is.character(PROVDIST) & nchar(PROVDIST) <= 15
  name: PROVDIST String(15)
- description: PROVDIST nnn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", PROVDIST)
  name: PROVDIST nnn.nn
- description: Derivation of PROVDIST is String(1)
  expr: is.character(PROVDIST_FLAG) & nchar(PROVDIST_FLAG) <= 1
  name: PROVDIST_FLAG String(1)
- description: '5 = PROVDIST was calculated from PROCODE5

    3 = PROVDIST was calculated from PROCODE3'
  expr: PROVDIST_FLAG %in% c('5', '3')
  name: PROVDIST_FLAG values codes
- description: Hospital Provider Spell Identifier is Number
  expr: is.integer(PROVSPNO)
  name: PROVSPNO Number
- description: PROVSPNO 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{20}$", PROVSPNO)
  name: PROVSPNO 20an
- description: Hospital Provider Spell Number (Pseudonymised) is String(40)
  expr: is.character(PROVSPNOPS) & nchar(PROVSPNOPS) <= 40
  name: PROVSPNOPS String(40)
- description: Pseudonymised Patient identifier - HES generated is String(32)
  expr: is.character(PSEUDO_HESID) & nchar(PSEUDO_HESID) <= 32
  name: PSEUDO_HESID String(32)
- description: PSEUDO_HESID 32an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{32}$", PSEUDO_HESID)
  name: PSEUDO_HESID 32an
- description: Organisation Identifer (Code of Commissioner) is String(12)
  expr: is.character(PURCODE) & nchar(PURCODE) <= 12
  name: PURCODE String(12)
- description: '3an - 5an = Organisation Identifier (Commissioning Organisation)

    VPP00 = Private patients / overseas visitor liable for charge

    XMD00 = Commissioner code for Ministry of Defence (MoD) healthcare

    YDD82 = Episodes funded directly by the National Commissioning Group for England
    (retired September 2018)'
  expr: PURCODE %in% c('3an - 5an', 'VPP00', 'XMD00', 'YDD82')
  name: PURCODE values codes
- description: "Commissioner\u2019s Regional Office  is String(8)"
  expr: is.character(PURRO) & nchar(PURRO) <= 8
  name: PURRO String(8)
- description: "From 1999-2000 to 2001-2002: \nS or S0000 = Scotland  \nW or W0000\
    \ = Wales  \nY01 = Northern and Yorkshire  \nY02 = Trent  \nY07 = West Midlands\
    \  \nY08 = North West  \nY09 = Eastern  \nY10 = London  \nY11 = South East  \n\
    Y12 = South West  \nZ or Z0000 = Northern Ireland  \nNull = Not known  \n\nFrom\
    \ 1996-97 to 1998-99: \nS or S0000 = Scotland  \nW or W0000 = Wales  \nY01 = Northern\
    \ and Yorkshire  \nY02 = Trent  \nY03 = Anglia and Oxford  \nY04 = North Thames\
    \  \nY05 = South Thames  \nY06 = South and West  \nY07 = West Midlands  \nY08\
    \ = North West  \nZ or Z0000 = Northern Ireland  \nNull = Not known  \n9999 =\
    \ Not known  \n\n1995-96: \nA0000 = Northern  \nB0000 = Yorkshire  \nC0000 = Trent\
    \  \nD0000 = East Anglia  \nE0000 = North West Thames  \nF0000 = North East Thames\
    \  \nG0000 = South East Thames  \nH0000 = South West Thames  \nJ0000 = Wessex\
    \  \nK0000 = South Western  \nM0000 = West Midlands  \nN0000 = Mersey  \nP0000\
    \ = North Western  \nZ or Z0000 = Northern Ireland  \nNull = Not known  \n9999\
    \ = Not known\n"
  expr: PURRO %in% c('S or S0000', 'W or W0000', 'Y01', 'Y02', 'Y07', 'Y08', 'Y09',
    'Y10', 'Y11', 'Y12', 'Z or Z0000', 'Null', 'Y03', 'Y04', 'Y05', 'Y06', '9999',
    'A0000', 'B0000', 'C0000', 'D0000', 'E0000', 'F0000', 'G0000', 'H0000', 'J0000',
    'K0000', 'M0000', 'N0000', 'P0000')
  name: PURRO values codes
- description: Strategic Health Authority of Commissioner is String(8)
  expr: is.character(PURSTHA) & nchar(PURSTHA) <= 8
  name: PURSTHA String(8)
- description: PURSTHA 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", PURSTHA)
  name: PURSTHA 3an
- description: "3an = SHA area of commissioner\nS = Scotland  \nX = Foreign (including\
    \ Isle of Man and Channel Islands)  \nY = Unknown  \nZ = Northern Ireland"
  expr: PURSTHA %in% c('3an', 'S', 'X', 'Y', 'Z')
  name: PURSTHA values codes
- description: Commissioner Code Status  is String(1)
  expr: is.character(PURVAL) & nchar(PURVAL) <= 1
  name: PURVAL String(1)
- description: "0 = Purchaser code is not recognised throughout the NHS  \n1 = Purchaser\
    \ code is recognised throughout the NHS"
  expr: PURVAL %in% c('0', '1')
  name: PURVAL values codes
- description: Linkage Quality Rank is Number
  expr: is.integer(RANK_ORDER)
  name: RANK_ORDER Number
- description: Organisation Identifier (Referring Organisation) is String(3-8)
  expr: is.character(REFERORG) & (3 <= nchar(REFERORG)) & (nchar(REFERORG) <= 8)
  name: REFERORG String(3-8)
- description: "3an - 8an = Referring organisation identifier  \nX99998 = Referring\
    \ organisation identifier not applicable  \nX99999 = Referring organisation identifier\
    \ not known"
  expr: REFERORG %in% c('3an - 8an', 'X99998', 'X99999')
  name: REFERORG values codes
- description: Referrer Code is String(8)
  expr: is.character(REFERRER) & nchar(REFERRER) <= 8
  name: REFERRER String(8)
- description: "an8 = Referrer code\nA9999998 = Ministry of Defence Doctor\nC9999998\
    \ = Consultant, General Medical Council (GMC) number not known  \nD9999998 = Dentist,\
    \ General Dental Practitioner Code (GDC) not known\nCD999998 = Dental consultant:\
    \ GMC / GDC number not known  \nR9999981 = Referrer other than GP, general dental\
    \ practitioner or consultant  \nX9999998 = Not applicable, e.g. patient has self-presented\
    \ or not known  \n& = referrer code not recorded\n99 = referrer code invalid"
  expr: REFERRER %in% c('an8', 'A9999998', 'C9999998', 'D9999998', 'CD999998', 'R9999981',
    'X9999998', '&', '99')
  name: REFERRER values codes
- description: Registered or Referring GP is String(8)
  expr: is.character(REGGMP) & nchar(REGGMP) <= 8
  name: REGGMP String(8)
- description: REGGMP 8an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{8}$", REGGMP)
  name: REGGMP 8an
- description: "8an = GP code\nG followed by up to 7 digits (GP England and Wales)\n\
    S followed by up to 7 digits (GP Scotland)\n[Z as 1st character] [E, N, S or W\
    \ as 2nd character] followed by up to 6 digits (GP N. Ireland)\nG9999998 = GP\
    \ code is unknown  \nG9999981 = No registered GP  \nR9999981 (retired) = referrer\
    \ other than General Medical Practitioner, General Dental\nPractitioner or Consultant\
    \  \nA9999998 (retired) = Ministry of Defence doctor  \nP9999981 (retired) = Prison\
    \ doctor\n& = Registered GP not recorded\n99 = Registered GP code invalid"
  expr: REGGMP %in% c('8an', 'G9999998', 'G9999981', 'R9999981 (retired)', 'A9999998
    (retired)', 'P9999981 (retired)', '&', '99')
  name: REGGMP values codes
- description: County of Residence  is String(2)
  expr: is.character(RESCTY) & nchar(RESCTY) <= 2
  name: RESCTY String(2)
- description: "00 = Not available (patient was resident within a Unitary Authority)\n\
    11 = Buckinghamshire  \n12 = Cambridgeshire  \n16 = Cumbria  \n17 = Derbyshire\
    \  \n18 = Devon  \n19 = Dorset  \n21 = East Sussex  \n22 = Essex  \n23 = Gloucestershire\
    \  \n24 = Hampshire  \n26 = Hertfordshire  \n29 = Kent  \n30 = Lancashire  \n\
    31 = Leicestershire  \n32 = Lincolnshire  \n33 = Norfolk  \n34 = Northamptonshire\
    \  \n36 = North Yorkshire  \n37 = Nottinghamshire  \n38 = Oxfordshire  \n40 =\
    \ Somerset  \n41 = Staffordshire  \n42 = Suffolk  \n43 = Surrey  \n44 = Warwickshire\
    \  \n45 = West Sussex  \n47 = Worcestershire  \nS = Scotland  \nU = No fixed abode\n\
    W = Wales  \nX = Foreign (from 1990-91 onwards)  \nY = Not known  \nZ = Northern\
    \ Ireland "
  expr: RESCTY %in% c('00', '11', '12', '16', '17', '18', '19', '21', '22', '23',
    '24', '26', '29', '30', '31', '32', '33', '34', '36', '37', '38', '40', '41',
    '42', '43', '44', '45', '47', 'S', 'U', 'W', 'X', 'Y', 'Z')
  name: RESCTY values codes
- description: County of Residence (ONS) is String(12)
  expr: is.character(RESCTY_ONS) & nchar(RESCTY_ONS) <= 12
  name: RESCTY_ONS String(12)
- description: "E10000002 - E10000034 = county of residence (England)\nE99999999 =\
    \ Unitary Authority (England)\nW99999999 = Wales\nS99999999 = Scotland\nN99999999\
    \ = Northern Ireland\nL99999999 = Channel Islands\nM99999999 = Isle of Man\nU\
    \ = No fixed abode\nX = Foreign   \nY = Not known "
  expr: RESCTY_ONS %in% c('E10000002 - E10000034', 'E99999999', 'W99999999', 'S99999999',
    'N99999999', 'L99999999', 'M99999999', 'U', 'X', 'Y')
  name: RESCTY_ONS values codes
- description: Government Office Region of Residence is String(1)
  expr: is.character(RESGOR) & nchar(RESGOR) <= 1
  name: RESGOR String(1)
- description: "A = North East  \nB = North West  \nC = Merseyside (until 1998-99)\
    \  \nD = Yorkshire and Humber  \nE = East Midlands  \nF = West Midlands  \nG =\
    \ East of England  \nH = London  \nJ = South East  \nK = South West  \nS = Scotland\
    \  \nU = No fixed abode  \nW = Wales  \nX = Foreign (including Isle of Man and\
    \ Channel Islands)  \nY = Unknown  \nZ = Northern Ireland"
  expr: RESGOR %in% c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'S', 'U',
    'W', 'X', 'Y', 'Z')
  name: RESGOR values codes
- description: Government Office Region of Residence (ONS) is String(9)
  expr: is.character(RESGOR_ONS) & nchar(RESGOR_ONS) <= 9
  name: RESGOR_ONS String(9)
- description: 'E12000001  =North East

    E12000002 = North West

    E12000003 = Yorkshire and Humber

    E12000004 = East Midlands

    E12000005 = West Midlands

    E12000006 = East of England

    E12000007 = London

    E12000008 = South East

    E12000009 = South West

    E99999999 = England (not otherwise stated)

    L99999999 = Channel Islands

    M99999999 = Isle of Man

    N99999999 = Northern Ireland

    S99999999 = Scotland

    W99999999 = Wales

    U = No fixed abode

    X = Foreign

    Y = Unknown'
  expr: RESGOR_ONS %in% c('E12000001', 'E12000002', 'E12000003', 'E12000004', 'E12000005',
    'E12000006', 'E12000007', 'E12000008', 'E12000009', 'E99999999', 'L99999999',
    'M99999999', 'N99999999', 'S99999999', 'W99999999', 'U', 'X', 'Y')
  name: RESGOR_ONS values codes
- description: Health Authority of Residence  is String(3)
  expr: is.character(RESHA) & nchar(RESHA) <= 3
  name: RESHA String(3)
- description: RESHA 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", RESHA)
  name: RESHA 3an
- description: "3an = Health Authority area of residence \nS = Scotland \nU = no fixed\
    \ abode\nW = Wales \nX = Foreign (including Isle of Man and Channel Islands) \n\
    Y = Unknown \nZ = Northern Ireland"
  expr: RESHA %in% c('3an', 'S', 'U', 'W', 'X', 'Y', 'Z')
  name: RESHA values codes
- description: Local Authority District of Residence is String(9)
  expr: is.character(RESLADST) & nchar(RESLADST) <= 9
  name: RESLADST String(9)
- description: RESLADST 4an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{4}$", RESLADST)
  name: RESLADST 4an
- description: "4an = Local authority district code \nS = Scotland \nU = no fixed\
    \ abode\nW = Wales \nY = Not known \nZ = Northern Ireland \nX = Foreign (includes\
    \ Isle of Man)"
  expr: RESLADST %in% c('4an', 'S', 'U', 'W', 'Y', 'Z', 'X')
  name: RESLADST values codes
- description: Local Authority District of Residence (ONS) is String(9)
  expr: is.character(RESLADST_ONS) & nchar(RESLADST_ONS) <= 9
  name: RESLADST_ONS String(9)
- description: RESLADST_ONS 9an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{9}$", RESLADST_ONS)
  name: RESLADST_ONS 9an
- description: '9an = Local authority district code

    E99999999 = England (not otherwise stated)

    L99999999 = Channel Islands

    M99999999 = Isle of Man

    N99999999 = Northern Ireland

    S99999999 = Scotland

    W99999999 = Wales

    U = No fixed abode

    X = Foreign

    Y = Not known'
  expr: RESLADST_ONS %in% c('9an', 'E99999999', 'L99999999', 'M99999999', 'N99999999',
    'S99999999', 'W99999999', 'U', 'X', 'Y')
  name: RESLADST_ONS values codes
- description: Primary Care Trust of Residence is String(8)
  expr: is.character(RESPCT_HIS) & nchar(RESPCT_HIS) <= 8
  name: RESPCT_HIS String(8)
- description: "5** = PCT \nTaa = Care trust \n6** = Wales \nS** = Scotland \nY**\
    \ = Manx and Channel Islands \nZ** = Northern Ireland \n59898 = Other not applicable\
    \ (non-England) \n59999 = Unknown PCT"
  expr: RESPCT_HIS %in% c('5**', 'Taa', '6**', 'S**', 'Y**', 'Z**', '59898', '59999')
  name: RESPCT_HIS values codes
- description: Primary Care Trust of Residence 2002 is String(8)
  expr: is.character(RESPCT02) & nchar(RESPCT02) <= 8
  name: RESPCT02 String(8)
- description: "5** = PCT \nTaa = Care trust \n6** = Wales \nS** = Scotland \nY**\
    \ = Manx and Channel Islands \nZ** = Northern Ireland \n59898 = Other not applicable\
    \ (non-England) \n59999 = Unknown PCT"
  expr: RESPCT02 %in% c('5**', 'Taa', '6**', 'S**', 'Y**', 'Z**', '59898', '59999')
  name: RESPCT02 values codes
- description: Primary Care Trust of Residence 2006 is String(9)
  expr: is.character(RESPCT06) & nchar(RESPCT06) <= 9
  name: RESPCT06 String(9)
- description: "5** = PCT \nTaa = Care trust \n6** = Wales \nS** = Scotland \nY**\
    \ = Manx and Channel Islands \nZ** = Northern Ireland \n59898 = Other not applicable\
    \ (non-England) \n59999 = Unknown PCT"
  expr: RESPCT06 %in% c('5**', 'Taa', '6**', 'S**', 'Y**', 'Z**', '59898', '59999')
  name: RESPCT06 values codes
- description: Regional Office of Residence  is String(3)
  expr: is.character(RESRO) & nchar(RESRO) <= 3
  name: RESRO String(3)
- description: "From 1 April 1999: \nY01 = Northern and Yorkshire  \nY02 = Trent \
    \ \nY07 = West Midlands  \nY08 = North West  \nY09 = Eastern  \nY10 = London \
    \ \nY11 = South East  \nY12 = South West  \nW00 = Wales  \nS00 = Scotland  \n\
    Z00 = Northern Ireland  \nU00 = no fixed abode\nY00 = Unknown  \nX00 = Foreign\
    \ (includes Channel Islands and the Isle of Man)  \n\nFrom 1 April 1996 to 31\
    \ March 1999: \nY01 = Northern and Yorkshire  \nY02 = Trent  \nY03 = Anglia and\
    \ Oxford  \nY04 = North Thames  \nY05 = South Thames   \nY06 = South and West\
    \  \nY07 = West Midlands  \nY08 = North West  \nW = Wales  \nS = Scotland  \n\
    Z = Northern Ireland \nU = no fixed abode \nY = Not known  \nX = Foreign  \n\n\
    From 1 April 1989 to 31 March 1996: \nY0A = Northern RHA  \nY0B = Yorkshire RHA\
    \  \nY0C = Trent RHA  \nY0D = East Anglian RHA  \nY0E = North West Thames RHA\
    \  \nY0F = North East Thames RHA  \nY0G = South East Thames RHA  \nY0H = South\
    \ West Thames RHA  \nY0J = Wessex RHA  \nY0K = Oxford RHA  \nY0L = South Western\
    \ RHA  \nY0M = West Midlands RHA  \nY0N = Mersey RHA  \nY0P = North Western RHA\
    \  \nY0Y = Not known"
  expr: RESRO %in% c('Y01', 'Y02', 'Y07', 'Y08', 'Y09', 'Y10', 'Y11', 'Y12', 'W00',
    'S00', 'Z00', 'U00', 'Y00', 'X00', 'Y03', 'Y04', 'Y05', 'Y06', 'W', 'S', 'Z',
    'U', 'Y', 'X', 'Y0A', 'Y0B', 'Y0C', 'Y0D', 'Y0E', 'Y0F', 'Y0G', 'Y0H', 'Y0J',
    'Y0K', 'Y0L', 'Y0M', 'Y0N', 'Y0P', 'Y0Y')
  name: RESRO values codes
- description: Strategic Health Authority of Residence is String(8)
  expr: is.character(RESSTHA_HIS) & nchar(RESSTHA_HIS) <= 8
  name: RESSTHA_HIS String(8)
- description: RESSTHA_HIS 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA_HIS)
  name: RESSTHA_HIS 3an
- description: "3an= Strategic Health Authority of residence\nS = Scotland \nU = no\
    \ fixed abode\nW or Q99 = Wales \nX = Foreign (includes Channel Islands and the\
    \ Isle of Man)\nY = Unknown \nZ = Northern Ireland"
  expr: RESSTHA_HIS %in% c('3an', 'S', 'U', 'W or Q99', 'X', 'Y', 'Z')
  name: RESSTHA_HIS values codes
- description: Strategic Health Authority of Residence 2002 is String(8)
  expr: is.character(RESSTHA02) & nchar(RESSTHA02) <= 8
  name: RESSTHA02 String(8)
- description: RESSTHA02 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA02)
  name: RESSTHA02 3an
- description: "3an= Strategic Health Authority of residence 2002\nS = Scotland \n\
    U = no fixed abode\nW or Q99 = Wales \nX = Foreign (includes Channel Islands and\
    \ the Isle of Man)\nY = Unknown \nZ = Northern Ireland"
  expr: RESSTHA02 %in% c('3an', 'S', 'U', 'W or Q99', 'X', 'Y', 'Z')
  name: RESSTHA02 values codes
- description: Strategic Health Authority of Residence 2006 is String(9)
  expr: is.character(RESSTHA06) & nchar(RESSTHA06) <= 9
  name: RESSTHA06 String(9)
- description: RESSTHA06 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", RESSTHA06)
  name: RESSTHA06 3an
- description: "3an= Strategic Health Authority of residence 2006\nS = Scotland \n\
    U = no fixed abode\nW or Q99 = Wales \nX = Foreign (includes Channel Islands and\
    \ the Isle of Man)\nY = Unknown \nZ = Northern Ireland"
  expr: RESSTHA06 %in% c('3an', 'S', 'U', 'W or Q99', 'X', 'Y', 'Z')
  name: RESSTHA06 values codes
- description: Regional Office of Treatment is String(3)
  expr: is.character(ROTREAT) & nchar(ROTREAT) <= 3
  name: ROTREAT String(3)
- description: "From 1 April 1999: \nY01 = Northern and Yorkshire  \nY02 = Trent \
    \ \nY07 = West Midlands  \nY08 = North West  \nY09 = Eastern  \nY10 = London \
    \ \nY11 = South East  \nY12 = South West  \nY00 = Not Known  \n\nFrom 1 April\
    \ 1996 to 31 March 1999: \nY01 = Northern and Yorkshire  \nY02 = Trent  \nY03\
    \ = Anglia and Oxford  \nY04 = North Thames  \nY05 = South Thames  \nY06 = South\
    \ and West  \nY07 = West Midlands  \nY08 = North West  \nY00 = Not Known  \n\n\
    From 1 April 1989 to 31 March 1996: \nY0A = Northern RHA  \nY0B = Yorkshire RHA\
    \  \nY0C = Trent RHA  \nY0D = East Anglian RHA  \nY0E = North West Thames RHA\
    \  \nY0F = North East Thames RHA  \nY0G = South East Thames RHA  \nY0H = South\
    \ West Thames RHA  \nY0J = Wessex RHA  \nY0K = Oxford RHA  \nY0L = South Western\
    \ RHA  \nY0M = West Midlands RHA  \nY0N = Mersey RHA  \nY0P = North Western RHA\
    \  \nY0Y = Not known"
  expr: ROTREAT %in% c('Y01', 'Y02', 'Y07', 'Y08', 'Y09', 'Y10', 'Y11', 'Y12', 'Y00',
    'Y03', 'Y04', 'Y05', 'Y06', 'Y0A', 'Y0B', 'Y0C', 'Y0D', 'Y0E', 'Y0F', 'Y0G', 'Y0H',
    'Y0J', 'Y0K', 'Y0L', 'Y0M', 'Y0N', 'Y0P', 'Y0Y')
  name: ROTREAT values codes
- description: Referral to Treatment Period End Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPEREND)
  name: RTTPEREND Date(YYYY-MM-DD)
- description: RTTPEREND YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPEREND)
  name: RTTPEREND YYYY-MM-DD
- description: Referral to Treatment Period Start Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPERSTART)
  name: RTTPERSTART Date(YYYY-MM-DD)
- description: RTTPERSTART YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    RTTPERSTART)
  name: RTTPERSTART YYYY-MM-DD
- description: Referral to Treatment Period Status is String(2)
  expr: is.character(RTTPERSTAT) & nchar(RTTPERSTAT) <= 2
  name: RTTPERSTAT String(2)
- description: "The first activity in a referral to treatment period where the first\
    \ definitive treatment will be a subsequent activity:\n10 = First activity in\
    \ a referral to treatment period\n11 = First activity at the start of a new referral\
    \ to treatment period following active monitoring\n12 = First activity at the\
    \ start of a new referral to treatment period following a decision to refer directly\
    \ to the consultant or NHS allied health professional service (referral to treatment\
    \ measurement) for a separate condition\n\nSubsequent activity during a referral\
    \ to treatment period:\n20 = Subsequent activity during a referral to treatment\
    \ period - further activities anticipated \n21 = Subsequent activity by another\
    \ health care provider following a transfer to another health care provider during\
    \ a referral to treatment period anticipated\n\nActivity that ends the referral\
    \ to treatment period:\n30 = Start of first definitive treatment\n31 = Start of\
    \ active monitoring initiated by the patient\n32 = Start of active monitoring\
    \ initiated by the care professional\n33 = Did not attend - the patient did not\
    \ attend the first care activity after the referral1 \n34 = Decision not to treat\
    \ - decision not to treat made or no further contact required2\n35 = Patient declined\
    \ offered treatment\n36 = Patient died before treatment\n\nActivity that is not\
    \ part of a referral to treatment period:\n90 = After treatment - first definitive\
    \ treatment occurred previously (e.g. admitted as an emergency from A&E or the\
    \ activity is after the start of treatment)\n91 = Care activity during active\
    \ monitoring\n92 = Not yet referred for treatment, undergoing diagnostic tests\
    \ by general practitioner before referral\n98 = Not applicable - activity not\
    \ applicable to referral to treatment periods\n\nActivity where the referral to\
    \ treatment period status is not yet known:\n99 = Not yet known\n\nWhere the Referral\
    \ to treatment period status is National Code 99 - \"not yet known\", the status\
    \ is treated as if the activity is a subsequent activity during a referral to\
    \ treatment period. In this case the referral to treatment period status should\
    \ be corrected once it is possible to determine the correct value.\n\n1Patients\
    \ who do not attend an appointment:\nNational code 33 - \"Did not attend - the\
    \ patient did not attend the first care activity after the referral\" may only\
    \ be used where\n\u2022 The patient did not attend their first appointment following\
    \ the referral request that started the referral to treatment period, provided\
    \ that the health care provider can demonstrate that the appointment was clearly\
    \ communicated to the patient.\nReferral to treatment periods with referral to\
    \ treatment period status of national code 33 are excluded from the measurement\
    \ of the 18 weeks referral to treatment period included in referral to treatment\
    \ consultant-led waiting times measurement and the count of allied health professional\
    \ referral to treatment measurement referral to treatment periods\n\n2Decision\
    \ not to treat:\nNational Code 34 - \"decision not to treat - decision not to\
    \ treat made or no further contact required\" includes\n\u2022 a discharge after\
    \ patient did not attend the second or a subsequent care activity after the referral.\n\
    \u2022 a change resulting in care no longer being commissioned by the English\
    \ NHS.\n\u2022 a referral to a consultant led service during a referral to treatment\
    \ period excluded from target for the same condition, disease or injury. A new\
    \ referral to treatment period will start."
  expr: RTTPERSTAT %in% c('10', '11', '12', '20', '21', '30', '31', '32', '33', '34',
    '35', '36', '90', '91', '92', '98', '99')
  name: RTTPERSTAT values codes
- description: Rural / Urban Indicator is String(9)
  expr: is.character(RURURB_IND) & nchar(RURURB_IND) <= 9
  name: RURURB_IND String(9)
- description: "1 = Urban =>10K - sparse: Output Area falls within Urban settlements\
    \ with a population of 10,000 or more and the wider surrounding area is sparsely\
    \ populated.  \n2 = Town and Fringe - sparse. Output Area falls within the Small\
    \ Town and Fringe areas category and the wider surrounding area is sparsely populated.\
    \  \n3 = Village - sparse. Output Area falls within the Village category and the\
    \ wider surrounding area is sparsely populated. \n4 = Hamlet and Isolated dwelling\
    \ - sparse. Output Area falls within the Hamlet & Isolated Dwelling category and\
    \ the wider surrounding area is sparsely populated.  \n5 = Urban =>10K - less\
    \ sparse. Output Area falls within Urban settlements with a population of 10,000\
    \ or more and the wider surrounding area is less sparsely populated.  \n6 = Town\
    \ and Fringe - less sparse. Output Area falls within the Small Town and Fringe\
    \ areas category and the wider surrounding area is less sparsely populated.  \n\
    7 = Village - less sparse. Output Area falls within the Village category and the\
    \ wider surrounding area is less sparsely populated.  \n8 = Hamlet and Isolated\
    \ Dwelling - less sparse. Output Area falls within the Hamlet & Isolated Dwelling\
    \ category and the wider surrounding area is less sparsely populated.  \n9 = Postcode\
    \ in Scotland/NI/Channel Islands/Isle of Man/pseudo postcodes  \nSpace = No information\
    \ available"
  expr: RURURB_IND %in% c('1', '2', '3', '4', '5', '6', '7', '8', '9', 'Space')
  name: RURURB_IND values codes
- description: CDS Sender Identity is String(12)
  expr: is.character(SENDER) & nchar(SENDER) <= 12
  name: SENDER String(12)
- description: Person Stated Gender Code is String(1)
  expr: is.character(SEX) & nchar(SEX) <= 1
  name: SEX String(1)
- description: "From 2022-23 onwards: \n1 = Male\n2 = Female\n9 = Indeterminate (unable\
    \ to be classified as either male or female)\nX = Not Known (Person stated gender\
    \ code not recorded)\n\nFrom 1996-97 to 2022-23:\n1 = Male  \n2 = Female  \n9\
    \ = Not specified (indeterminate, i.e. unable to be classified as either male\
    \ or female)\n0 = Not known (not recorded)\n\nPrior to April 1996: \n1 = Male\
    \  \n2 = Female  \n3 = Indeterminate, including those undergoing sex change operations"
  expr: SEX %in% c('1', '2', '9', 'X', '0', '3')
  name: SEX values codes
- description: Person Phenotypic Sex (Baby) is String(1)
  expr: is.character(SEXBABY_n) & nchar(SEXBABY_n) <= 1
  name: SEXBABY_n String(1)
- description: "From 2022-23 onwards: \n1 = Male\n2 = Female\n9 = Indeterminate (unable\
    \ to be classified as either male or female)\nX = Not Known (Person stated gender\
    \ code not recorded)\n\nFrom 1996-97 to 2022-23:\n1 = Male  \n2 = Female  \n9\
    \ = Not specified (indeterminate, i.e. unable to be classified as either male\
    \ or female)\n0 = Not known (not recorded)\n\nPrior to April 1996: \n1 = Male\
    \  \n2 = Female  \n3 = Indeterminate, including those undergoing sex change operations"
  expr: SEXBABY_n %in% c('1', '2', '9', 'X', '0', '3')
  name: SEXBABY_n values codes
- description: Distance Between LSOA11 and Site Code of Treatment is String(15)
  expr: is.character(SITEDIST) & nchar(SITEDIST) <= 15
  name: SITEDIST String(15)
- description: SITEDIST nnn.nn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", SITEDIST)
  name: SITEDIST nnn.nn
- description: Derivation of SITEDIST is String(1)
  expr: is.character(SITEDIST_FLAG) & nchar(SITEDIST_FLAG) <= 1
  name: SITEDIST_FLAG String(1)
- description: '3 = SITEDIST was calculated from the first 3-characters of SITETRET

    5 = SITEDIST was calculated from the full 5-character SITETRET code'
  expr: SITEDIST_FLAG %in% c('3', '5')
  name: SITEDIST_FLAG values codes
- description: Organisation Site Identifier (of Treatment) (at Start of Episode) is
    String(5-9)
  expr: is.character(SITETRET) & (5 <= nchar(SITETRET)) & (nchar(SITETRET) <= 9)
  name: SITETRET String(5-9)
- description: "5an - 9an = Site code\n89999 = Non-NHS UK provider where no organisation\
    \ site code has been issued  \n89997 = Non-UK provider where no organisation site\
    \ code has been issued"
  expr: SITETRET %in% c('5an - 9an', '89999', '89997')
  name: SITETRET values codes
- description: Beginning of Spell Indicator is Number
  expr: is.integer(SPELBGIN)
  name: SPELBGIN Number
- description: "0 = Not the first episode of spell  \n1 = First episode of spell that\
    \ started in a previous year  \n2 = First episode of spell that started in current\
    \ year  \nNull = Not applicable"
  expr: SPELBGIN %in% c('0', '1', '2', 'Null')
  name: SPELBGIN values codes
- description: Duration of Spell is Number
  expr: is.integer(SPELDUR)
  name: SPELDUR Number
- description: SPELDUR 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", SPELDUR)
  name: SPELDUR 5n
- description: "5n = Duration of spell in days from 0 to 29,200  \nNull = Not applicable:\
    \ patient not discharged (DISMETH not in range 1-5), other maternity event (EPITYPE\
    \ is 5 or 6) or not valid"
  expr: SPELDUR %in% c('5n', 'Null')
  name: SPELDUR values codes
- description: Calculation of SPELDUR is Number
  expr: is.integer(SPELDUR_CALC)
  name: SPELDUR_CALC Number
- description: SPELDUR_CALC 5n NHS Data Model and Dictionary
  expr: grepl("^\\d{5}$", SPELDUR_CALC)
  name: SPELDUR_CALC 5n
- description: "5n = Duration of spell in days from 0 to 29,200  \nNull = Not applicable"
  expr: SPELDUR_CALC %in% c('5n', 'Null')
  name: SPELDUR_CALC values codes
- description: End of Spell Indicator is String(1)
  expr: is.character(SPELEND) & nchar(SPELEND) <= 1
  name: SPELEND String(1)
- description: "Y = Last episode of spell  \nN = Not last episode of spell"
  expr: SPELEND %in% c('Y', 'N')
  name: SPELEND values codes
- description: Age at Start of Episode is Number
  expr: is.integer(STARTAGE)
  name: STARTAGE Number
- description: "nnn = Age in whole years from 1-119\n120 = 120 years or more\n7001\
    \ = Less than 1 day\n7002 = 1 to 6 days\n7003 = 7 to 28 days \n7004 = 29 to 90\
    \ days (under 3 months) \n7005 = 91 to 181 days (approximately 3 months to under\
    \ 6 months) \n7006 = 182 to 272 days (approximately 6 months to under 9 months)\n\
    7007 = 273 to <1 year (approximately 9 months to 1 year)\nNull = Not applicable\
    \ (other maternity event) or not known"
  expr: STARTAGE %in% c('nnn', '120', '7001', '7002', '7003', '7004', '7005', '7006',
    '7007', 'Null')
  name: STARTAGE values codes
- description: Age at Start of Episode (Decimalised) is Decimal
  expr: is.numeric(STARTAGE_CALC)
  name: STARTAGE_CALC Decimal
- description: STARTAGE_CALC nnn.nnn NHS Data Model and Dictionary
  expr: grepl("^\\d*\\.?\\d*$", STARTAGE_CALC)
  name: STARTAGE_CALC nnn.nnn
- description: 'nnn.nnn = Age in whole years from 1.000 to 119.000

    120.000 = 120 years or more

    0.002 = Less than 1 day

    0.010 = 1 to 6 days

    0.048 = 7 to 28 days

    0.167 = 29 to 90 days (under 3 months)

    0.375 = 91 to 181 days (approximately 3 months to under 6 months)

    0.625 = 182 to 272 days (approximately 6 months to under 9 months)

    0.875 = 273 to <1 year (approximately 9 months to 1 year)

    Null = Not applicable (other maternity event) or not known'
  expr: STARTAGE_CALC %in% c('nnn.nnn', '120.000', '0.002', '0.010', '0.048', '0.167',
    '0.375', '0.625', '0.875', 'Null')
  name: STARTAGE_CALC values codes
- description: Strategic Health Authority of Treatment is String(3)
  expr: is.character(STHATRET) & nchar(STHATRET) <= 3
  name: STHATRET String(3)
- description: STHATRET 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{3}$", STHATRET)
  name: STHATRET 3an
- description: "3an = Strategic Health Authority area of treatment  \nY = Not known"
  expr: STHATRET %in% c('3an', 'Y')
  name: STHATRET values codes
- description: "Integrated Care Board of GP Practice (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of GP Practice (until June 2022)\n is String(9)"
  expr: is.character(STP_GP_PRACTICE) & nchar(STP_GP_PRACTICE) <= 9
  name: STP_GP_PRACTICE String(9)
- description: 'an9 = ICB / STP code of GP practice

    null = Not known, or GP practice is outside of England'
  expr: STP_GP_PRACTICE %in% c('an9', 'null')
  name: STP_GP_PRACTICE values codes
- description: 'Integrated Care Board of Residence (July 2022 onwards)

    Sustainability and Transformation Partnership of Residence (until June 2022) is
    String(9)'
  expr: is.character(STP_RESIDENCE) & nchar(STP_RESIDENCE) <= 9
  name: STP_RESIDENCE String(9)
- description: 'an9 = ICB / STP code of residence

    null = Not known, or patient''s postcode is outside of England'
  expr: STP_RESIDENCE %in% c('an9', 'null')
  name: STP_RESIDENCE values codes
- description: "Integrated Care Board of Responsibility (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Responsibility (until June 2022)\n is String(9)"
  expr: is.character(STP_RESPONSIBILITY) & nchar(STP_RESPONSIBILITY) <= 9
  name: STP_RESPONSIBILITY String(9)
- description: 'an9 = ICB / STP code of responsibility

    null = Not known'
  expr: STP_RESPONSIBILITY %in% c('an9', 'null')
  name: STP_RESPONSIBILITY values codes
- description: Origin of STP_RESPONSIBILITY  is String(1)
  expr: is.character(STP_RESPONSIBILITY_ORIGIN) & nchar(STP_RESPONSIBILITY_ORIGIN)
    <= 1
  name: STP_RESPONSIBILITY_ORIGIN String(1)
- description: "Integrated Care Board of Treatment (July 2022 onwards)\nSustainability\
    \ and Transformation Partnership of Treatment\_(until June 2022) is String(9)"
  expr: is.character(STP_TREATMENT) & nchar(STP_TREATMENT) <= 9
  name: STP_TREATMENT String(9)
- description: 'an9 = ICB / STP code of treatment

    null = Not known'
  expr: STP_TREATMENT %in% c('an9', 'null')
  name: STP_TREATMENT values codes
- description: Origin of STP_TREATMENT  is String(1)
  expr: is.character(STP_TREATMENT_ORIGIN) & nchar(STP_TREATMENT_ORIGIN) <= 1
  name: STP_TREATMENT_ORIGIN String(1)
- description: Submission Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE Date(YYYY-MM-DD)
- description: SUBDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUBDATE)
  name: SUBDATE YYYY-MM-DD
- description: SUS Generated Core Spell HRG is String(5)
  expr: is.character(SUSCOREHRG) & nchar(SUSCOREHRG) <= 5
  name: SUSCOREHRG String(5)
- description: SUSCOREHRG 5an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{5}$", SUSCOREHRG)
  name: SUSCOREHRG 5an
- description: '5an = SUS generated Core Spell HRG

    Null = Spells that have been excluded from PbR in SUS as the activity is outside
    the scope of PbR'
  expr: SUSCOREHRG %in% c('5an', 'Null')
  name: SUSCOREHRG values codes
- description: Healthcare Resource Group - SUS Generated  is String(5)
  expr: is.character(SUSHRG) & nchar(SUSHRG) <= 5
  name: SUSHRG String(5)
- description: SUSHRG 5an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{5}$", SUSHRG)
  name: SUSHRG 5an
- description: '5an = SUS generated HRG

    Null = Records that have been excluded from PbR in SUS as the activity is outside
    the scope of PbR'
  expr: SUSHRG %in% c('5an', 'Null')
  name: SUSHRG values codes
- description: Healthcare Resource Group Version Number - SUS Generated is String(3)
  expr: is.character(SUSHRGVERS) & nchar(SUSHRGVERS) <= 3
  name: SUSHRGVERS String(3)
- description: "4.0 = HRG4 \nNull = Not applicable"
  expr: SUSHRGVERS %in% c('4.0', 'Null')
  name: SUSHRGVERS values codes
- description: SUS Loaded Staging Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUSLDDATE)
  name: SUSLDDATE Date(YYYY-MM-DD)
- description: SUSLDDATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    SUSLDDATE)
  name: SUSLDDATE YYYY-MM-DD
- description: SUS Record Identifier is Number
  expr: is.integer(SUSRECID)
  name: SUSRECID Number
- description: SUSRECID 14n NHS Data Model and Dictionary
  expr: grepl("^\\d{14}$", SUSRECID)
  name: SUSRECID 14n
- description: SUS Generated Spell Identifier is String(38)
  expr: is.character(SUSSPELLID) & nchar(SUSSPELLID) <= 38
  name: SUSSPELLID String(38)
- description: "19n (10n until 2016-17) = SUS spell identifier \nNull = Records that\
    \ have excluded from PbR in SUS as the activity is outside the scope of PbR\n\
    -1 = Unspellable episodes"
  expr: SUSSPELLID %in% c('19n (10n until 2016-17)', 'Null', '-1')
  name: SUSSPELLID values codes
- description: Person Identifier (Tokenised) is String(32)
  expr: is.character(TOKEN_PERSON_ID) & nchar(TOKEN_PERSON_ID) <= 32
  name: TOKEN_PERSON_ID String(32)
- description: TOKEN_PERSON_ID 32an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{32}$", TOKEN_PERSON_ID)
  name: TOKEN_PERSON_ID 32an
- description: Treatment Specialty (retired) is Number
  expr: is.integer(TREAT)
  name: TREAT Number
- description: TREAT max 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{0,4}$", TREAT)
  name: TREAT max 4n
- description: Treatment Specialty is String(3)
  expr: is.character(TRETSPEF) & nchar(TRETSPEF) <= 3
  name: TRETSPEF String(3)
- description: '100 =  General Surgery Service

    101 =  Urology Service

    102 =  Transplant Surgery Service (From 1 April 2004)

    103 =  Breast Surgery Service (From 1 April 2004)

    104 =  Colorectal Surgery Service (From 1 April 2004)

    105 =  Hepatobiliary and Pancreatic Surgery Service (From 1 April 2004)

    106 =  Upper Gastrointestinal Surgery Service (From 1 April 2004)

    107 =  Vascular Surgery Service (From 1 April 2004)

    108 =  Spinal Surgery Service (From April 2013)

    109 =  Bariatric Surgery Service (From 1 April 2021)

    110 =  Trauma and Orthopaedic Service

    111 =  Orthopaedic Service (From 1 April 2021)

    113 =  Endocrine Surgery Service (From 1 April 2021)

    115 =  Trauma Surgery Service (From 1 April 2021)

    120 =  Ear Nose and Throat Service

    130 =  Ophthalmology Service

    140 =  Oral Surgery Service

    141 =  Restorative Dentistry Service

    142 =  Paediatric Dentistry Service (From 1999-2000)

    143 =  Orthodontic Service

    144 =  Maxillofacial Surgery Service (From 1 April 2004)

    145 =  Oral and Maxillofacial Surgery Service (From 1 April 2021)

    150 =  Neurosurgical Service

    160 =  Plastic Surgery Service

    161 =  Burns Care Service (From 1 April 2004)

    170 =  Cardiothoracic Surgery Service

    171 =  Paediatric Surgery Service

    172 =  Cardiac Surgery Service (From 1 April 2004)

    173 =  Thoracic Surgery Service (From 1 April 2004)

    174 =  Cardiothoracic Transplantation Service (From 1 April 2004)

    180 =  Emergency Medicine Service

    190 =  Anaesthetic Service

    191 =  Pain Management Service (From 1998-99)

    192 =  Intensive Care Medicine Service (From 1 April 2004)

    200 =  Aviation and Space Medicine Service (From 1 April 2021)

    211 =  Paediatric Urology Service (From 2006-07)

    212 =  Paediatric Transplantation Surgery Service (From 2006-07)

    213 =  Paediatric Gastrointestinal Surgery Service (From 2006-07)

    214 =  Paediatric Trauma and Orthopaedic Service (From 2006-07)

    215 =  Paediatric Ear Nose and Throat Service (From 2006-07)

    216 =  Paediatric Ophthalmology Service (From 2006-07)

    217 =  Paediatric Oral and Maxillofacial Surgery Service (From 2006-07)

    218 =  Paediatric Neurosurgery Service (From 2006-07)

    219 =  Paediatric Plastic Surgery Service (From 2006-07)

    220 =  Paediatric Burns Care Service (From 2006-07)

    221 =  Paediatric Cardiac Surgery Service (From 2006-07)

    222 =  Paediatric Thoracic Surgery Service (From 2006-07)

    223 =  Paediatric Epilepsy Service (From April 2013)

    230 =  Paediatric Clinical Pharmacology Service (From 1 April 2021)

    240 =  Paediatric Palliative Medicine Service (From 1 April 2021)

    241 =  Paediatric Pain Management Service (From 2006-07)

    242 =  Paediatric Intensive Care Service (From 2006-07)

    250 =  Paediatric Hepatology Service (From 1 April 2021)

    251 =  Paediatric Gastroenterology Service (From 2006-07)

    252 =  Paediatric Endocrinology Service (From 2006-07)

    253 =  Paediatric Clinical Haematology Service (From 2006-07)

    254 =  Paediatric Audio Vestibular Medicine Service (From 2006-07)

    255 =  Paediatric Clinical Immunology and Allergy Service (From 2006-07)

    256 =  Paediatric Infectious Diseases Service (From 2006-07)

    257 =  Paediatric Dermatology Service (From 2006-07)

    258 =  Paediatric Respiratory Medicine Service (From 2006-07)

    259 =  Paediatric Nephrology Service (From 2006-07)

    260 =  Paediatric Medical Oncology Service (From 2006-07)

    261 =  Paediatric Inherited Metabolic Medicine Service (From 2006-07)

    262 =  Paediatric Rheumatology Service (From 2006-07)

    263 =  Paediatric Diabetes Service (From 1 April 2004)

    264 =  Paediatric Cystic Fibrosis Service (From 1 April 2004)

    270 =  Paediatric Emergency Medicine Service (From 1 April 2021)

    280 =  Paediatric Interventional Radiology Service (From 2006-07)

    290 =  Community Paediatric Service (From 2006-07)

    291 =  Paediatric Neurodisability Service (From 2006-07)

    300 =  General Internal Medicine Service

    301 =  Gastroenterology Service

    302 =  Endocrinology Service

    303 =  Clinical Haematology Service

    304 =  Clinical Physiology Service (From 2008-09)

    305 =  Clinical Pharmacology Service

    306 =  Hepatology Service (From 1 April 2004)

    307 =  Diabetes Service (From 1 April 2004)

    308 =  Blood and Marrow Transplantation Service (From 1 April 2004)

    309 =  Haemophilia Service (From 1 April 2004)

    310 =  Audio Vestibular Medicine Service

    311 =  Clinical Genetics Service

    313 =  Clinical Immunology and Allergy Service (From 1991-92)

    314 =  Rehabilitation Medicine Service (From 1991-92)

    315 =  Palliative Medicine Service

    316 =  Clinical Immunology Service (From 1 April 2004)

    317 =  Allergy Service (From 1 April 2004)

    318 =  Intermediate Care Service (From 1 April 2004)

    319 =  Respite Care Service (From 1 April 2004)

    320 =  Cardiology Service

    321 =  Paediatric Cardiology Service (From 1 April 2004)

    322 =  Clinical Microbiology Service (From 1 April 2004)

    323 =  Spinal Injuries Service (From 2006-07)

    324 =  Anticoagulant Service (From 1 April 2004)

    325 =  Sport and Exercise Medicine Service (From 1 April 2004)

    326 =  Acute Internal Medicine Service (From 1 April 2021)

    327 =  Cardiac Rehabilitation Service (From 1 April 2004)

    328 =  Stroke Medicine Service (From 1 April 2004)

    329 =  Transient Ischaemic Attack Service (From 1 April 2004)

    330 =  Dermatology Service

    331 =  Congenital Heart Disease Service (From April 2013)

    333 =  Rare Disease Service (From 1 April 2021)

    335 =  Inherited Metabolic Medicine Service (From 1 April 2021)

    340 =  Respiratory Medicine Service

    341 =  Respiratory Physiology Service (From 1 April 2004)

    342 =  Pulmonary Rehabilitation Service (From 1 April 2004)

    343 =  Adult Cystic Fibrosis Service (From 1 April 2004)

    344 =  Complex Specialised Rehabilitation Service (From April 2013)

    345 =  Specialist Rehabilitation Service (From April 2013)

    346 =  Local Specialist Rehabilitation Service (From April 2013)

    347 =  Sleep Medicine Service (From 1 April 2021)

    348 =  Post-COVID-19 Syndrome Service (From 1 April 2021)

    350 =  Infectious Diseases Service

    352 =  Tropical Medicine Service (From 1 April 2004)

    360 =  Genitourinary Medicine Service

    361 =  Renal Medicine Service

    370 =  Medical Oncology Service

    371 =  Nuclear Medicine Service (From 2008-09)

    400 =  Neurology Service

    401 =  Clinical Neurophysiology Service (From 2008-09)

    410 =  Rheumatology Service

    420 =  Paediatric Service

    421 =  Paediatric Neurology Service

    422 =  Neonatal Critical Care Service (From 1 April 2004)

    424 =  Well Baby Service (From 1 April 2004)

    430 =  Elderly Medicine Service

    431 =  Orthogeriatric Medicine Service (From 1 April 2021)

    450 =  Dental Medicine Service (From 1990-91)

    451 =  Special Care Dentistry Service (From 1 April 2021)

    460 =  Medical Ophthalmology Service (From 1993-94)

    461 =  Ophthalmic and Vision Science Service (From 1 April 2021)

    501 =  Obstetrics Service

    502 =  Gynaecology Service

    503 =  Gynaecological Oncology Service (From 1 April 2004)

    504 =  Community Sexual and Reproductive Health Service (From 1 April 2021)

    505 =  Fetal Medicine Service (From 1 April 2021)

    560 =  Midwifery Service (From October 1995)

    650 =  Physiotherapy Service (From 2006-07)

    651 =  Occupational Therapy Service (From 2006-07)

    652 =  Speech and Language Therapy Service (From 2006-07)

    653 =  Podiatry Service (From 2006-07)

    654 =  Dietetics Service (From 2006-07)

    655 =  Orthoptics Service (From 2006-07)

    656 =  Clinical Psychology Service (From 2006-07)

    657 =  Prosthetics Service (From 1 April 2004)

    658 =  Orthotics Service (From 1 April 2004)

    659 =  Dramatherapy Service (From 1 April 2004)

    660 =  Art Therapy Service (From 1 April 2004)

    661 =  Music Therapy Service (From 1 April 2004)

    662 =  Optometry Service (From 1 April 2004)

    663 =  Podiatric Surgery Service (From April 2013)

    670 =  Urological Physiology Service (From 1 April 2021)

    673 =  Vascular Physiology Service (From 1 April 2021)

    675 =  Cardiac Physiology Service (From 1 April 2021)

    677 =  Gastrointestinal Physiology Service (From 1 April 2021)

    700 =  Learning Disability Service

    710 =  Adult Mental Health Service

    711 =  Child and Adolescent Psychiatry Service

    712 =  Forensic Psychiatry Service

    713 =  Medical Psychotherapy Service

    715 =  Old Age Psychiatry Service (From 1990-91)

    720 =  Eating Disorders Service (From 2006-07)

    721 =  Addiction Service (From 2006-07)

    722 =  Liaison Psychiatry Service (From 2006-07)

    723 =  Psychiatric Intensive Care Service (From 2006-07)

    724 =  Perinatal Mental Health Service (From 2006-07)

    725 =  Mental Health Recovery and Rehabilitation Service (From April 2013)

    726 =  Mental Health Dual Diagnosis Service (From April 2013)

    727 =  Dementia Assessment Service (From April 2013)

    730 =  Neuropsychiatry Service (From 1 April 2021)

    800 =  Clinical Oncology Service

    811 =  Interventional Radiology Service (From 1 April 2004)

    812 =  Diagnostic Imaging Service (From 2008-09)

    822 =  Chemical Pathology Service

    834 =  Medical Virology Service (From 1 April 2004)

    840 =  Audiology Service (From 2008-09)

    920 =  Diabetic Education Service (From April 2013)

    Null = Other Maternity Event

    & = Not known'
  expr: TRETSPEF %in% c('100', '101', '102', '103', '104', '105', '106', '107', '108',
    '109', '110', '111', '113', '115', '120', '130', '140', '141', '142', '143', '144',
    '145', '150', '160', '161', '170', '171', '172', '173', '174', '180', '190', '191',
    '192', '200', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220',
    '221', '222', '223', '230', '240', '241', '242', '250', '251', '252', '253', '254',
    '255', '256', '257', '258', '259', '260', '261', '262', '263', '264', '270', '280',
    '290', '291', '300', '301', '302', '303', '304', '305', '306', '307', '308', '309',
    '310', '311', '313', '314', '315', '316', '317', '318', '319', '320', '321', '322',
    '323', '324', '325', '326', '327', '328', '329', '330', '331', '333', '335', '340',
    '341', '342', '343', '344', '345', '346', '347', '348', '350', '352', '360', '361',
    '370', '371', '400', '401', '410', '420', '421', '422', '424', '430', '431', '450',
    '451', '460', '461', '501', '502', '503', '504', '505', '560', '650', '651', '652',
    '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '670',
    '673', '675', '677', '700', '710', '711', '712', '713', '715', '720', '721', '722',
    '723', '724', '725', '726', '727', '730', '800', '811', '812', '822', '834', '840',
    '920', 'Null', '&')
  name: TRETSPEF values codes
- description: V Code Indicator is String(1)
  expr: is.character(VIND) & nchar(VIND) <= 1
  name: VIND String(1)
- description: "From 1989-90: \n1 = V290 - Neonate: normal care usually given by a\
    \ mother in a maternity neonatal ward, supervised by a midwife and doctor but\
    \ requiring minimal medical or nursing advice  \n2 = V291 - Neonate: special care\
    \ which provided observation and treatment falling short of intensive care but\
    \ exceeding routine care  \n3 = V292 - Neonate: intensive care which involved\
    \ continuous skills supervision by nursing and medical staff for at least one\
    \ hour or until death. Resuscitation carried out immediately after birth and completed\
    \ within an hour or so does not constitute intensive care  \n4 = V690 - Psychiatric:\
    \ not previously known to be admitted to a psychiatric hospital or hospital unit\
    \  \n5 = V691 - Psychiatric: previously admitted to a psychiatric hospital or\
    \ hospital unit of the provider  \n6 = V692 - Psychiatric: previously admitted\
    \ to a psychiatric hospital or a hospital unit of another provider  \n\nFor the\
    \ 1995-96 year only, the codes were changed to the following (see above for definitions):\
    \ \nV290 became U500  \nV291 became U501  \nV292 became U502 or U503 (U502 denoting\
    \ a level of care higher than that previously denoted by V291 but falling short\
    \ of the highest, for which U503 was used)  \nV690 became U510  \nV691 became\
    \ U511  \nV692 became U512  \n\nFrom 1996-97 this field was replaced by neocare\
    \ and admistat."
  expr: VIND %in% c('1', '2', '3', '4', '5', '6')
  name: VIND values codes
- description: Duration of Wait (Referral to Treatment Period) is Number
  expr: is.integer(WAITDAYS)
  name: WAITDAYS Number
- description: WAITDAYS 4n NHS Data Model and Dictionary
  expr: grepl("^\\d{4}$", WAITDAYS)
  name: WAITDAYS 4n
- description: '4n = Waiting time in days from 1 to 8887

    null = Not applicable / not known'
  expr: WAITDAYS %in% c('4n', 'null')
  name: WAITDAYS values codes
- description: Waiting Time Measurement Type (Commissioning Data Set) is String(2)
  expr: is.character(WAITING_TIME_MEASUREMENT_TYPE) & nchar(WAITING_TIME_MEASUREMENT_TYPE)
    <= 2
  name: WAITING_TIME_MEASUREMENT_TYPE String(2)
- description: '01 = Referral to Treatment period included in Referral to Treatment
    consultant-led waiting times measurement

    02 = Allied Health Professional Referral to Treatment measurement

    03 = Improving Access to Psychological Therapies Referral to Treatment measurement
    (retired 1 April 2020)

    04 = Early Intervention in Psychosis waiting time measurement (retired 1 April
    2020)

    09 = Other Referral to Treatment measurement type (not listed)'
  expr: WAITING_TIME_MEASUREMENT_TYPE %in% c('01', '02', '03', '04', '09')
  name: WAITING_TIME_MEASUREMENT_TYPE values codes
- description: Method of Admission - Waiting List is Number
  expr: is.integer(WAITLIST)
  name: WAITLIST Number
- description: Electoral Ward 1991 is String(9)
  expr: is.character(WARD91) & nchar(WARD91) <= 9
  name: WARD91 String(9)
- description: WARD91 6a NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{6}$", WARD91)
  name: WARD91 6a
- description: '6a = Electoral ward

    Y = Not known'
  expr: WARD91 %in% c('6a', 'Y')
  name: WARD91 values codes
- description: Electoral Ward In 1998 is String(8)
  expr: is.character(WARD98) & nchar(WARD98) <= 8
  name: WARD98 String(8)
- description: WARD98 6a NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{6}$", WARD98)
  name: WARD98 6a
- description: Ward Type at Start of Episode is String(7)
  expr: is.character(WARDSTRT) & nchar(WARDSTRT) <= 7
  name: WARDSTRT String(7)
- description: "A is as follows: \n71 = Home leave, non-psychiatric  \n72 = Home leave,\
    \ psychiatric  \n\nB is age as follows: \n1 = Neonates  \n2 = Children and adolescents\
    \  \n3 = Elderly  \n8 = Any age  \n9 = Invalid  \n\nC is sex as follows: \n8 =\
    \ Not specified  \n9 = Invalid  \n\nD is the hospital provider as follows: \n\
    1 = NHS hospital provider  \n2 = Non-NHS hospital provider  \n9 = Invalid  \n\n\
    E is the number of days in a week that the ward is open only during the day  \n\
    \nF is the number of days in a week that the ward is open at night"
  expr: WARDSTRT %in% c('71', '72', '1', '2', '3', '8', '9')
  name: WARDSTRT values codes
- description: Well Baby Flag is String(1)
  expr: is.character(WELL_BABY_IND) & nchar(WELL_BABY_IND) <= 1
  name: WELL_BABY_IND String(1)
- description: "Y = Well baby episode  \nN = Any other episode"
  expr: WELL_BABY_IND %in% c('Y', 'N')
  name: WELL_BABY_IND values codes
- description: Activity Location Type Code is String(3)
  expr: is.character(ACTIVITY_LOCATION_TYPE_CODE) & nchar(ACTIVITY_LOCATION_TYPE_CODE)
    <= 3
  name: ACTIVITY_LOCATION_TYPE_CODE String(3)
- description: Ambulance Call Identifier is String(20)
  expr: is.character(AMBULANCE_CALL_IDENTIFIER) & nchar(AMBULANCE_CALL_IDENTIFIER)
    <= 20
  name: AMBULANCE_CALL_IDENTIFIER String(20)
- description: AMBULANCE_CALL_IDENTIFIER max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", AMBULANCE_CALL_IDENTIFIER)
  name: AMBULANCE_CALL_IDENTIFIER max 20an
- description: Assessment Tool Completion Timestamp is String(25)
  expr: is.character(ASSESSMENT_TOOL_TIMESTAMP) & nchar(ASSESSMENT_TOOL_TIMESTAMP)
    <= 25
  name: ASSESSMENT_TOOL_TIMESTAMP String(25)
- description: ASSESSMENT_TOOL_TIMESTAMP max 25an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,25}$", ASSESSMENT_TOOL_TIMESTAMP)
  name: ASSESSMENT_TOOL_TIMESTAMP max 25an
- description: Care Contact Identifier (Ambulance Service) is String(20)
  expr: is.character(CARE_CONTACT_IDENTIFIER_) & nchar(CARE_CONTACT_IDENTIFIER_) <=
    20
  name: CARE_CONTACT_IDENTIFIER_ String(20)
- description: CARE_CONTACT_IDENTIFIER_ max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", CARE_CONTACT_IDENTIFIER_)
  name: CARE_CONTACT_IDENTIFIER_ max 20an
- description: Coded Clinical Entry is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY) & nchar(CODED_CLINICAL_ENTRY) <= 5
  name: CODED_CLINICAL_ENTRY String(5)
- description: Coded Clinical Entry Sequence Number is String(5)
  expr: is.character(CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER) & nchar(CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER)
    <= 5
  name: CODED_CLINICAL_ENTRY_SEQUENCE_NUMBER String(5)
- description: Coded Diagnosis Timestamp is String(25)
  expr: is.character(CODED_DIAGNOSIS_TIMESTAMP) & nchar(CODED_DIAGNOSIS_TIMESTAMP)
    <= 25
  name: CODED_DIAGNOSIS_TIMESTAMP String(25)
- description: CODED_DIAGNOSIS_TIMESTAMP max 25an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_DIAGNOSIS_TIMESTAMP)
  name: CODED_DIAGNOSIS_TIMESTAMP max 25an
- description: Coded Finding Timestamp is String(25)
  expr: is.character(CODED_FINDING_TIMESTAMP) & nchar(CODED_FINDING_TIMESTAMP) <=
    25
  name: CODED_FINDING_TIMESTAMP String(25)
- description: CODED_FINDING_TIMESTAMP max 25an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_FINDING_TIMESTAMP)
  name: CODED_FINDING_TIMESTAMP max 25an
- description: Coded Observation Timestamp is String(25)
  expr: is.character(CODED_OBSERVATION_TIMESTAMP) & nchar(CODED_OBSERVATION_TIMESTAMP)
    <= 25
  name: CODED_OBSERVATION_TIMESTAMP String(25)
- description: CODED_OBSERVATION_TIMESTAMP max 25an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,25}$", CODED_OBSERVATION_TIMESTAMP)
  name: CODED_OBSERVATION_TIMESTAMP max 25an
- description: Coded Procedure Timestamp is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CODED_PROCEDURE_TIMESTAMP)
  name: CODED_PROCEDURE_TIMESTAMP Date(YYYY-MM-DD)
- description: CODED_PROCEDURE_TIMESTAMP YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    CODED_PROCEDURE_TIMESTAMP)
  name: CODED_PROCEDURE_TIMESTAMP YYYY-MM-DD
- description: Commissioner Reference Identifier is String(20)
  expr: is.character(COMMISSIONER_REFERENCE) & nchar(COMMISSIONER_REFERENCE) <= 20
  name: COMMISSIONER_REFERENCE String(20)
- description: COMMISSIONER_REFERENCE max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", COMMISSIONER_REFERENCE)
  name: COMMISSIONER_REFERENCE max 20an
- description: Comorbidity is String(6-40000)
  expr: is.character(COMORBIDITY) & (6 <= nchar(COMORBIDITY)) & (nchar(COMORBIDITY)
    <= 40000)
  name: COMORBIDITY String(6-40000)
- description: Organisation Identifier (Conveying Ambulance Trust) is String(5)
  expr: is.character(CONVEYING_AMBULANCE_TRUST) & nchar(CONVEYING_AMBULANCE_TRUST)
    <= 5
  name: CONVEYING_AMBULANCE_TRUST String(5)
- description: Data Absent Reason (Fhir R4) is String(20)
  expr: is.character(DATA_ABSENT_REASON_) & nchar(DATA_ABSENT_REASON_) <= 20
  name: DATA_ABSENT_REASON_ String(20)
- description: DATA_ABSENT_REASON_ max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", DATA_ABSENT_REASON_)
  name: DATA_ABSENT_REASON_ max 20an
- description: Ward Intended Day Period Availability is String(1)
  expr: is.character(DAY_PERIOD_AVAILABILITY) & nchar(DAY_PERIOD_AVAILABILITY) <=
    1
  name: DAY_PERIOD_AVAILABILITY String(1)
- description: '0 = Zero Days

    1 = One Day

    2 = Two Days

    3 = Three Days

    4 = Four Days

    5 = Five Days

    6 = Six Days

    7 = Seven Days'
  expr: DAY_PERIOD_AVAILABILITY %in% c('0', '1', '2', '3', '4', '5', '6', '7')
  name: DAY_PERIOD_AVAILABILITY values codes
- description: Delivery Timestamp is String(25)
  expr: is.character(DELIVERY_TIMESTAMP) & nchar(DELIVERY_TIMESTAMP) <= 25
  name: DELIVERY_TIMESTAMP String(25)
- description: DELIVERY_TIMESTAMP max 25an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,25}$", DELIVERY_TIMESTAMP)
  name: DELIVERY_TIMESTAMP max 25an
- description: Diagnosis Scheme In Use  is String(2)
  expr: is.character(DIAGNOSIS_SCHEME_IN_USE_) & nchar(DIAGNOSIS_SCHEME_IN_USE_) <=
    2
  name: DIAGNOSIS_SCHEME_IN_USE_ String(2)
- description: Discharged To Nhs At Home Service Indicator is String(1)
  expr: is.character(DISCHARGED_TO_NHS_AT_HOME) & nchar(DISCHARGED_TO_NHS_AT_HOME)
    <= 1
  name: DISCHARGED_TO_NHS_AT_HOME String(1)
- description: 'Y = Yes - Discharged to NHS at Home Service

    N = No - Not discharged to NHS at Home Service

    9 = Not known whether the patient was discharged at NHS at Home Service'
  expr: DISCHARGED_TO_NHS_AT_HOME %in% c('Y', 'N', '9')
  name: DISCHARGED_TO_NHS_AT_HOME values codes
- description: Earliest Clinically Appropriate Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLIEST_APPROPRIATE_DATE)
  name: EARLIEST_APPROPRIATE_DATE Date(YYYY-MM-DD)
- description: EARLIEST_APPROPRIATE_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EARLIEST_APPROPRIATE_DATE)
  name: EARLIEST_APPROPRIATE_DATE YYYY-MM-DD
- description: Emed3 Fit Note Follow Up Assessment Required Indicator is String(1)
  expr: is.character(EMED_ASSESSMENT_REQUIRED) & nchar(EMED_ASSESSMENT_REQUIRED) <=
    1
  name: EMED_ASSESSMENT_REQUIRED String(1)
- description: 'Y = Yes - A Follow Up Care Contact is required at the end of the Emed3
    Fit Note Applicable Period

    N = No - A Follow Up Care Contact is not required at the end of the Emed3 Fit
    Note Applicable Period'
  expr: EMED_ASSESSMENT_REQUIRED %in% c('Y', 'N')
  name: EMED_ASSESSMENT_REQUIRED values codes
- description: Emed3 Fit Note Assessment Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE Date(YYYY-MM-DD)
- description: EMED3_ASSESSMENT_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_ASSESSMENT_DATE)
  name: EMED3_ASSESSMENT_DATE YYYY-MM-DD
- description: Emed3 Fit Note Condition (Snomed Ct Expression) is String(6-40000)
  expr: is.character(EMED3_CONDITION) & (6 <= nchar(EMED3_CONDITION)) & (nchar(EMED3_CONDITION)
    <= 40000)
  name: EMED3_CONDITION String(6-40000)
- description: Emed3 Fit Note Diagnosis (Icd) is String(6)
  expr: is.character(EMED3_DIAGNOSIS) & nchar(EMED3_DIAGNOSIS) <= 6
  name: EMED3_DIAGNOSIS String(6)
- description: Emed3 Fit Note Duration is String(3)
  expr: is.character(EMED3_DURATION) & nchar(EMED3_DURATION) <= 3
  name: EMED3_DURATION String(3)
- description: EMED3_DURATION max 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,3}$", EMED3_DURATION)
  name: EMED3_DURATION max 3an
- description: 'max 3an= Emed3

    999 = Emed3 Fit Note Is For an Indefinite Period'
  expr: EMED3_DURATION %in% c('max 3an', '999')
  name: EMED3_DURATION values codes
- description: Emed3 Fit Note End Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_END_DATE)
  name: EMED3_END_DATE Date(YYYY-MM-DD)
- description: EMED3_END_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_END_DATE)
  name: EMED3_END_DATE YYYY-MM-DD
- description: Emed3 Fit Note Issuer is String(2)
  expr: is.character(EMED3_FIT_NOTE_ISSUER) & nchar(EMED3_FIT_NOTE_ISSUER) <= 2
  name: EMED3_FIT_NOTE_ISSUER String(2)
- description: EMED3_FIT_NOTE_ISSUER 2an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{2}$", EMED3_FIT_NOTE_ISSUER)
  name: EMED3_FIT_NOTE_ISSUER 2an
- description: Emed3 Fit Note Recorded Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_RECORDED_DATE)
  name: EMED3_RECORDED_DATE Date(YYYY-MM-DD)
- description: EMED3_RECORDED_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_RECORDED_DATE)
  name: EMED3_RECORDED_DATE YYYY-MM-DD
- description: Emed3 Fit Note Start Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE Date(YYYY-MM-DD)
- description: EMED3_START_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    EMED3_START_DATE)
  name: EMED3_START_DATE YYYY-MM-DD
- description: Ethnic Category 2021 is String(3)
  expr: is.character(ETHNIC_CATEGORY_2021) & nchar(ETHNIC_CATEGORY_2021) <= 3
  name: ETHNIC_CATEGORY_2021 String(3)
- description: ETHNIC_CATEGORY_2021 max 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,3}$", ETHNIC_CATEGORY_2021)
  name: ETHNIC_CATEGORY_2021 max 3an
- description: Finding  (Snomed Ct) is String(4-6000)
  expr: is.character(FINDING) & (4 <= nchar(FINDING)) & (nchar(FINDING) <= 6000)
  name: FINDING String(4-6000)
- description: Last Episode In Spell Indicator Code is String(1)
  expr: is.character(LAST_EPISODE_IN_SPELL) & nchar(LAST_EPISODE_IN_SPELL) <= 1
  name: LAST_EPISODE_IN_SPELL String(1)
- description: '1 = This episode is the last episode in the Hospital Provider Spell

    2 = The episode is not the last episode in the Hospital Provider Spell

    9 = Not Known'
  expr: LAST_EPISODE_IN_SPELL %in% c('1', '2', '9')
  name: LAST_EPISODE_IN_SPELL values codes
- description: Latest Clinically Appropriate Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    LATEST_APPROPRIATE_DATE)
  name: LATEST_APPROPRIATE_DATE Date(YYYY-MM-DD)
- description: LATEST_APPROPRIATE_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    LATEST_APPROPRIATE_DATE)
  name: LATEST_APPROPRIATE_DATE YYYY-MM-DD
- description: Length Of Stay Adjustment (Rehabilitation) is Number
  expr: is.integer(LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT Number
- description: LENGTH_OF_STAY_ADJUSTMENT max 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,3}$", LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT max 3an
- description: Length Of Stay Adjustment (Specialist Palliative Care) is Number
  expr: is.integer(LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT Number
- description: LENGTH_OF_STAY_ADJUSTMENT max 3an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,3}$", LENGTH_OF_STAY_ADJUSTMENT)
  name: LENGTH_OF_STAY_ADJUSTMENT max 3an
- description: Organisation Identifier (Local Patient Identifier) is String(5)
  expr: is.character(ORGANISATION_LOCAL_PATIENT_IDENTIFIER) & nchar(ORGANISATION_LOCAL_PATIENT_IDENTIFIER)
    <= 5
  name: ORGANISATION_LOCAL_PATIENT_IDENTIFIER String(5)
- description: Local Sub-Specialty Code is String(8)
  expr: is.character(LOCAL_SUB-SPECIALTY_CODE) & nchar(LOCAL_SUB-SPECIALTY_CODE) <=
    8
  name: LOCAL_SUB-SPECIALTY_CODE String(8)
- description: NHS Service Agreement Identifier is String(20)
  expr: is.character(NHS_SERVICE_AGREEMENT_IDENTIFIER) & nchar(NHS_SERVICE_AGREEMENT_IDENTIFIER)
    <= 20
  name: NHS_SERVICE_AGREEMENT_IDENTIFIER String(20)
- description: NHS_SERVICE_AGREEMENT_IDENTIFIER max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", NHS_SERVICE_AGREEMENT_IDENTIFIER)
  name: NHS_SERVICE_AGREEMENT_IDENTIFIER max 20an
- description: NHS Service Agreement Line Identifier is String(20)
  expr: is.character(NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER) & nchar(NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER)
    <= 20
  name: NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER String(20)
- description: NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER)
  name: NHS_SERVICE_AGREEMENT_LINE_IDENTIFIER max 20an
- description: Ward Intended Night Period Availability is String(1)
  expr: is.character(NIGHT_PERIOD_AVAILABILITY) & nchar(NIGHT_PERIOD_AVAILABILITY)
    <= 1
  name: NIGHT_PERIOD_AVAILABILITY String(1)
- description: '0 = Zero Days

    1 = One Day

    2 = Two Days

    3 = Three Days

    4 = Four Days

    5 = Five Days

    6 = Six Days

    7 = Seven Days'
  expr: NIGHT_PERIOD_AVAILABILITY %in% c('0', '1', '2', '3', '4', '5', '6', '7')
  name: NIGHT_PERIOD_AVAILABILITY values codes
- description: Observation is String(4-6000)
  expr: is.character(OBSERVATION) & (4 <= nchar(OBSERVATION)) & (nchar(OBSERVATION)
    <= 6000)
  name: OBSERVATION String(4-6000)
- description: Observation Value is String(10)
  expr: is.character(OBSERVATION_VALUE) & nchar(OBSERVATION_VALUE) <= 10
  name: OBSERVATION_VALUE String(10)
- description: OBSERVATION_VALUE max 10an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,10}$", OBSERVATION_VALUE)
  name: OBSERVATION_VALUE max 10an
- description: Overseas Visitor Charging Category Applicable From Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_APPLICABLE_FROM)
  name: OVERSEAS_VISITOR_APPLICABLE_FROM Date(YYYY-MM-DD)
- description: OVERSEAS_VISITOR_APPLICABLE_FROM YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_APPLICABLE_FROM)
  name: OVERSEAS_VISITOR_APPLICABLE_FROM YYYY-MM-DD
- description: Overseas Visitor Charging Category is String(1)
  expr: is.character(OVERSEAS_VISITOR_CATEGORY) & nchar(OVERSEAS_VISITOR_CATEGORY)
    <= 1
  name: OVERSEAS_VISITOR_CATEGORY String(1)
- description: 'A = Standard NHS-funded PATIENT

    B = Immigration Health Surcharge payee

    C = Charge-exempt Overseas Visitor (European Economic Area)

    D = Chargeable European Economic Area PATIENTE = Charge-exempt Overseas Visitor
    (non-European Economic Area)

    F = Chargeable non-European Economic Area PATIENT

    P = Decision Pending on OVERSEAS VISITOR CHARGING CATEGORY

    9 = Not Known (Not Recorded)'
  expr: OVERSEAS_VISITOR_CATEGORY %in% c('A', 'B', 'C', 'D', 'F', 'P', '9')
  name: OVERSEAS_VISITOR_CATEGORY values codes
- description: Overseas Visitor Charging Category Applicable End Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_CHARGING_END)
  name: OVERSEAS_VISITOR_CHARGING_END Date(YYYY-MM-DD)
- description: OVERSEAS_VISITOR_CHARGING_END YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    OVERSEAS_VISITOR_CHARGING_END)
  name: OVERSEAS_VISITOR_CHARGING_END YYYY-MM-DD
- description: Patient Family Name is String(35)
  expr: is.character(PATIENT_FAMILY_NAME) & nchar(PATIENT_FAMILY_NAME) <= 35
  name: PATIENT_FAMILY_NAME String(35)
- description: Patient Full Name is String(70)
  expr: is.character(PATIENT_FULL_NAME) & nchar(PATIENT_FULL_NAME) <= 70
  name: PATIENT_FULL_NAME String(70)
- description: PATIENT_FULL_NAME max 70an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,70}$", PATIENT_FULL_NAME)
  name: PATIENT_FULL_NAME max 70an
- description: Patient Given Name is String(35)
  expr: is.character(PATIENT_GIVEN_NAME) & nchar(PATIENT_GIVEN_NAME) <= 35
  name: PATIENT_GIVEN_NAME String(35)
- description: Patient Initials  is String(35)
  expr: is.character(PATIENT_INITIALS) & nchar(PATIENT_INITIALS) <= 35
  name: PATIENT_INITIALS String(35)
- description: Patient Name Suffix is String(35)
  expr: is.character(PATIENT_NAME_SUFFIX) & nchar(PATIENT_NAME_SUFFIX) <= 35
  name: PATIENT_NAME_SUFFIX String(35)
- description: Patient Title is String(35)
  expr: is.character(PATIENT_TITLE) & nchar(PATIENT_TITLE) <= 35
  name: PATIENT_TITLE String(35)
- description: Patient Usual Address (Structured) is String(35)
  expr: is.character(PATIENT_USUAL_ADDRESS_STRUCTURED) & nchar(PATIENT_USUAL_ADDRESS_STRUCTURED)
    <= 35
  name: PATIENT_USUAL_ADDRESS_STRUCTURED String(35)
- description: Patient Usual Address (Unstructured) is String(175)
  expr: is.character(PATIENT_USUAL_ADDRESS_UNSTRUCTURED) & nchar(PATIENT_USUAL_ADDRESS_UNSTRUCTURED)
    <= 175
  name: PATIENT_USUAL_ADDRESS_UNSTRUCTURED String(175)
- description: Person Marital Status is String(1)
  expr: is.character(PERSON_MARITAL_STATUS) & nchar(PERSON_MARITAL_STATUS) <= 1
  name: PERSON_MARITAL_STATUS String(1)
- description: "From 1/10/2006 onwards: \nS = Single \nM = Married/Civil Partner \n\
    D = Divorced/Person whose Civil Partnership has been dissolved \nW = Widowed/Surviving\
    \ Civil Partner \nP = Separated \nN = Not disclosed. \n8 = Not applicable\n9 =\
    \ Not known\n\nPrior to 1/10/2006: \n1 = Single \n2 = Married, including separated\
    \ \n3 = Divorced \n4 = Widowed \n8 = Not applicable\n9 = Not known"
  expr: PERSON_MARITAL_STATUS %in% c('S', 'M', 'D', 'W', 'P', 'N', '8', '9', '1',
    '2', '3', '4')
  name: PERSON_MARITAL_STATUS values codes
- description: Person Score is String(5)
  expr: is.character(PERSON_SCORE) & nchar(PERSON_SCORE) <= 5
  name: PERSON_SCORE String(5)
- description: PERSON_SCORE max 5an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,5}$", PERSON_SCORE)
  name: PERSON_SCORE max 5an
- description: Present On Admission Indicator is String(1)
  expr: is.character(PRESENT_ON_ADMISSION_INDICATOR) & nchar(PRESENT_ON_ADMISSION_INDICATOR)
    <= 1
  name: PRESENT_ON_ADMISSION_INDICATOR String(1)
- description: 'Y = Patient Diagnosis Already Present

    N = Patient Diagnosis Not Already Present

    8 = Not Applicable (Indication Of This Patient Diagnosis On Admission Not Required
    Nationally)

    9 = Not Known Where The Patient Diagnosis Was Present On Admission'
  expr: PRESENT_ON_ADMISSION_INDICATOR %in% c('Y', 'N', '8', '9')
  name: PRESENT_ON_ADMISSION_INDICATOR values codes
- description: Procedure  is String(6-40000)
  expr: is.character(PROCEDURE) & (6 <= nchar(PROCEDURE)) & (nchar(PROCEDURE) <= 40000)
  name: PROCEDURE String(6-40000)
- description: Procedure Date is Date(YYYY-MM-DD)
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PROCEDURE_DATE)
  name: PROCEDURE_DATE Date(YYYY-MM-DD)
- description: PROCEDURE_DATE YYYY-MM-DD NHS Data Model and Dictionary
  expr: grepl("^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$",
    PROCEDURE_DATE)
  name: PROCEDURE_DATE YYYY-MM-DD
- description: Provider Reference Identifier is String(20)
  expr: is.character(PROVIDER_REFERENCE_IDENTIFIER) & nchar(PROVIDER_REFERENCE_IDENTIFIER)
    <= 20
  name: PROVIDER_REFERENCE_IDENTIFIER String(20)
- description: PROVIDER_REFERENCE_IDENTIFIER max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", PROVIDER_REFERENCE_IDENTIFIER)
  name: PROVIDER_REFERENCE_IDENTIFIER max 20an
- description: Direct Access Referral Indicator is String(1)
  expr: is.character(REFERRAL_INDICATOR) & nchar(REFERRAL_INDICATOR) <= 1
  name: REFERRAL_INDICATOR String(1)
- description: 'Y = Referred toa Direct Access Service

    N = Not Referred toa Direct Access Service

    9 = Not Known Whether The Patient Was Referred to a Direct Access Service'
  expr: REFERRAL_INDICATOR %in% c('Y', 'N', '9')
  name: REFERRAL_INDICATOR values codes
- description: Professional Registration Entry Identifier is String(32)
  expr: is.character(REGISTRATION_ENTRY_IDENTIFIER) & nchar(REGISTRATION_ENTRY_IDENTIFIER)
    <= 32
  name: REGISTRATION_ENTRY_IDENTIFIER String(32)
- description: Professional Registration Issuer Code is String(2)
  expr: is.character(REGISTRATION_ISSUER_CODE) & nchar(REGISTRATION_ISSUER_CODE) <=
    2
  name: REGISTRATION_ISSUER_CODE String(2)
- description: '02 = General Dental Council

    03 = General Medical Council

    04 = General Optical Council

    08 = Health and Care Professions Council

    09 = Nursing and Midwifery Council

    16 = General Pharmaceutical Council'
  expr: REGISTRATION_ISSUER_CODE %in% c('02', '03', '04', '08', '09', '16')
  name: REGISTRATION_ISSUER_CODE values codes
- description: Responsible Care Professional Indicator is String(1)
  expr: is.character(RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR) & nchar(RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR)
    <= 1
  name: RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR String(1)
- description: "Y = Yes - The\_Care Professional\_Has Overall Clinical Responsibility\
    \ For The\_Patient\nN = No - The\_Care Professional\_Does Not Have Overall Clinical\
    \ Responsibility For The\_Patient"
  expr: RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR %in% c('Y', 'N')
  name: RESPONSIBLE_CARE_PROFESSIONAL_INDICATOR values codes
- description: Service Code is String(12)
  expr: is.character(SERVICE_CODE) & nchar(SERVICE_CODE) <= 12
  name: SERVICE_CODE String(12)
- description: SERVICE_CODE max 20an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,20}$", SERVICE_CODE)
  name: SERVICE_CODE max 20an
- description: Social And Personal Circumstance (Snomed Ct Expression) is String(6-40000)
  expr: is.character(SOCIAL_AND_PERSONAL_CIRCUMSTANCE) & (6 <= nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE))
    & (nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE) <= 40000)
  name: SOCIAL_AND_PERSONAL_CIRCUMSTANCE String(6-40000)
- description: Social And Personal Circumstance Recorded Timestamp is String(25)
  expr: is.character(SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP) & nchar(SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP)
    <= 25
  name: SOCIAL_AND_PERSONAL_CIRCUMSTANCE_TIMESTAMP String(25)
- description: Rehabilitation Assessment Team Type is String(1)
  expr: is.character(TEAM_TYPE) & nchar(TEAM_TYPE) <= 1
  name: TEAM_TYPE String(1)
- description: "1 = Specialised Rehabilitation Team\n2 = Non-specialised Rehabilitation\
    \ Team\n8 = Not applicable - Activity is not Rehabilitation Assessment \n9 = Rehabilitation\
    \ Assessment Team Type not known"
  expr: TEAM_TYPE %in% c('1', '2', '8', '9')
  name: TEAM_TYPE values codes
- description: Ucum Unit Of Measurement is String(10)
  expr: is.character(UCUM_UNIT_OF_MEASUREMENT) & nchar(UCUM_UNIT_OF_MEASUREMENT) <=
    10
  name: UCUM_UNIT_OF_MEASUREMENT String(10)
- description: UCUM_UNIT_OF_MEASUREMENT max 10an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,10}$", UCUM_UNIT_OF_MEASUREMENT)
  name: UCUM_UNIT_OF_MEASUREMENT max 10an
- description: Ward Code is String(12)
  expr: is.character(WARD_CODE) & nchar(WARD_CODE) <= 12
  name: WARD_CODE String(12)
- description: WARD_CODE max 12an NHS Data Model and Dictionary
  expr: grepl("^[a-zA-Z0-9]{0,12}$", WARD_CODE)
  name: WARD_CODE max 12an
- description: Ward Intended Age Group is String(1)
  expr: is.character(WARD_INTENDED_AGE_GROUP) & nchar(WARD_INTENDED_AGE_GROUP) <=
    1
  name: WARD_INTENDED_AGE_GROUP String(1)
- description: '1 = Neonates

    2 = Children and/Or Adolescents

    3 = Elderly

    8 = any Age'
  expr: WARD_INTENDED_AGE_GROUP %in% c('1', '2', '3', '8')
  name: WARD_INTENDED_AGE_GROUP values codes
- description: Ward Intended Clinical Care Intensity is String(2)
  expr: is.character(WARD_INTENDED_INTENSITY) & nchar(WARD_INTENDED_INTENSITY) <=
    2
  name: WARD_INTENDED_INTENSITY String(2)
- description: "51 = For Intensive Care: Specially Designated Ward For Patients Needing\
    \ Containment and More Intensive Management. This Is Not to Be Confused With Intensive\
    \ Nursing Where Patients May Require One to One Nursing While On a Standard Ward\n\
    52 = For Short Stay: Patients Intended to Stay Less Than a Year\n53 = For Long\
    \ Stay: Patients Intended to Stay a Year Or More \n\nFor Patients With Learning\
    \ Disabilities:\n61 = Designated Or Interim Secure Unit\n62 = Patients Intending\
    \ to Stay Less Than a Year\n63 = Patients Intending to Stay a Year Or More\n\n\
    For Maternity Patients:\n41 = Only For Patients Looked After By Consultants\n\
    43 = Only For Patients Looked After By General Medical Practitioners\n42 = For\
    \ Joint Use By Consultants & General Medical Practitionersfor Neonates\n33 = Maternity:\
    \ Associated With The Maternity Ward In That Cots Are In The Maternity Ward Nursery\
    \ Or In The Ward Itself\n32 = Non-Maternity: Not Associated With The Maternity\
    \ Ward and Without Designated Cots For Intensive Care\n31 = Not Associated With\
    \ The Maternity Ward and In Which There Are Some Designated Cots For Intensive\
    \ Care\n\nFor The Younger Physically Disabled:\n21 = Spinal Units, Only Those\
    \ Units Which Are Nationally Recognised\n22 = Other Unitsfor Terminally Ill/Palliative\
    \ Care\n81 = Terminally Ill/Palliative Care\n\nFor General Patients:\n11 = For\
    \ Intensive Therapy, Including High Dependency Care\n12 = For Normal Therapy:\
    \ Where Resources Permit The Admission Of Patients Who Might Need All But Intensive\
    \ Or High Dependency Therapy\n13 = For Limited Therapy: Where Nursing Care Rather\
    \ Than Continuous Medical Care Is Provided. Such Wards Can Be Used Only For Patients\
    \ Carefully Selected and Restricted to a Narrow Range In Terms Of The Extent and\
    \ Nature Of Disease "
  expr: WARD_INTENDED_INTENSITY %in% c('51', '52', '53', '61', '62', '63', '41', '43',
    '42', '33', '32', '31', '21', '22', '81', '11', '12', '13')
  name: WARD_INTENDED_INTENSITY values codes
- description: Ward Intended Sex Of Patients is String(1)
  expr: is.character(WARD_INTENDED_SEX) & nchar(WARD_INTENDED_SEX) <= 1
  name: WARD_INTENDED_SEX String(1)
- description: '1 = Male

    2 = Female

    8 = Not Specified'
  expr: WARD_INTENDED_SEX %in% c('1', '2', '8')
  name: WARD_INTENDED_SEX values codes
- description: Ward Security Level is String(1)
  expr: is.character(WARD_SECURITY_LEVEL) & nchar(WARD_SECURITY_LEVEL) <= 1
  name: WARD_SECURITY_LEVEL String(1)
- description: '0 = General (Non-Secure)

    1 = Low Secure

    3 = Medium Secure

    3 = High Secure'
  expr: WARD_SECURITY_LEVEL %in% c('0', '1', '3')
  name: WARD_SECURITY_LEVEL values codes
- description: Withheld Identity Reason  is String(2)
  expr: is.character(WITHHELD_IDENTITY_REASON) & nchar(WITHHELD_IDENTITY_REASON) <=
    2
  name: WITHHELD_IDENTITY_REASON String(2)
- description: '01 = Record anonymised for legal/statutory reasons

    02 = Record anonymised at request of Caldicott Guardian

    03 = Record anonymised at request of PATIENT

    97 = Record anonymised for other reasons

    99 = Identity withheld but reasons not known'
  expr: WITHHELD_IDENTITY_REASON %in% c('01', '02', '03', '97', '99')
  name: WITHHELD_IDENTITY_REASON values codes
- description: HES Extract Year is Number
  expr: is.integer(YEAR)
  name: YEAR Number

...
